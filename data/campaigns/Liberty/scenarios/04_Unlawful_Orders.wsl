--textdomain wesnoth-l
Scenario{
    id: "04_Unlawful_Orders"
    name: _ "Unlawful Orders"
    next_scenario: "05_Hide_and_Seek"
    victory_when_enemies_defeated: true
    map: "campaigns/Liberty/maps/04_Unlawful_Orders.map"
    <TURNS(30, 22, 16)
    <DEFAULT_SCHEDULE!

    <INTRO_AND_SCENARIO_MUSIC("knolls.ogg", "the_city_falls.ogg")
    <EXTRA_SCENARIO_MUSIC("the_deep_path.ogg")
    <EXTRA_SCENARIO_MUSIC("legends_of_the_north.ogg")
    <EXTRA_SCENARIO_MUSIC("vengeful.ogg")

    label: {
        x: 16, y: 15
        text: _ "Elensefar"
    }

    label: {
        x: 8, y: 13
        text: _ "Port of Elensefar"
    }

    <LIBERTY_BIGMAP(JOURNEY_04_NEW!)

    side: {
        type: "Bandit"
        id: "Baldras"
        side: 1
        canrecruit: true
        controller: "human"
        recruit: {"Thug", "Footpad", "Poacher"}
        <GOLD(200, 150, 100)
        team_name: "good_guys"
        user_team_name: _ "Rebels"
    }

    <AI_CONTROLLER({}, 1, 2, {})

-- wmllint: directory spelling Maddock
    side: {
        type: "General"
        id: "Lord Maddock"
        name: _ "Lord Maddock"
        profile: "portraits/maddock.png"
        side: 2
        canrecruit: true
        controller: "ai"
        recruit: {"Spearman", "Horseman", "Cavalryman", "Heavy Infantryman", "Mage", "Bowman"}
        ai: {
            recruitment_pattern: {"scout", "mixed fighter", "fighter", "archer", "fighter"}
            leader_value: 3
            village_value: 0.2
        }
        <GOLD(100, 100, 70)
        team_name: "good_guys"
        user_team_name: _ "Rebels"
        <FLAG_VARIANT("loyalist")
    }

    <STARTING_VILLAGES(2, 15)

    side: {
        type: "General"
        id: "Kestrel"
        name: _ "Kestrel"
        side: 3
        canrecruit: true
        controller: "ai"
        recruit: {"Spearman", "Horseman", "Cavalryman", "Heavy Infantryman", "Dark Adept", "Bowman"}
        ai: {
            caution: 0.0
            aggression: 1.0
            recruitment_pattern: {"scout", "fighter", "fighter", "archer", "archer"}
            leader_value: 20
        }
        <GOLD(140, 180, 260)
        user_team_name: _ "Asheviere"
        <FLAG_VARIANT("loyalist")
    }

    <STARTING_VILLAGES(3, 5)

--
-- Prestart events
--
    event: {
        name: "prestart"
        do: ->
            Objectives{
                side: 1
                objective: {
                    description: _ "Defeat the enemy general"
                    condition: "win"
                }
                objective: {
                    description: _ "Death of Baldras"
                    condition: "lose"
                }
                objective: {
                    description: _ "Death of Harper"
                    condition: "lose"
                }
                objective: {
                    description: _ "Death of Maddock"
                    condition: "lose"
                }

                <TURNS_RUN_OUT!

                gold_carryover: {
                    bonus: true
                    carryover_percentage: 40
                }

                <AI_CONTROLLER_NOTE!
            }

            Store_Unit{
                filter: {
                    id: "Baldras"
                }

                kill: true
                variable: "stored_Baldras"
            }

            VARIABLE("stored_Baldras.facing", "sw")

            NAMED_LOYAL_UNIT(3, "Lieutenant", 17, 39, "Rothel", _ "Rothel")
            Unit{
                amend: true
                modifications: {
                    <TRAIT_QUICK!
                }
            }
    }

--
-- Starting conversation and actions
--
    event: {
        name: "start"
        do: ->
            Move_Unit_Fake{
                side: 1
                type: "Boat"
                x: {25, 23}
                y: {9, 11}
            }

            Item{
                x: 23, y: 11
                image: "units/transport/boat.png~FL(horiz)"
            }

            Move_Unit_Fake{
                side: 1
                type: stored_Baldras.type
                x: {23, 21}
                y: {11, 11}
            }

            Unstore_Unit{
                variable: "stored_Baldras"
            }

            Recall{
                id: "Harper"
            }
            Role{
                type: {"Huntsman", "Ranger", "Fugitive", "Highwayman", "Outlaw", "Trapper", "Bandit", "Footpad", "Poacher", "Thug"}
                role: "Advisor"
                auto_recall: {}
                not: {
                    id: {"Harper", "Baldras"}
                }
            }

            Message{
                speaker: "Lord Maddock"
                message: _ "Baldras, your trip here was not wise. The Queen’s patrols have been visiting the local villages and bringing the elders here. Those that swear allegiance to the Queen are allowed to return home. Those that do not—"
            }
            Message{
                speaker: "Baldras"
                message: _ "— Are dispatched on the spot. I know the price of dissent. But what of you?"
            }
            Message{
                speaker: "Lord Maddock"
                message: _ "Well, they do not come within the walls of my city. They are actually camped nearby, and the main garrison is further south at Halstead. I know my time will soon come to swear allegiance, but they do not press me. They are afraid I will refuse."
            }
            Message{
                speaker: "Baldras"
                message: _ "Will you?"
            }
            Message{
                speaker: "Lord Maddock"
                message: _ "Yes. The Queen ascended to the throne through the vilest of treachery. However, while most of my forces were sent with the King to fight the orcs, we have a strong enough contingent here to make the Queen’s forces think twice about attacking Elensefar outright."
            }
            Message{
                speaker: "Lord Maddock"
                message: _ "We have an uneasy peace until they are done with the smaller villages and finally come around to obtaining my oath. The treaty between Elensefar and Wesnoth is ancient, but I am not so naïve as to place my full trust in it. Not in these wicked times."
            }
            Message{
                speaker: "Harper"
                message: _ "What can we do then? We have brought with us many from Annuvin province who are willing to fight, but our families are still at home. They will not last long if the Queen’s patrols return."
            }
            Message{
                speaker: "Lord Maddock"
                message: _ "I am unwilling to start a civil war. I believe the Queen will remain preoccupied with order throughout the kingdom and, more importantly, with quelling the Northerner threat. We are a matter she will choose to deal with later rather than sooner, if she can."
            }
            Message{
                speaker: "Kestrel"
                message: _ "A foolish miscalculation, Lord Maddock. These men with which you consort are outlaws and fugitives. They are a well-organized gang of criminals and murderers. We will kill them and then expect your oath of allegiance to Queen Asheviere."
            }
            Message{
                speaker: "Lord Maddock"
                message: _ "Men, to arms! The defense of Elensefar has begun!"
            }

            CLEAR_VARIABLE("stored_Baldras")
    }

--
-- Special event - the human enemies become undead at night
--

    event: {
        name: "turn 4"
        do: ->
            Music{
                name: "frantic.ogg"
            }

            Message{
                speaker: "narrator"
                message: _ "As the sun set, a horrific change began to take place to the human adversaries of Baldras and his allies..."
                image: "wesnoth-icon.png"
            }
    }

    event: {
        name: "prestart"
        do: ->
            Set_Variables{
                name: "undead_transformation"

                value: {
                    human_type: "Spearman"
                    undead_type: "Skeleton"
                }
                value: {
                    human_type: "Swordsman"
                    undead_type: "Deathblade"
                }
                value: {
                    human_type: "Pikeman"
                    undead_type: "Revenant"
                }
                value: {
                    human_type: "Bowman"
                    undead_type: "Skeleton Archer"
                }
                value: {
                    human_type: "Longbowman"
                    undead_type: "Bone Shooter"
                }
                value: {
                    human_type: "Heavy Infantryman"
                    undead_type: "Ghoul"
                }
                value: {
                    human_type: "Shock Trooper"
                    undead_type: "Necrophage"
                }
                value: {
                    human_type: "Cavalryman"
                    undead_type: "Skeleton Rider"
                }
                value: {
                    human_type: "Dragoon"
                    undead_type: "Bone Knight"
                }
                value: {
                    human_type: "Lieutenant"
                    undead_type: "Death Squire"
                }
                value: {
                    human_type: "General"
                    undead_type: "Death Knight"
                }
                value: {
                    human_type: "Horseman"
                    undead_type: "Skeleton Rider"
                }
                value: {
                    human_type: "Knight"
                    undead_type: "Bone Knight"
                }
                value: {
                    human_type: "Lancer"
                    undead_type: "Bone Knight"
                }
            }
    }

    FALLBACK: () -> {
        if: {
            variable: {
                name: "type_to_turn_into"
                equals: null
            }
            then: ->
                Wml_Message{
                    logger: "error"
                    message: _ "Could not convert a #{stored_changers[#{i].type, please report!"
                }
                VARIABLE("type_to_turn_into", stored_changers[i].type)
            
        }
    }
    event: {
        name: "new turn"
        first_time_only: false
        do: ->
            VARIABLE("temp", turn_number)
            VARIABLE_OP("temp", "add", 2)
            VARIABLE_OP("temp", "modulo", 6)

            If{
                variable: {
                    name: "temp"
                    equals: 0
                }

                variable: {
                    name: "turn_number"
                    greater_than_equal_to: 4
                }

                then: ->
                    Color_Adjust{
                        red: 255
                        green: 100
                        blue: 100
                    }
                    Delay{
                        time: 10
                    }
                    Color_Adjust{
                        red: 0
                        green: 0
                        blue: 0
                    }
                    Redraw{
                    }

                    Disallow_Recruit{
                        side: 3
                        type: {"Spearman", "Horseman", "Cavalryman", "Heavy Infantryman", "Dark Adept", "Bowman"}
                    }
                    Allow_Recruit{
                        side: 3
                        type: {"Skeleton", "Skeleton Rider", "Dark Adept", "Skeleton Archer"}
                    }

                    Store_Unit{
                        filter: {
                            side: 3

                            not: {
                                type: {"Dark Adept", "Dark Sorcerer"}
                            }
                        }

                        kill: true
                        variable: "stored_changers"
                    }

                    For{
                        array: "stored_changers"
                        variable: "i"
                        do: ->
                            For{
                                array: "undead_transformation"
                                variable: "j"
                                do: ->
                                    If{
                                        variable: {
                                            name: "stored_changers[i].type"
                                            equals: undead_transformation[j].human_type
                                        }

                                        then: ->
                                            VARIABLE("type_to_turn_into", undead_transformation[j].undead_type)
                                            VARIABLE("j", 999)
                                        
                                    }
                                
                            }

                            FALLBACK!
                            Unit{
                                type: type_to_turn_into
                                side: 3
                                x: stored_changers[i].x, y: stored_changers[i].y
                                id: stored_changers[i].id
                                name: stored_changers[i].name
                                experience: stored_changers[i].experience
                                hitpoints: stored_changers[i].hitpoints
                                canrecruit: stored_changers[i].canrecruit
                                variables: {
                                    insert_tag: {
                                        name: "stored_trait"
                                        variable: "stored_changers[i].modifications.trait"
                                    }

                                    turned_to_undead_at_least_once: true
                                }
                                to_variable: "changer"
                            }
                            CLEAR_VARIABLE("type_to_turn_into")

                            If{
                                variable: {
                                    name: "changer.hitpoints"
                                    greater_than: changer.max_hitpoints
                                }

                                then: ->
                                    VARIABLE("changer.hitpoints", changer.max_hitpoints)
                                
                            }

                            Unstore_Unit{
                                variable: "changer"
                            }
                        
                    }

                    CLEAR_VARIABLE("stored_changers,changer")
                
            }
    }

    event: {
        name: "new turn"
        first_time_only: false
        do: ->
            VARIABLE("temp", turn_number)
            VARIABLE_OP("temp", "modulo", 6)

            If{
                variable: {
                    name: "temp"
                    equals: 1
                }

                variable: {
                    name: "turn_number"
                    greater_than_equal_to: 4
                }

                then: ->
                    Color_Adjust{
                        red: 255
                        green: 255
                        blue: 100
                    }
                    Delay{
                        time: 10
                    }
                    Color_Adjust{
                        red: 0
                        green: 0
                        blue: 0
                    }
                    Redraw{
                    }

                    Disallow_Recruit{
                        side: 3
                        type: {"Skeleton", "Skeleton Rider", "Dark Adept", "Skeleton Archer"}
                    }
                    Allow_Recruit{
                        side: 3
                        type: {"Spearman", "Horseman", "Cavalryman", "Heavy Infantryman", "Dark Adept", "Bowman"}
                    }

                    Store_Unit{
                        filter: {
                            side: 3

                            not: {
                                type: {"Dark Adept", "Dark Sorcerer"}
                            }
                        }

                        kill: true
                        variable: "stored_changers"
                    }

                    For{
                        array: "stored_changers"
                        do: ->
                            For{
                                array: "undead_transformation"
                                variable: "j"
                                do: ->
                                    If{
                                        variable: {
                                            name: "stored_changers[i].type"
                                            equals: undead_transformation[j].undead_type
                                        }

                                        then: ->
                                            VARIABLE("type_to_turn_into", undead_transformation[j].human_type)
                                            Break{}
                                        
                                    }
                                
                            }

                            FALLBACK!
                            If{
                                variable: {
                                    name: "stored_changers[i].variables.turned_to_undead_at_least_once"
                                    equals: true
                                }

                                then: ->
                                    Unit{
                                        type: type_to_turn_into
                                        side: 3
                                        x: stored_changers[i].x, y: stored_changers[i].y
                                        id: stored_changers[i].id
                                        name: stored_changers[i].name
                                        experience: stored_changers[i].experience
                                        hitpoints: stored_changers[i].hitpoints
                                        canrecruit: stored_changers[i].canrecruit
                                        modifications: {
                                            insert_tag: {
                                                name: "trait"
                                                variable: "stored_changers[i].variables.stored_trait"
                                            }
                                        }
                                        variables: {
                                            turned_to_undead_at_least_once: true
                                        }
                                        to_variable: "changer"
                                    }
                                

                                else: ->
                                    Unit{
                                        type: type_to_turn_into
                                        side: 3
                                        x: stored_changers[i].x, y: stored_changers[i].y
                                        experience: stored_changers[i].experience
                                        hitpoints: stored_changers[i].hitpoints
                                        canrecruit: stored_changers[i].canrecruit
                                        random_traits: true
                                        generate_name: true
                                        to_variable: "changer"
                                    }
                                
                            }
                            CLEAR_VARIABLE("type_to_turn_into")

                            If{
                                variable: {
                                    name: "changer.hitpoints"
                                    greater_than: changer.max_hitpoints
                                }

                                then: ->
                                    VARIABLE("changer.hitpoints", changer.max_hitpoints)
                                
                            }

                            Unstore_Unit{
                                variable: "changer"
                            }
                        
                    }

                    CLEAR_VARIABLE("stored_changers,changer")
                
            }
    }
    FALLBACK = nil

    event: {
        name: "turn 4"
        do: ->
            Message{
                speaker: "Harper"
                message: _ "I cannot believe what my eyes are seeing! The flesh runs from their bones... these are not human warriors we fight. They are evil spirits masquerading as human!"
            }
    }

    event: {
        name: "turn 7"
        do: ->
            Music{
                name: "knolls.ogg"
            }
            Message{
                speaker: "Lord Maddock"
                message: _ "Their human aspect is returning! This is an evil manner of sorcery we face, but one that we may yet overcome. CHARGE!"
            }
    }

--
-- Victory
--
    event: {
        name: "last breath"
        filter: {
            id: "Kestrel"
        }
        do: ->
            Message{
                speaker: "second_unit"
                message: _ "Who are you? What are you?"
            }
            Message{
                speaker: "Kestrel"
                message: _ "We are accursed. We were once under the command of Prince Eldred, the King’s son and betrayer. The price for our treason is this hellish existence. We know not who or what inflicted this curse upon us, but our mortal deaths may be only the beginning of the penance we are doomed to pay."
            }

            Kill{
                id: "Kestrel"
                animate: true
                fire_event: false
            }

            Message{
                speaker: "Baldras"
                message: _ "Lord Maddock, now that we are victorious, will you help us?"
            }
            Message{
                speaker: "Lord Maddock"
                message: _ "I will not. Unless you want me to round up the city’s thieves to fight for you, I do not have the troops to spare. However, I am not the only one who commands men in this corner of Wesnoth."
            }
            Message{
                speaker: "Baldras"
                message: _ "I don’t understand. There are no other noble lords in this area."
            }
            Message{
                speaker: "Lord Maddock"
                message: _ "Southeast of here there is a town, and there you may find assistance of the type I cannot give."
            }
            Message{
                speaker: "Baldras"
                message: _ "Wish us well. If we are to resist the Wesnoth army a second time, we’re going to need more than clubs and slings against steel."
            }

            CLEAR_VARIABLE("undead_transformation")
            CLEAR_VARIABLE("temp")

            Endlevel{
                result: "victory"
                bonus: true
                <NEW_GOLD_CARRYOVER(40)
            }
    }

--
-- Loss conditions - turns run out
--
    event: {
        name: "time over"
        do: ->
            Message{
                speaker: "Baldras"
                message: _ "Look, more riders come from the southeast. We cannot survive another assault. We are finished!"
            }
            Endlevel{
                result: "defeat"
            }
    }

    event: {
        name: "defeat"
        do: ->
            Message{
                speaker: "narrator"
                image: "wesnoth-icon.png"
                message: _ "Indeed, Asheviere’s armies had mustered and struck before the nascent rebellion could even be planned. Her power and ruthlessness — and their toll of death — would only grow greater with time."
            }
    }

    <LIBERTY_DEATHS!
}
