--textdomain wesnoth-sotbe

OLD_ORCISH_SHAMAN = (SIDE, X, Y, ID_STRING, NAME_STRING) -> {
    unit: {
        id: ID_STRING
        name: NAME_STRING
        unrenamable: true
        type: "Old Orcish Shaman"
        profile: "portraits/old_orcish_shaman.png"
        side: SIDE
        x: X
        y: Y
        random_traits: false
        <IS_HERO!
        modifications: {
            <TRAIT_LOYAL!
        }
    }
}

NOVICE_ORCISH_SHAMAN = (SIDE, X, Y, ID_STRING, NAME_STRING) -> {
    unit: {
        id: ID_STRING
        name: NAME_STRING
        unrenamable: true
        type: "Novice Orcish Shaman"
        profile: "portraits/young_orcish_shaman.png"
        side: SIDE
        x: X
        y: Y
        random_traits: false
        <IS_HERO!
        modifications: {
            <TRAIT_LOYAL!
        }
    }
}

ORCISH_SHAMAN = (SIDE, X, Y, ID_STRING, NAME_STRING) -> {
    unit: {
        id: ID_STRING
        name: NAME_STRING
        unrenamable: true
        type: "Orcish Shaman"
        profile: "portraits/orcish_shaman.png"
        side: SIDE
        x: X
        y: Y
        random_traits: false
        <IS_HERO!
        modifications: {
            <TRAIT_LOYAL!
        }
    }
}

BLACK_FLAG = () -> {
    flag: {"flags/black-flag-[1", 2, 1, "3].png:[100", 300, 100, "300]"}
    flag_icon: "flags/black-flag-icon.png"
}

RENAME_IF_DEAD = (VAR, NAME, STRING) -> {
    if: {
        variable: {
            name: VAR
            equals: true
        }
        then: ->
err: ../attic/data/campaigns/Son_Of_The_Black_Eye/utils/utils.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 69:             {MODIFY_UNIT id={NAME} name {STRING}}
        
    }
}

ALBROCK_SIDE = () -> {
    type: "Orcish Warlord"
    id: "Al'Brock"
    name: _ "Al’Brock"
    unrenamable: true
    side: 2
    canrecruit: true
    profile: "portraits/albrock.png"
    recruit: {"Wolf Rider", "Orcish Grunt", "Troll Whelp", "Orcish Archer", "Orcish Crossbowman", "Orcish Warrior"}
    team_name: "Kapoue"
    user_team_name: _ "Kapou’e"
    persistent: true
}

FLARTAR_SIDE = () -> {
    type: "Orcish Warlord"
    id: "Flar'Tar"
    name: _ "Flar’Tar"
    unrenamable: true
    side: 3
    canrecruit: true
    profile: "portraits/flartar.png"
    recruit: {"Wolf Rider", "Orcish Grunt", "Troll Whelp", "Orcish Archer", "Orcish Crossbowman", "Orcish Warrior"}
    team_name: "Kapoue"
    user_team_name: _ "Kapou’e"
    persistent: true
}

GREAT_HORDE_NOTE = () -> {
    note: {
        description: _ "The Great Horde: upkeep cost of every unit decreased by one."
    }
}

GOT_THE_GREAT_HORDE = (SIDES) -> {
    event: {
        name: "prerecruit"
        first_time_only: false

        filter: {
            side: SIDES
        }
        do: ->
            VARIABLE("unit.upkeep", unit.level)
            VARIABLE_OP("unit.upkeep", "sub", 1)
            VARIABLE("unit.variables.great_horde_upkeep_mod_applied", true)

            Unstore_Unit{
                variable: "unit"
                find_vacant: false
            }
    }

    event: {
        name: "start"
        do: ->
            Store_Unit{
                filter: {
                    side: SIDES

                    not: {
                        filter_wml: {
                            modifications: {
                                trait: {
                                    id: "loyal"
                                }
                            }
                        }
                    }

                    not: {
                        filter_wml: {
                            variables: {
                                great_horde_upkeep_mod_applied: true
                            }
                        }
                    }
                }

                kill: true
                variable: "horde_units"
            }

            Foreach{
                array: "horde_units"
                do: ->
                    VARIABLE("this_item.upkeep", this_item.level)
                    VARIABLE_OP("this_item.upkeep", "sub", 1)
                    VARIABLE("this_item.variables.great_horde_upkeep_mod_applied", true)

                    Unstore_Unit{
                        variable: "this_item"
                        find_vacant: false
                    }
                
            }

            CLEAR_VARIABLE("horde_units")
    }

    event: {
        name: "post_advance"
        first_time_only: false

        filter: {
            side: SIDES

            not: {
                filter_wml: {
                    modifications: {
                        trait: {
                            id: "loyal"
                        }
                    }
                }
            }
        }
        do: ->
            VARIABLE("unit.upkeep", unit.level)
            VARIABLE_OP("unit.upkeep", "sub", 1)
            VARIABLE("unit.variables.great_horde_upkeep_mod_applied", true)

            Unstore_Unit{
                variable: "unit"
                find_vacant: false
            }
    }
}
