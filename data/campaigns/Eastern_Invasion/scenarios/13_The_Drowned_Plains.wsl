--textdomain wesnoth-ei
Scenario{
    id: "13_The_Drowned_Plains"
    name: _ "The Drowned Plains"
    map: "campaigns/Eastern_Invasion/maps/13_The_Drowned_Plains.map"
    <TURNS(28, 26, 24)
    next_scenario: "14_Approaching_Weldyn"

    <DEFAULT_SCHEDULE!

    <INTRO_AND_SCENARIO_MUSIC("heroes_rite.ogg", "underground.ogg")
    <EXTRA_SCENARIO_MUSIC("knolls.ogg")
    <EXTRA_SCENARIO_MUSIC("the_king_is_dead.ogg")

    <EI_TRACK(JOURNEY_13_NEW!)

    side: {
        type: "Lieutenant"
        id: "Gweddry"
        name: _ "Gweddry"
        side: 1
        canrecruit: true
        controller: "human"
        team_name: "wesnothians"
        user_team_name: _ "Wesnothians"
        fog: true
        gold: 200
        <FLAG_VARIANT("loyalist")
    }

    side: {
        no_leader: true
        side: 2
        color: "blue"
        controller: "ai"
        team_name: "baddies"
        user_team_name: _ "Evil"
    }

    side: {
        side: 3
        color: "green"
        controller: "ai"
        team_name: "baddies"
        user_team_name: _ "Evil"
        gold: 0
        no_leader: true
        ai: {
--don't target any of the default things
            village_value: 0
            leader_value: 0
            goal: {
                name: "protect_unit"
                criteria: {
                    side: 3
                    canrecruit: true
                }
                value: 0
            }
--stay in the middle of the map
            avoid: {
                not: {
                    x: "14-32"
                    y: "10-45"
                }
            }
--and target anyone in it (otherwise it will have nothing to do when
--it can't attack in the current turn)
            goal: {
                name: "target"
                criteria: {
--who knows what would happen if it targetted itself
                    not: {
                        type: "Skeletal Dragon"
                    }
                    x: "14-32"
                    y: "10-45"
                }
                value: 100
            }
--I don't know if this is needed, but it sure would be stupid to use
--any grouping behavior when there's only one unit on this side!
            grouping: false
--not sure if this really does anything; it was copied from IP's code
            aggression: 1.0
            leader_aggression: 0.4
            caution: 0.0
        }

--give the skeletal dragon something to do when there are no
--enemies available let it look like it's wandering around
--semi-randomly
        ai: {
            leader_goal: {
                x: 14, y: 10
            }
            time_of_day: "dawn"
        }
        ai: {
            leader_goal: {
                x: 23, y: 26
            }
            time_of_day: "morning"
        }
        ai: {
            leader_goal: {
                x: 23, y: 26
            }
            time_of_day: "afternoon"
        }
        ai: {
            leader_goal: {
                x: 32, y: 32
            }
            time_of_day: "dusk"
        }
        ai: {
            leader_goal: {
                x: 32, y: 10
            }
            time_of_day: "first_watch"
        }
        ai: {
            leader_goal: {
                x: 14, y: 32
            }
            time_of_day: "second_watch"
        }
    }

    event: {
        name: "prestart"
        do: ->
            Objectives{
                side: 1
                objective: {
                    description: _ "Defeat Khrakrahs"
                    condition: "win"
                }
                objective: {
                    description: _ "Death of Gweddry"
                    condition: "lose"
                }
                objective: {
                    description: _ "Death of Dacyn"
                    condition: "lose"
                }
                objective: {
                    description: _ "Death of Owaec"
                    condition: "lose"
                }

                <TURNS_RUN_OUT!

                gold_carryover: {
                    bonus: true
                    carryover_percentage: 40
                }
            }

            Unit{
                type: "Skeletal Dragon"
                id: "Khrakrahs"
                name: _ "Khrakrahs"
                side: 3
                x: 28
                y: 23
                canrecruit: true
            }

--buff the dragon with some magic resistances
            Object{
                name: _ "Null Stone"
                duration: "forever"
                silent: true
                filter: {
                    id: "Khrakrahs"
                }

                effect: {
                    apply_to: "resistance"
                    replace: true
                    resistance: {
                        arcane: 60
                        cold: 30
                        fire: 60
                    }
                }
            }

-- Note: the code for the ambushers is mostly identical to that of
-- Crossroads in HttT.

-- Here we set up an array that holds the possible ambusher unit types.
-- We do this instead of just using a random type when creating the
-- ambusher so that the even distribution of different types is
-- guaranteed.

            VARIABLE("random_ambusher_type_table[0].type", "Bone Shooter")
            VARIABLE("random_ambusher_type_table[1].type", "Revenant")
            VARIABLE("random_ambusher_type_table[2].type", "Shadow")
            VARIABLE("random_ambusher_type_table[3].type", "Wraith")
            VARIABLE("random_ambusher_type_table[4].type", "Necrophage")

            if NORMAL
                VARIABLE("random_ambusher_type_table[5].type", "Banebow")
            

            if HARD
                VARIABLE("random_ambusher_type_table[5].type", "Banebow")
                VARIABLE("random_ambusher_type_table[6].type", "Spectre")
                VARIABLE("random_ambusher_type_table[7].type", "Nightgaunt")
            

            VARIABLE("random_ambusher_type_i", 0)

-- With this macro we place a set number of ambushers (from the above list) to a
-- given rectangular area. We do this in blocks so that we can guarantee that
-- every major area has at least some ambushers: if we randomized the ambush
-- locations across all possible locations at once, the RNG could theoretically
-- clump all the ambushers into a single corner of the map.

            UNDEAD_AMBUSH_AREA = (SIDE, X_SPAN, Y_SPAN, NUMBER) -> {
                random_placement: {
                    variable: "ambush_location"
                    num_items: NUMBER
                    filter_location: {
                        x: X_SPAN
                        y: Y_SPAN
                        terrain: "Ss"

                        filter_adjacent_location: {
                            not: {
                                terrain: "Ss"
                            }

                            not: {
                                filter: {
                                }
                            }
                        }
                    }
                    command: ->
                        VARIABLE("random_ambusher_type_i", "#{((#{random_ambusher_type_i + 1) % #{random_ambusher_type_table.length)")
                        Unit{
                            x: ambush_location.x, y: ambush_location.y
                            type: random_ambusher_type_table[random_ambusher_type_i].type
                            side: SIDE
                            role: "ambusher"
                            random_traits: true
                            upkeep: "loyal"
                        }

                        Object{
                            silent: true

                            filter: {
                                x: ambush_location.x, y: ambush_location.y
                            }

                            effect: {
                                apply_to: "new_ability"

                                abilities: {
                                    hides: {
                                        id: "undead_ambush"
                                        affect_self: true

                                        filter_self: {
                                            role: "ambusher"

                                            filter_location: {
                                                terrain: "Ss"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    
                }
            }

-- Only the number of ambushers differs by difficulty here.

            if EASY
                UNDEAD_AMBUSH_AREA(2, "1-27", "1-32", 25)
                UNDEAD_AMBUSH_AREA(2, "28-38", "1-21", 15)
                UNDEAD_AMBUSH_AREA(2, "38-45", "5-28", 10)
            
            if NORMAL
                UNDEAD_AMBUSH_AREA(2, "1-27", "1-32", 27)
                UNDEAD_AMBUSH_AREA(2, "28-38", "1-21", 19)
                UNDEAD_AMBUSH_AREA(2, "38-45", "5-28", 13)
            
            if HARD
                UNDEAD_AMBUSH_AREA(2, "1-27", "1-32", 29)
                UNDEAD_AMBUSH_AREA(2, "28-38", "1-21", 21)
                UNDEAD_AMBUSH_AREA(2, "38-45", "5-28", 16)
            

            CLEAR_VARIABLE("possible_ambush_locations")
            CLEAR_VARIABLE("random_ambusher_type_table")
            CLEAR_VARIABLE("random_ambusher_type_i")
            CLEAR_VARIABLE("ambusher")
    }

    event: {
        name: "turn refresh"
        first_time_only: false
        do: ->
            If{
                variable: {
                    name: "side_number"
                    numerical_equals: 2
                }

                then: ->
                    MODIFY_UNIT({side: 2, role: "ambusher"}, "moves", 0)
                
            }
    }

    event: {
        name: "moveto"
        first_time_only: false

        filter: {
            side: 1

            filter_adjacent: {
                side: 2
                role: "ambusher"
            }
        }
        do: ->
            MODIFY_UNIT({
                    side: 2
                    role: "ambusher"

                    filter_adjacent: {
                        x: x1, y: y1
                    }
err: ../attic/data/campaigns/Eastern_Invasion/scenarios/13_The_Drowned_Plains.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 343:         ) role not_ambusher}

                    redraw: {}
err: ../attic/data/campaigns/Eastern_Invasion/scenarios/13_The_Drowned_Plains.cfg - ./wml_to_wsl/compile.moon:31: Unbalanced WML! table closed by event at line 345

                event: {
                    name: "start"
                    do: ->
                        Recall{
                            id: "Dacyn"
                        }
                        Recall{
                            id: "Owaec"
                        }
                        Recall{
                            id: "Grug"
                        }
                        Recall{
                            id: "Engineer"
                        }
                        Recall{
                            id: "Terraent"
                        }
                        Message{
                            speaker: "Owaec"
                            message: _ "Now, we have reached the Horse Plains, the fair homeland of my people. They may be able to help us find—"
                        }
                        Message{
                            speaker: "Owaec"
                            message: _ "What?! Swamps?! Those undead have destroyed the grasslands of my House, and they shall pay for it!"
                        }
                        Message{
                            speaker: "Dacyn"
                            message: _ "The lich-lord must have flooded the valley. The undead like the swamp. It is death, decay, everything that they are themselves. I can sense them lurking in the swamps, waiting to ambush us."
                        }
                        Message{
                            speaker: "Engineer"
                            message: _ "I s’ppose we’ll hav’ to wade across it anyway... ugh."  -- wmllint: no spellcheck
                        }
                        Scroll_To{
                            x: 28, y: 23
                        }
                        Message{
                            caption: _ "Khrakrahs"
                            image: "units/unknown-unit.png"
                            message: _ "Findshhhh... slayhhhh... killhhhh..."   -- wmllint: no spellcheck
                        }
                        Message{
                            speaker: "Gweddry"
                            message: _ "What was that?!"
                        }
                        Message{
                            speaker: "Dacyn"
                            message: _ "That was the dragon Khrakrahs. He was a powerful beast indeed in the time of Haldric, living in the Northern Mountains. But he radiates a dark power these days, and I know not why he has taken up residence this far south. We must find him, and pray that he still has the Null Stone."
                        }
                }

                event: {
                    name: "sighted"
                    filter: {
                        id: "Khrakrahs"
                    }
                    filter_second: {
                        side: 1
                    }
                    do: ->
                        Fire_Event{
                            name: "KK_spotted"
                        }
                }
                event: {
                    name: "moveto"
                    filter: {
                        id: "Khrakrahs"
                        filter_vision: {
                            side: 1
                        }
                    }
                    do: ->
                        Fire_Event{
                            name: "KK_spotted"
                        }
                }

                event: {
                    name: "KK_spotted"
                    do: ->
                        Redraw{
                            side: 1
                        }
                        Scroll_To{
                            x: x1, y: y1
                        }
                        Message{
                            speaker: "Dacyn"
                            message: _ "Ah! It appears that the mighty Khrakrahs is no longer among the living. But this undead abomination does not appear weak to my arcane powers... he must still have the Null Stone!"
                        }
                }

                event: {
                    name: "enemies defeated"
                    do: ->
                        Endlevel{
                            result: "victory"
                            bonus: true
                            <NEW_GOLD_CARRYOVER(40)
                        }
                }

                event: {
                    name: "victory"
                    do: ->
                        Message{
                            speaker: "Dacyn"
                            message: _ "The Null Stone! With it we may finally defeat Mal-Ravanal!"
                        }

--not really necessary, but it's nice for a quest item to actually *do* something
--besides, this makes forcing Dacyn's recall during "The Duel" less annoying...
                        Object{
                            name: _ "Null Stone"
                            duration: "forever"
                            silent: true
                            filter: {
                                id: "Dacyn"
                            }

                            effect: {
                                apply_to: "resistance"
                                replace: true
                                resistance: {
                                    arcane: 30
                                    cold: 70
                                    fire: 50
                                }
                            }
                        }
                }

                <WESNOTH_DEFEAT!

                <HERODEATH_GWEDDRY!
                <HERODEATH_DACYN!
                <HERODEATH_OWAEC!
                <HERODEATH_GRUG!
                <HERODEATH_ENGINEER!
err: ../attic/data/campaigns/Eastern_Invasion/scenarios/13_The_Drowned_Plains.cfg - ./wml_to_wsl/compile.moon:31: Unbalanced WML! table closed by scenario at line 483
