--textdomain wesnoth-help

-- These are all direct clones of the mainline healing abilities, except that
-- they are set to exclude units suffering from dehydration. Dehydration is only
-- delayed by healers, so they must not actually heal a dehydrated unit any
-- hitpoints.
--
-- The ability macros go into wesnoth textdomain since the strings are identical
-- to their core counterparts, but the special notes belong to wesnoth-utbs.

UTBS_ABILITY_HEALS = () -> {
    heals: {
        value: 4
        id: "healing"
        affect_allies: true
        name: _ "heals +4"
        female_name: _ "female^heals +4"
        description: _ "Allows the unit to heal adjacent allied units at the beginning of our turn.

A unit cared for by this healer may heal up to 4 HP per turn, or stop poison from taking effect for that turn.
A poisoned unit cannot be cured of its poison by a healer, and must seek the care of a village or a unit that can cure."
        affect_self: false
        poison: "slowed"
        affect_adjacent: {
            filter: {
                not: {
                    status: "dehydration_slowed_by_healer"
                }
            }
        }
    }
}

UTBS_ABILITY_EXTRA_HEAL = () -> {
    heals: {
        value: 8
        id: "healing"
        affect_allies: true
        name: _ "heals +8"
        female_name: _ "female^heals +8"
        description: _ "This unit combines herbal remedies with magic to heal units more quickly than is normally possible on the battlefield.

A unit cared for by this healer may heal up to 8 HP per turn, or stop poison from taking effect for that turn.
A poisoned unit cannot be cured of its poison by a healer, and must seek the care of a village or a unit that can cure."
        affect_self: false
        poison: "slowed"
        affect_adjacent: {
            filter: {
                not: {
                    status: "dehydration_slowed_by_healer"
                }
            }
        }
    }
}

UTBS_ABILITY_CURES = () -> {
    <ABILITY_UNPOISON!
    <UTBS_ABILITY_EXTRA_HEAL!
}

--textdomain wesnoth-utbs

SPECIAL_NOTES_UTBS_HEALS = () -> {
err: ../attic/data/campaigns/Under_the_Burning_Suns/utils/abilities.cfg - ./wml_to_wsl/compile.moon:461: attempt to concatenate local 'node_type' (a nil value)

    SPECIAL_NOTES_UTBS_CURES = () -> {
err: ../attic/data/campaigns/Under_the_Burning_Suns/utils/abilities.cfg - ./wml_to_wsl/compile.moon:461: attempt to concatenate local 'node_type' (a nil value)

-- This is the Teaching ability owned by Garak

        ABILITY_TEACHING = () -> {
            dummy: {
                id: "teaching"
                name: _ "teaching"
                description: _ "At the start of every turn, this unit redistributes its experience points to all the units of the same side adjacent to it. If no suitable unit is adjacent, its experience just goes back to zero."
            }
        }

        WEAPON_SPECIAL_SHOCK = () -> {
-- Canned definition of the Shock ability to be included in a
-- [specials] clause.
            attacks: {
                id: "shock"
                name: _ "shock"
                name_inactive: _ "shock"
                description: _ "When this attack is used on offense, the opponent will retaliate with one less strike than normally, to a minimum of one strike."
                description_inactive: _ "When this attack is used on offense, the opponent will retaliate with one less strike than normally, to a minimum of one strike."
                sub: 1
                active_on: "offense"
                apply_to: "opponent"
                filter_base_value: {
                    greater_than: 1
                }
            }
        }

        ABILITY_FORMATION = () -> {
            dummy: {
                id: "formation"
                name: _ "formation"
                description: _ "This unit gains a +10% bonus to defense when another unit with the same ability is adjacent to it. However, this cannot raise the unit’s defense above 70%."
            }
        }

        ABILITY_DISENGAGE = () -> {
            dummy: {
                id: "disengage"
                name: _ "disengage"
                description: _ "If this unit doesn’t move before attacking, it will retain its movement points after the attack."
            }
        }

        WEAPON_SPECIAL_DAZE = () -> {
            dummy: {
                id: "daze"
                name: _ "daze"
                description: _ "When hit with this attack, an enemy suffers a 10% penalty both to their defense and chance to hit for one turn, except for magical attacks."
            }
        }

        ABILITY_DISTRACT = () -> {
            skirmisher: {
                id: "distract"
                name: _ "distract"
                description: _ "This unit negates enemy Zones of Control around itself for allied units (but not for itself)."
                affect_self: false
                affect_allies: true
                affect_adjacent: {
                }
            }
        }

        ABILITY_SUPPORT = () -> {
            dummy: {
                id: "support"
                name: _ "support"
                description: _ "The upkeep costs of adjacent friendly units are lowered by 1."
            }
        }

        SPECIAL_NOTES_SHOCK = () -> {
err: ../attic/data/campaigns/Under_the_Burning_Suns/utils/abilities.cfg - ./wml_to_wsl/compile.moon:461: attempt to concatenate local 'node_type' (a nil value)

            SPECIAL_NOTES_FORMATION = () -> {
err: ../attic/data/campaigns/Under_the_Burning_Suns/utils/abilities.cfg - ./wml_to_wsl/compile.moon:461: attempt to concatenate local 'node_type' (a nil value)

                SPECIAL_NOTES_DISENGAGE = () -> {
err: ../attic/data/campaigns/Under_the_Burning_Suns/utils/abilities.cfg - ./wml_to_wsl/compile.moon:461: attempt to concatenate local 'node_type' (a nil value)

                    SPECIAL_NOTES_DAZE = () -> {
err: ../attic/data/campaigns/Under_the_Burning_Suns/utils/abilities.cfg - ./wml_to_wsl/compile.moon:461: attempt to concatenate local 'node_type' (a nil value)

                        SPECIAL_NOTES_DISTRACT = () -> {
err: ../attic/data/campaigns/Under_the_Burning_Suns/utils/abilities.cfg - ./wml_to_wsl/compile.moon:461: attempt to concatenate local 'node_type' (a nil value)

                            ABILITY_DISENGAGE_EVENTS = () -> {
                                event: {
                                    name: "attack end"
                                    first_time_only: false

                                    filter: {
                                        ability: "disengage"

                                        not: {
                                            filter_wml: {
                                                moves: this_unit.max_moves
                                            }
                                        }
                                    }
                                    do: ->
                                        VARIABLE("unit.moves", 0)

                                        Unstore_Unit{
                                            variable: "unit"
                                            find_vacant: false
                                        }
                                }
                            }

                            WEAPON_SPECIAL_DAZE_EVENTS = () -> {
                                event: {
                                    id: "weapon_special_daze_event_1"
                                    name: "unit placed"
                                    first_time_only: false

                                    filter: {
                                        not: {
                                            has_attack: {
                                                special: "enemy_dazed"
                                            }
                                        }
                                    }
                                    do: ->
                                        Object{
                                            silent: true

                                            filter: {
                                                x: x1, y: y1
                                            }

                                            effect: {
                                                apply_to: "attack"
                                                not: {
                                                    special: "magical"
                                                }
                                                not: {
                                                    special: "marksman"
                                                }
                                                not: {
                                                    special: "enemy_dazed"
                                                }

                                                set_specials: {
                                                    mode: "append"

                                                    chance_to_hit: {
                                                        id: "enemy_dazed"
                                                        name: ""
                                                        description: ""
                                                        add: 10
                                                        filter_opponent: {
                                                            filter_wml: {
                                                                status: {
                                                                    dazed: true
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            effect: {
                                                apply_to: "attack"
                                                special: "marksman"
                                                and: {
                                                    special: "poison"
                                                }
                                                not: {
                                                    special: "enemy_dazed"
                                                }

-- Note: instead of simply appending, we have to use replace and
-- put marksman last because the +10% from daze must be applied
-- first; the other way around, the base value would already be
-- potentially modified by marksman
                                                set_specials: {
                                                    mode: "replace"

                                                    chance_to_hit: {
                                                        id: "enemy_dazed"
                                                        name: ""
                                                        description: ""
                                                        add: 10
                                                        active_on: "offense"
                                                        filter_base_value: {
                                                            greater_than_equal_to: 60
                                                        }
                                                        filter_opponent: {
                                                            filter_wml: {
                                                                status: {
                                                                    dazed: true
                                                                }
                                                            }
                                                        }
                                                    }
                                                    <WEAPON_SPECIAL_MARKSMAN!
                                                    <WEAPON_SPECIAL_POISON!
                                                    chance_to_hit: {
                                                        id: "enemy_dazed_marksman_defense"
                                                        name: ""
                                                        description: ""
                                                        add: 10
                                                        active_on: "defense"
                                                        filter_opponent: {
                                                            filter_wml: {
                                                                status: {
                                                                    dazed: true
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            effect: {
                                                apply_to: "attack"
                                                special: "marksman"
                                                not: {
                                                    special: "poison"
                                                }
                                                not: {
                                                    special: "enemy_dazed"
                                                }

-- Note: instead of simply appending, we have to use replace and
-- put marksman last because the +10% from daze must be applied
-- first; the other way around, the base value would already be
-- potentially modified by marksman
                                                set_specials: {
                                                    mode: "replace"

                                                    chance_to_hit: {
                                                        id: "enemy_dazed"
                                                        name: ""
                                                        description: ""
                                                        add: 10
                                                        active_on: "offense"
                                                        filter_base_value: {
                                                            greater_than_equal_to: 60
                                                        }
                                                        filter_opponent: {
                                                            filter_wml: {
                                                                status: {
                                                                    dazed: true
                                                                }
                                                            }
                                                        }
                                                    }
                                                    <WEAPON_SPECIAL_MARKSMAN!
                                                    chance_to_hit: {
                                                        id: "enemy_dazed_marksman_defense"
                                                        name: ""
                                                        description: ""
                                                        add: 10
                                                        active_on: "defense"
                                                        filter_opponent: {
                                                            filter_wml: {
                                                                status: {
                                                                    dazed: true
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                }

                                event: {
                                    id: "weapon_special_daze_event_2"
                                    name: "attacker hits"
                                    first_time_only: false

                                    filter_attack: {
                                        special: "daze"
                                    }

                                    filter_second: {
                                        not: {
                                            filter_wml: {
                                                status: {
                                                    dazed: true
                                                }
                                            }
                                        }
                                    }
                                    do: ->
                                        VARIABLE("second_unit.status.dazed", true)

                                        Unstore_Unit{
                                            variable: "second_unit"
                                            find_vacant: false
                                            text: _ "dazed"
                                            red: 196, green: 196, blue: 128
                                        }

                                        Object{
                                            silent: true

                                            filter: {
                                                x: x2, y: y2
                                            }

                                            effect: {
                                                apply_to: "attack"
                                                not: {
                                                    special: "magical"
                                                }
                                                not: {
                                                    special: "marksman"
                                                }
                                                not: {
                                                    special: "self_dazed"
                                                }

                                                set_specials: {
                                                    mode: "append"

                                                    chance_to_hit: {
                                                        id: "self_dazed"
                                                        name: ""
                                                        description: ""
                                                        sub: 10
                                                        filter_self: {
                                                            filter_wml: {
                                                                status: {
                                                                    dazed: true
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            effect: {
                                                apply_to: "attack"
                                                special: "marksman"
                                                and: {
                                                    special: "poison"
                                                }
                                                not: {
                                                    special: "self_dazed"
                                                }

                                                set_specials: {
                                                    mode: "replace"

                                                    chance_to_hit: {
                                                        id: "self_dazed"
                                                        name: ""
                                                        description: ""
                                                        sub: 10
                                                        active_on: "offense"
                                                        filter_base_value: {
                                                            greater_than_equal_to: 70
                                                        }
                                                        filter_self: {
                                                            filter_wml: {
                                                                status: {
                                                                    dazed: true
                                                                }
                                                            }
                                                        }
                                                    }
                                                    <WEAPON_SPECIAL_MARKSMAN!
                                                    <WEAPON_SPECIAL_POISON!
                                                    chance_to_hit: {
                                                        id: "self_dazed_marksman_defense"
                                                        name: ""
                                                        description: ""
                                                        sub: 10
                                                        active_on: "defense"
                                                        filter_self: {
                                                            filter_wml: {
                                                                status: {
                                                                    dazed: true
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            effect: {
                                                apply_to: "attack"
                                                special: "marksman"
                                                not: {
                                                    special: "poison"
                                                }
                                                not: {
                                                    special: "self_dazed"
                                                }

                                                set_specials: {
                                                    mode: "replace"

                                                    chance_to_hit: {
                                                        id: "self_dazed"
                                                        name: ""
                                                        description: ""
                                                        sub: 10
                                                        active_on: "offense"
                                                        filter_base_value: {
                                                            greater_than_equal_to: 70
                                                        }
                                                        filter_self: {
                                                            filter_wml: {
                                                                status: {
                                                                    dazed: true
                                                                }
                                                            }
                                                        }
                                                    }
                                                    <WEAPON_SPECIAL_MARKSMAN!
                                                    chance_to_hit: {
                                                        id: "self_dazed_marksman_defense"
                                                        name: ""
                                                        description: ""
                                                        sub: 10
                                                        active_on: "defense"
                                                        filter_self: {
                                                            filter_wml: {
                                                                status: {
                                                                    dazed: true
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                }

                                event: {
                                    id: "weapon_special_daze_event_3"
                                    name: "side turn"
                                    first_time_only: false
                                    do: ->
                                        Event{
                                            name: "side turn"
                                            delayed_variable_substitution: false

--{DEBUG_MSG "side $|side_number turn started, clearing daze from side $side_number units"}
                                            do: ->
                                                Modify_Unit{
                                                    filter: {
                                                        side: side_number
                                                        filter_wml: {
                                                            status: {
                                                                dazed: true
                                                            }
                                                        }
                                                    }

                                                    status: {
                                                        dazed: false
                                                    }
                                                }
                                        }
                                }
                            }

                            ABILITY_FORMATION_EVENTS = () -> {
                                event: {
                                    id: "ability_formation_event"
                                    name: "unit placed"
                                    first_time_only: false

                                    filter: {
                                        not: {
                                            side: 1
                                        }

                                        not: {
                                            filter_wml: {
                                                attack: {
                                                    specials: {
                                                        chance_to_hit: {
                                                            id: "formation_enemy_1"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    do: ->
                                        Object{
                                            silent: true

                                            filter: {
                                                id: unit.id
                                            }

                                            effect: {
                                                apply_to: "attack"

                                                set_specials: {
                                                    mode: "append"

                                                    chance_to_hit: {
                                                        id: "formation_enemy_1"
                                                        name: ""
                                                        description: ""
                                                        sub: 10
                                                        filter_base_value: {
                                                            greater_than: 30
                                                        }
                                                        filter_opponent: {
                                                            ability: "formation"

                                                            filter_adjacent: {
                                                                ability: "formation"
                                                                is_enemy: false
                                                                count: 1
                                                            }
                                                        }
                                                    }
                                                    chance_to_hit: {
                                                        id: "formation_enemy_2"
                                                        name: ""
                                                        description: ""
                                                        sub: 20
                                                        filter_base_value: {
                                                            greater_than: 40
                                                        }
                                                        filter_opponent: {
                                                            ability: "formation"

                                                            filter_adjacent: {
                                                                ability: "formation"
                                                                is_enemy: false
                                                                count: 2
                                                            }
                                                        }
                                                    }
                                                    chance_to_hit: {
                                                        id: "formation_enemy_3"
                                                        name: ""
                                                        description: ""
                                                        sub: 30
                                                        filter_base_value: {
                                                            greater_than: 50
                                                        }
                                                        filter_opponent: {
                                                            ability: "formation"

                                                            filter_adjacent: {
                                                                ability: "formation"
                                                                is_enemy: false
                                                                count: 3
                                                            }
                                                        }
                                                    }
                                                    chance_to_hit: {
                                                        id: "formation_enemy_4"
                                                        name: ""
                                                        description: ""
                                                        sub: 40
                                                        filter_base_value: {
                                                            greater_than: 60
                                                        }
                                                        filter_opponent: {
                                                            ability: "formation"

                                                            filter_adjacent: {
                                                                ability: "formation"
                                                                is_enemy: false
                                                                count: 4
                                                            }
                                                        }
                                                    }
                                                    chance_to_hit: {
                                                        id: "formation_enemy_5"
                                                        name: ""
                                                        description: ""
                                                        sub: 50
                                                        filter_base_value: {
                                                            greater_than: 70
                                                        }
                                                        filter_opponent: {
                                                            ability: "formation"

                                                            filter_adjacent: {
                                                                ability: "formation"
                                                                is_enemy: false
                                                                count: 5
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                }
                            }

                            ABILITY_SUPPORT_EVENTS = () -> {
                                event: {
                                    name: "unit placed"
                                    first_time_only: false

                                    filter: {
                                        side: 1

                                        not: {
                                            level: 0
                                        }

                                        filter_wml: {
                                            upkeep: "full"
                                        }

                                        filter_adjacent: {
                                            ability: "support"
                                        }
                                    }
                                    do: ->
                                        VARIABLE("unit.variables.original_upkeep", unit.upkeep)
                                        VARIABLE("unit.variables.upkeep_supported", true)
                                        VARIABLE("unit.upkeep", "#{(#{unit.level - 1)")

                                        Unstore_Unit{
                                            variable: "unit"
                                            find_vacant: false
                                            fire_event: false
                                        }
                                }

                                event: {
                                    name: "set_support_upkeep"
                                    first_time_only: false

                                    foreach: {
                                        array: "update_support_units"
                                        variable: "support_unit"

                                        do: ->
                                            If{
                                                have_unit: {
                                                    x: support_unit.x, y: support_unit.y

                                                    not: {
                                                        level: 0
                                                    }

                                                    filter_wml: {
                                                        upkeep: "full"
                                                    }

                                                    filter_adjacent: {
                                                        ability: "support"
                                                    }
                                                }

                                                then: ->
                                                    VARIABLE("support_unit.variables.original_upkeep", support_unit.upkeep)
                                                    VARIABLE("support_unit.variables.upkeep_supported", true)
                                                    VARIABLE("support_unit.upkeep", "#{(#{support_unit.level - 1)")
                                                

                                                else: ->
                                                    If{
                                                        have_unit: {
                                                            x: support_unit.x, y: support_unit.y

                                                            not: {
                                                                level: 0
                                                            }

                                                            filter_wml: {
                                                                variables: {
                                                                    upkeep_supported: true
                                                                }
                                                            }

                                                            not: {
                                                                filter_adjacent: {
                                                                    ability: "support"
                                                                }
                                                            }
                                                        }

                                                        then: ->
                                                            VARIABLE("support_unit.upkeep", support_unit.variables.original_upkeep)
                                                            VARIABLE("support_unit.variables.upkeep_supported", false)
                                                        

                                                        else: ->
                                                            Continue{}
                                                        
                                                    }
                                                
                                            }

                                            Unstore_Unit{
                                                variable: "support_unit"
                                                find_vacant: false
                                                fire_event: false
                                            }
                                        
                                    }
                                }

                                event: {
                                    name: "moveto"
                                    first_time_only: false

                                    filter: {
                                        side: 1
                                        ability: "support"
                                    }
                                    do: ->
                                        Store_Unit{
                                            filter: {
                                                filter_wml: {
                                                    upkeep: "full"
                                                }

                                                filter_adjacent: {
                                                    x: x1, y: y1
                                                }

                                                or: {
                                                    filter_wml: {
                                                        variables: {
                                                            upkeep_supported: true
                                                        }
                                                    }

                                                    filter_location: {
                                                        filter_adjacent_location: {
                                                            x: x2, y: y2
                                                        }
                                                    }
                                                }
                                            }

                                            kill: false
                                            variable: "update_support_units"
                                        }

                                        Fire_Event{
                                            name: "set_support_upkeep"
                                        }

                                        CLEAR_VARIABLE("update_support_units")

                                        On_Undo{
                                            store_unit: {
                                                filter: {
                                                    filter_wml: {
                                                        upkeep: "full"
                                                    }

                                                    filter_location: {
                                                        filter_adjacent_location: {
                                                            x: x2, y: y2
                                                        }
                                                    }

                                                    or: {
                                                        filter_wml: {
                                                            variables: {
                                                                upkeep_supported: true
                                                            }
                                                        }

                                                        filter_location: {
                                                            filter_adjacent_location: {
                                                                x: x1, y: y1
                                                            }
                                                        }
                                                    }
                                                }

                                                kill: false
                                                variable: "update_support_units"
                                            }

                                            fire_event: {
                                                name: "set_support_upkeep"
                                            }

                                            <CLEAR_VARIABLE("update_support_units")
                                        }

                                        On_Redo{
                                            store_unit: {
                                                filter: {
                                                    filter_wml: {
                                                        upkeep: "full"
                                                    }

                                                    filter_location: {
                                                        filter_adjacent_location: {
                                                            x: x1, y: y1
                                                        }
                                                    }

                                                    or: {
                                                        filter_wml: {
                                                            variables: {
                                                                upkeep_supported: true
                                                            }
                                                        }

                                                        filter_location: {
                                                            filter_adjacent_location: {
                                                                x: x2, y: y2
                                                            }
                                                        }
                                                    }
                                                }

                                                kill: false
                                                variable: "update_support_units"
                                            }

                                            fire_event: {
                                                name: "set_support_upkeep"
                                            }

                                            <CLEAR_VARIABLE("update_support_units")
                                        }

                                        Allow_Undo{
                                        }
                                }

                                event: {
                                    name: "moveto"
                                    first_time_only: false

                                    filter: {
                                        side: 1

                                        not: {
                                            ability: "support"
                                        }

                                        and: {
                                            filter_wml: {
                                                upkeep: "full"
                                            }

                                            filter_adjacent: {
                                                side: 1
                                                ability: "support"
                                            }

                                            or: {
                                                filter_wml: {
                                                    variables: {
                                                        upkeep_supported: true
                                                    }
                                                }

                                                not: {
                                                    filter_adjacent: {
                                                        side: 1
                                                        ability: "support"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    do: ->
                                        Store_Unit{
                                            filter: {
                                                x: x1, y: y1
                                            }

                                            kill: false
                                            variable: "update_support_units"
                                        }

                                        Fire_Event{
                                            name: "set_support_upkeep"
                                        }

                                        CLEAR_VARIABLE("update_support_units")

                                        On_Undo{
                                            store_unit: {
                                                filter: {
                                                    x: x2, y: y2
                                                }

                                                kill: false
                                                variable: "update_support_units"
                                            }

                                            fire_event: {
                                                name: "set_support_upkeep"
                                            }

                                            <CLEAR_VARIABLE("update_support_units")
                                        }

                                        On_Redo{
                                            store_unit: {
                                                filter: {
                                                    x: x1, y: y1
                                                }

                                                kill: false
                                                variable: "update_support_units"
                                            }

                                            fire_event: {
                                                name: "set_support_upkeep"
                                            }

                                            <CLEAR_VARIABLE("update_support_units")
                                        }

                                        Allow_Undo{
                                        }
                                }

                                event: {
                                    name: {"die", "post advance"}
                                    first_time_only: false

                                    filter: {
                                        side: 1
                                        ability: "support"
                                    }
                                    do: ->
                                        Store_Unit{
                                            filter: {
                                                side: 1

                                                filter_adjacent: {
                                                    x: x1, y: y1
                                                }
                                            }

                                            kill: false
                                            variable: "update_support_units"
                                        }

                                        Fire_Event{
                                            name: "set_support_upkeep"
                                        }

                                        CLEAR_VARIABLE("update_support_units")
                                }

                                event: {
                                    name: "post advance"
                                    first_time_only: false

                                    filter: {
                                        side: 1

                                        filter_adjacent: {
                                            ability: "support"
                                        }
                                    }
                                    do: ->
                                        Store_Unit{
                                            filter: {
                                                x: x1, y: y1
                                            }

                                            kill: false
                                            variable: "update_support_units"
                                        }

                                        Fire_Event{
                                            name: "set_support_upkeep"
                                        }

                                        CLEAR_VARIABLE("update_support_units")
                                }
                            }
