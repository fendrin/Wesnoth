--textdomain wesnoth-utbs
-- The file contains useful macros I use within the campaign

RANDOM_PLACEMENT_AREA = (X, Y, RADIUS) -> {
-- set a placement area for subsequent random placement of units
    store_locations: {
        x: X, y: Y
        radius: RADIUS
        variable: "random_placement_locations"
    }
}

PLACE_UNITS_RANDOMLY = (NUMBER, SIDE, TYPE, ROLE_STRING, NAME_STRING, TRAIT_WML) -> {
    repeat: {
        times: NUMBER
        do: ->
            RANDOM("0..#{(#{random_placement_locations.length - 1)")
            VARIABLE("random_placement_x", random_placement_locations[random].x)
            VARIABLE("random_placement_y", random_placement_locations[random].y)

            Unit{
                side: SIDE
                type: TYPE
                x: random_placement_x
                y: random_placement_y
                role: ROLE_STRING
                name: NAME_STRING
                animate: true
                <TRAIT_WML
            }
        
    }
}

CLEAR_PLACEMENT_AREA = () -> {
    <CLEAR_VARIABLE("random_placement_x")
    <CLEAR_VARIABLE("random_placement_y")
    <CLEAR_VARIABLE("random_placement_locations")
}

-- The amount of extra recruit cost is kept in $recruit_cost_extra; when this
-- macro is called for the first time, it'll disallow recruitment of
-- "Desert Fighter" and then allow recruitment of "Desert FighterX". The second
-- call then disallows recruitment of "Desert FighterY" and allows recruitment of
-- "Desert Fighter(X+Y)", and so on. After $recruit_cost_extra has reached 10,
-- nothing will happen anymore.

INCREASE_RECRUIT_COSTS = (X) -> {
    <VARIABLE("num", recruit_cost_extra)
    <VARIABLE_OP("recruit_cost_extra", "add", X)
    if: {
        variable: {
            name: "recruit_cost_extra"
            greater_than: 10
        }
        then: ->
            VARIABLE("recruit_cost_extra", 10)
        
    }

    <if UTBSNEW then {
--{DEBUG_MSG "disallowing: Quenoth Fighter$num,Tauroch Rider$num,Quenoth Scout$num,Quenoth Mystic$num"}
        disallow_recruit: {
            type: {"Quenoth Fighter#{num", "Tauroch Rider#{num", "Quenoth Scout#{num", "Quenoth Mystic#{num"}
            side: 1
        }

        <VARIABLE("num", recruit_cost_extra)
--{DEBUG_MSG "allowing: Quenoth Fighter$num,Tauroch Rider$num,Quenoth Scout$num,Quenoth Mystic$num"}
        allow_recruit: {
            type: {"Quenoth Fighter#{num", "Tauroch Rider#{num", "Quenoth Scout#{num", "Quenoth Mystic#{num"}
            side: 1
        }
    } else {
--{DEBUG_MSG "disallowing: Desert Fighter$num,Desert Archer$num,Desert Hunter$num,Desert Shaman$num,Desert Scout$num"}
        disallow_recruit: {
            type: {"Desert Fighter#{num", "Desert Archer#{num", "Desert Hunter#{num", "Desert Shaman#{num", "Desert Scout#{num"}
            side: 1
        }

        <VARIABLE("num", recruit_cost_extra)
--{DEBUG_MSG "allowing: Desert Fighter$num,Desert Archer$num,Desert Hunter$num,Desert Shaman$num,Desert Scout$num"}
        allow_recruit: {
            type: {"Desert Fighter#{num", "Desert Archer#{num", "Desert Hunter#{num", "Desert Shaman#{num", "Desert Scout#{num"}
            side: 1
        }
    }

    <CLEAR_VARIABLE("num")
}

UTBS_SHAKE_SCREEN = () -> {
    scroll: {
        x: 20
    }
    scroll: {
        x: -20
    }
    scroll: {
        x: 20
    }
    scroll: {
        x: -20
    }
}

-- To give the human units in scenarios 8 and 9 a more unique look, we shift
-- the blue steel colors to more of a bronze hue. Because the blue colors don't
-- adhere to an exact consistent palette, we can't use ~RC() for this but instead
-- we need to do it with a rather hacky formula.

ARMOR_SHIFT = (NEWCHAN, ORIGCHAN) -> {
err: ../attic/data/campaigns/Under_the_Burning_Suns/utils/macros.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 113: if(red <= green and green <= blue + 3, ({NEWCHAN} / 255.0)^2 * 255.0, {ORIGCHAN})#enddef

    ARMOR_SHIFT_IPF: () -> {
err: ../attic/data/campaigns/Under_the_Burning_Suns/utils/macros.cfg - ./wml_to_wsl/compile.moon:461: attempt to concatenate local 'node_type' (a nil value)

        LOYALIST_COLOR_SHIFT: () -> {
            event: {
                name: "unit placed"
                first_time_only: false

                filter: {
                    race: "human"

                    not: {
                        type_adv_tree: "Heavy Infantryman"
                    }

                    not: {
                        filter_wml: {
                            modifications: {
                                object: {
                                    armor_color_shift: true
                                }
                            }
                        }
                    }
                }
                do: ->
                    Object{
                        armor_color_shift: true
                        silent: true

                        effect: {
                            apply_to: "image_mod"
                            add: ARMOR_SHIFT_IPF!
                        }
                    }
            }
        }
}
