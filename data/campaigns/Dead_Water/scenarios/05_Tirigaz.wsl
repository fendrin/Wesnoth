--textdomain wesnoth-dw

-- This level is not too hard. Don't go too negative on gold, but
-- recruit three or four high-level units. You need mostly leveled
-- initiates for their magic ranged attacks. Keshan is a big help, and
-- so is the unit with the storm trident. If you decide to go after the
-- orc leader, wait until the undead are dispatched. Heal everyone,
-- then assemble just to the north of his keep. Don't touch the ships
-- or piers though! Wait until day time, then send in all the units
-- with magical attacks. Use other units to keep the slurbows
-- busy. Hopefully the leader won't kill anyone before your next
-- turn. One more round of magical attacks should kill him before his
-- recruits start beating you up. Killing the orc leader isn't really
-- necessary, but he helps someone level up, and he has a fair bit of
-- gold. The next level is much easier with lots of gold.

-- A lot of the code here is to activate the orc side if the mermen do
-- anything wrong, and keep it passive until then. There is also some
-- animation of the orcs coming out to tear down the keep after the
-- first turn.

Scenario{
    name: _ "Tirigaz"
    map: "campaigns/Dead_Water/maps/Tirigaz.map"

    id: "05_Tirigaz"
    next_scenario: "06_Uncharted_Islands"

    story: {
        part: {
            <DW_BIGMAP!
            story: _ "Farther up the coast was the port city of Tirigaz where Kai Laudiss had so soundly beaten the orcs. Bilheld was due west from there. The merfolk felt uneasy, so they took shelter in an abandoned orcish encampment as night fell."
        }
    }

    <DW_TRACK(JOURNEY_05_NEW!)

    <DEFAULT_SCHEDULE_DUSK!
    <TURNS4(18, 17, 16, 16)
    victory_when_enemies_defeated: false

    side: {
        <SIDE_1!
        <INCOME4(8, 7, 6, 6)
        <GOLD4(120, 120, 100, 100)
    }

    event: {
        name: "prestart"
        do: ->
            Music{
                name: "northerners.ogg"
            }
            Music{
                name: "legends_of_the_north.ogg"
                append: true
            }

-- wmllint: who RECALL_LOYAL_UNITS is Teeloa, Keshan
            RECALL_LOYAL_UNITS!

            Objectives{
                side: 1
                <HOW_TO_LOSE!
                objective: {
                    description: _ "Destroy all the undead"
                    condition: "win"
                }
                objective: {
                    <BONUS_OBJECTIVE_CAPTION!
                    description: _ "Also kill Marg-Tonz" .. EARLY_FINISH_BONUS_FOOTNOTE! .. OBJECTIVE_FOOTNOTE(_ "(you can destroy the undead first)")
                    condition: "win"
                }

                gold_carryover: {
                    carryover_percentage: 40
                }
            }

            Set_Variable{
                name: "orcs_passive"
                value: true
            }

            Item{
                x: 27
                y: 10
                image: "units/transport/transport-galleon.png~RC(magenta>orange)"
            }
            Item{
                x: 29
                y: 9
                image: "units/transport/galleon.png~RC(magenta>purple)"
            }
            Item{
                x: 22
                y: 5
                image: "units/transport/transport-galleon.png~RC(magenta>teal)"
            }
    }

    side: {
        side: 2
        controller: "ai"
        user_team_name: _ "Orcs"
        team_name: "neutral"

        id: "Marg-Tonz"
        name: _ "Marg-Tonz"
        canrecruit: true
        moves: 0
        type: "Orcish Sovereign"
        recruit: {"Wolf Rider", "Goblin Knight", "Goblin Pillager", "Orcish Archer", "Orcish Grunt", "Orcish Crossbowman", "Orcish Assassin", "Orcish Warrior", "Orcish Slurbow", "Orcish Warlord", "Orcish Slayer"}

        ai: {
            goal: {
                name: "target"
                criteria: {
                    side: 1
                }
                value: 1000
            }
            leader_value: 1000
        }

        gold: 0
        income: -10
        <FLAG_VARIANT6("ragged")
    }
    <STARTING_VILLAGES(2, 99)

    side: {
        side: 3
        controller: "ai"
        no_leader: true
        team_name: "bad guys"
        user_team_name: _ "Undead"
        ai: {
            aggression: 0.8
            goal: {
                name: "target"
                criteria: {
                    side: 1
                }
                value: 1000
            }
            goal: {
                name: "target"
                criteria: {
                    side: 2
                }
                value: 1
            }
            village_value: 0
-- Even though they are less attractive targets, the ghosts
-- will attack the orcs if they are in range and the mermen
-- aren't. We will keep the ghosts from attacking the orcs
-- by telling them to avoid the hexes around the guardians.
            avoid: {
                x: {14, 15, 16, 15, 16, 17, 22, 23, 24, 24, 25, 26, 29, 30, 31, 32, 33, 34, 31, 32, 33, 35, 36, 37}
                y: {"2-3", "2-4", "2-3", "9-10", "8-10", "9-10", "2-3", "2-4", "2-3", "12-13", "12-14", "12-13", "12-13", "11-13", "12-13", "7-8", "7-9", "7-8", "10-11", "9-11", "10-11", "15-16", "14-16", "15-16"}
            }
        }

        gold: 0
        <FLAG_VARIANT("undead")
    }

    <LIMIT_CONTEMPORANEOUS_RECRUITS(2, "Orcish Warlord", 3)
    <LIMIT_CONTEMPORANEOUS_RECRUITS(2, "Orcish Slurbow", 2)

    CITY_GUARD: (X, Y) -> {
        unit: {
            type: "Orcish Crossbowman"
            generate_name: true
            side: 2
            x: X
            y: Y
            modifications: {
                <TRAIT_LOYAL!
                <TRAIT_FEARLESS!
            }
            moves: 0
        }
    }

    event: {
        name: "prestart"
        do: ->
            CITY_GUARD(15, 3)
            CITY_GUARD(16, 9)
            CITY_GUARD(23, 3)
            CITY_GUARD(33, 8)
            CITY_GUARD(30, 12)
            CITY_GUARD(25, 13)
            CITY_GUARD(36, 15)
    }

    GHOST: (X, Y) -> {
        unit: {
            type: "Ghost"
            x: X
            y: Y
            side: 3
        }
    }

    WRAITH: (X, Y) -> {
        unit: {
            type: "Wraith"
            x: X
            y: Y
            side: 3
        }
    }

    event: {
        name: "start"
        do: ->
            Move_Unit_Fake{
                type: "Ghost"
                x: {14, 20}
                y: {20, 18}
            }

            Unit{
                type: "Ghost"
                id: "ghost scout"
                x: 20
                y: 18
                side: 3
            }

            Message{
                speaker: "ghost scout"
                message: _ "Found. Them."
            }

            GHOST(19, 20)
            GHOST(20, 19)
            GHOST(21, 20)
            GHOST(22, 20)
            WRAITH(19, 19)
            WRAITH(17, 19)
            WRAITH(18, 19)
            WRAITH(17, 18)
            WRAITH(20, 20)

            if NORMAL
                Unit{
                    type: "Spectre"
                    x: 17
                    y: 18
                    side: 3
                }
                Unit{
                    type: "Spectre"
                    x: 20
                    y: 20
                    side: 3
                }


            if HARD
                Unit{
                    type: "Spectre"
                    x: 17
                    y: 18
                    side: 3
                }
                Unit{
                    type: "Spectre"
                    x: 20
                    y: 20
                    side: 3
                }
                Unit{
                    type: "Shadow"
                    x: 20
                    y: 19
                    side: 3
                }
                Unit{
                    type: "Shadow"
                    x: 20
                    y: 19
                    side: 3
                }


            if NIGHTMARE
                Unit{
                    type: "Spectre"
                    x: 17
                    y: 18
                    side: 3
                }
                Unit{
                    type: "Spectre"
                    x: 20
                    y: 20
                    side: 3
                }
                Unit{
                    type: "Shadow"
                    x: 20
                    y: 19
                    side: 3
                }
                Unit{
                    type: "Shadow"
                    x: 20
                    y: 19
                    side: 3
                }
                Unit{
                    type: "Nightgaunt"
                    x: 20
                    y: 19
                    side: 3
                }
                Unit{
                    type: "Nightgaunt"
                    x: 20
                    y: 19
                    side: 3
                }


-- Count the undead because it's more robust than hardcoding
-- their number.
            Store_Unit{
                filter: {
                    side: 3
                }
                variable: "undead"
            }
            Foreach{
                array: "undead"
                do: ->
                    Set_Variable{
                        name: "number_of_undead"
                        add: 1
                    }

            }
            Clear_Variable{
                name: "undead"
            }

            Message{
                speaker: "Kai Krellis"
                message: _ "I feared this might happen. We tarried too long fighting the saurians, and the undead have caught up with us. The spirits may have trapped us here for the night, but in the morning we will..."
            }

            Message{
                speaker: "Marg-Tonz"
                message: _ "Whatâ€™s going on? What are you fish-men doing here? Are we constantly to be pestered by you creatures?"
            }

            Message{
                speaker: "Cylanna"
                message: _ "Heâ€™s one to complain about <i>that</i>..."
            }

            Message{
                speaker: "Kai Krellis"
                message: _ "We were just passing through."
            }

            Message{
                speaker: "Marg-Tonz"
                message: _ "Well, finish passing."
            }

            Message{
                speaker: "Kai Krellis"
                message: _ "Actually, we have some ghosts after us now, and we would like to shelter here for a while."
            }

            Message{
                speaker: "Marg-Tonz"
                message: _ "Forget about it! We donâ€™t want no trouble, but get off our land! Ghosts who donâ€™t like fish are your problem."
            }

            Message{
                speaker: "Kai Krellis"
                message: _ "If you give us a few hours to regroup and prepare our soldiers, we will go without causing you trouble."
            }

            Message{
                speaker: "Marg-Tonz"
                message: _ "You have one hour. After that, we are tearing down that old encampment. You stay in the water if you know whatâ€™s good for you. If you set foot...or whatever...on land again, weâ€™ll cut your throats. And stay off our piers. And donâ€™t touch the ships neither!"
            }

            Message{
                speaker: "Cylanna"
                message: _ "I wonder how he gets customers with manners like that."
            }

            Message{
                speaker: "Kai Krellis"
                message: _ "One hour will work for us. It will not take all of us to defeat the undead. " .. WHISPER(_ "We can decide what to do about the orc after that.")
            }

            Message{
                speaker: "narrator"
                message: _ "You will only be able to use your keep for one turn."
                image: "wesnoth-icon.png"
            }
    }

    WAKE_ORCS: () -> {
-- This variable removes their movement points every turn when it's yes:
        set_variable: {
            name: "orcs_passive"
            value: false
        }

        gold: {
            side: 2
            <if EASY then {
                amount: 200
            }
            <if NORMAL then {
                amount: 250
            }
            <if HARD then {
                amount: 300
            }
            <if NIGHTMARE then {
                amount: 350
            }
        }

        modify_side: {
            side: 2
            income: 0
        }
    }

    event: {
        name: "turn 2"

-- If, at the end of turn 2, (actually, beginning of turn 3)
-- the mermen are still ashore, the orcs attack.  The event
-- doesn't need to check for the turn being 3, because that's
-- the only way the mermen could be ashore with the orcs still
-- passive.
        do: ->
            Event{
                name: "side turn"
                first_time_only: false
                do: ->
                    If{
                        and: {
                            variable: {
                                name: "side_number"
                                equals: 2
                            }
                            variable: {
                                name: "orcs_passive"
                                equals: true
                            }
                            have_unit: {
                                side: 1
                                not: {
                                    filter_location: {
                                        terrain: {"Ww", "Wo", "Wwf"}
                                    }
                                }
                            }
                        }
                        then: ->
                            Message{
                                speaker: "Marg-Tonz"
                                message: _ "Youâ€™re still squatting on our land! I warned you."
                            }
                            WAKE_ORCS!

                    }
            }
    }

-- After turn 3, if the mermen touch land, the orcs attack.
    event: {
        name: "turn 3"
        do: ->
            Event{
                name: "moveto"
                first_time_only: true

                filter: {
                    side: 1
                    not: {
                        filter_location: {
                            terrain: {"Ww", "Wo", "Wwf"}
                        }
                    }
                }
                do: ->
                    If{
                        variable: {
                            name: "orcs_passive"
                            equals: true
                        }

                        then: ->
                            Message{
                                speaker: "Marg-Tonz"
                                message: _ "I told you to stay off our land! Now youâ€™re in for it."
                            }
                            WAKE_ORCS!


                        else: ->
                            Allow_Undo{
                            }

                    }
            }
    }

-- If a merman lands on a ship, the orcs attack.
    event: {
        name: "moveto"
        first_time_only: true

        filter: {
            side: 1
--ship locations
            x: {27, 29, 22}
            y: {10, 9, 5}
        }
        do: ->
            If{
                variable: {
                    name: "orcs_passive"
                    equals: true
                }

                then: ->
                    Message{
                        speaker: "Marg-Tonz"
                        message: _ "I told not to bother the ships! Now youâ€™re in for it."
                    }
                    WAKE_ORCS!


                else: ->
                    Allow_Undo{
                    }

            }
    }

-- If a mermen attacks an orc, the orcs can attack back:
    event: {
        name: "attack_end"
        first_time_only: true

        filter: {
            side: 1
        }
        filter_second: {
            side: 2
        }
        do: ->
            If{
                variable: {
                    name: "orcs_passive"
                    equals: true
                }

                then: ->
                    Message{
                        speaker: "Marg-Tonz"
                        message: _ "You crazy fish men are attacking us? After we tried to be nice? Thatâ€™s it. Weâ€™re going to end you once and for all."
                    }
                    WAKE_ORCS!


                else: ->
                    Allow_Undo{
                    }

            }
    }

-- Remove the orcs movement points each turn if the mermen have
-- stayed in the water.
    event: {
        name: "turn refresh"
        first_time_only: false
        do: ->
            If{
                variable: {
                    name: "orcs_passive"
                    equals: true
                }

                then: ->
                    Store_Unit{
                        filter: {
                            side: 2
                        }
                        kill: true
                        variable: "orcs"
                    }
                    Foreach{
                        array: "orcs"
                        do: ->
                            Set_Variable{
                                name: "this_item.moves"
                                value: 0
                            }
                            Unstore_Unit{
                                variable: "this_item"
                            }

                    }
                    Clear_Variable{
                        name: "orcs"
                    }

            }
    }

-- When a ghost is killed, check to see if it was the last one. If
-- it was, and the orc is gone, the player wins. Otherwise, he gets
-- the option to kill the orc.
    event: {
        name: "die"
        first_time_only: false

        filter: {
            side: 3
        }
        do: ->
            Set_Variable{
                name: "number_of_undead"
                sub: 1
            }

            If{
                variable: {
                    name: "number_of_undead"
                    equals: 0
                }

                then: ->
                    If{
                        not: {
                            have_unit: {
                                id: "Marg-Tonz"
                            }
                        }

                        then: ->
                            Message{
                                speaker: "Kai Krellis"
                                message: _ "Now maybe we can head west undisturbed."
                            }
                            Endlevel{
                                result: "victory"
                                <NEW_GOLD_CARRYOVER(40)
                            }


                        else: ->
                            Message{
                                speaker: "Kai Krellis"
                                message: _ "We have destroyed the undead."
                                option: {
                                    label: _ "Now maybe we can head west undisturbed."
                                    command: ->
                                        Endlevel{
                                            result: "victory"
                                            bonus: false
                                        }

                                }
                                option: {
                                    label: _ "This orc leader has not learned that threatening merfolk is a bad idea. We shall defeat him before we go."
                                }
                            }

                    }

            }
    }

-- If the ghost are gone, then killing Marg-Tonz ends the level. If
-- they are not, it doesn't.
    event: {
        name: "die"

        filter: {
            id: "Marg-Tonz"
        }

-- The chest looks better when it's offset 10px to the north
        do: ->
            Item{
                x: x1, y: y1
-- err: ../attic/data/campaigns/Dead_Water/scenarios/05_Tirigaz.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 703:             image=misc/blank-hex.png~BLIT(items/chest-open.png~CROP(0,10,72,62),0,0)
            }

            If{
                have_unit: {
                    x: x2, y: y2
                    race: "bats"
                }

                then: ->
                    Message{
                        speaker: "second_unit"
                        message: _ "Neep, neep!"
                    }

                    Message{
                        speaker: "Kai Krellis"
                        message: _ "It seems that orc was rich! He has a chest here with over 100 pieces of gold!"
                    }

                else: ->
                    Message{
                        speaker: "second_unit"
                        message: _ "It seems that orc was rich! He has a chest here with over 100 pieces of gold!"
                    }

            }

            Sound{
                name: "gold.ogg"
            }
            Gold{
                side: 1
                amount: 106
            }

            If{
                variable: {
                    name: "number_of_undead"
                    equals: 0
                }

                then: ->
                    Endlevel{
                        result: "victory"
                        <NEW_GOLD_CARRYOVER(40)
                    }

            }
    }

    event: {
        name: "last breath"
        filter: {
            id: "Marg-Tonz"
        }
        do: ->
            Message{
                speaker: "Marg-Tonz"
                message: _ "I hate mermen!"
            }
    }

-- In the next event, orcs come out of a village and stand next to
-- the keep. The keep disappears one hex at a time, and the orcs go
-- back to the village.
    REMOVE_KEEP: (X, Y) ->
        Delay{
            time: 200
        }
        Terrain{
            terrain: "Re"
            x: X
            y: Y
        }
        Redraw{
        }


    event: {
        name: "turn 2"
        do: ->
            Move_Unit_Fake{
                type: "Orcish Grunt"
                side: 2
                x: {36, 35, 34, 34, 34}
                y: {13, 18, 18, 19, 20}
            }
            Unit{
                type: "Orcish Grunt"
                x: 34
                y: 20
                side: 2
            }

            Move_Unit_Fake{
                type: "Orcish Grunt"
                side: 2
                x: {36, 37}
                y: {13, 18}
            }
            Unit{
                type: "Orcish Grunt"
                x: 37
                y: 18
                side: 2
            }

            Move_Unit_Fake{
                type: "Orcish Grunt"
                side: 2
                x: {36, 35}
                y: {13, 18}
            }
            Unit{
                type: "Orcish Grunt"
                x: 35
                y: 18
                side: 2
            }

            REMOVE_KEEP(36, 20)
            REMOVE_KEEP(35, 20)
            REMOVE_KEEP(35, 19)
            REMOVE_KEEP(36, 18)
            REMOVE_KEEP(36, 19)
            REMOVE_KEEP(37, 19)
            REMOVE_KEEP(37, 20)

-- In the following kill events, we need to be careful with
-- which unit weâ€™re killing, because Kai Krellis could be
-- standing where the grunt was supposed to. In that case, the
-- grunt will be misplaced by a hex.
            Kill{
                type: "Orcish Grunt"
                filter_location: {
                    x: 34
                    y: 20
                    radius: 1
                }
                animate: false
                fire_event: false
            }
            Move_Unit_Fake{
                type: "Orcish Grunt"
                side: 2
                x: {34, 34, 34, 35, 36}
                y: {20, 19, 18, 18, 13}
            }

            Kill{
                type: "Orcish Grunt"
                filter_location: {
                    x: 35
                    y: 18
                    radius: 1
                }
                animate: false
                fire_event: false
            }
            Move_Unit_Fake{
                type: "Orcish Grunt"
                side: 2
                x: {35, 36}
                y: {18, 13}
            }

            Kill{
                type: "Orcish Grunt"
                filter_location: {
                    x: 37
                    y: 18
                    radius: 1
                }
                animate: false
                fire_event: false
            }
            Move_Unit_Fake{
                type: "Orcish Grunt"
                side: 2
                x: {37, 36}
                y: {18, 13}
            }
    }

    -- REMOVE_KEEP = nil
    -- CITY_GUARD = nil
    -- GHOST = nil
    -- WRAITH = nil
    -- WAKE_ORCS = nil
    <HERO_DEATHS!
}
