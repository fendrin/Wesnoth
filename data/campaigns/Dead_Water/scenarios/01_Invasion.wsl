--textdomain wesnoth-dw

-- I think the key to this scenario is "Control the villages!" You get
-- a bunch of free citizens, so send them all directions and take as
-- many villages as possible right away. Recruit two level ones
-- (fighters or hunters) and the rest citizens this turn. Send those
-- two and two or three citizens straight south to get in a battle over
-- the group of villages there. Try not to lose the level one units,
-- but more importantly, don't let any bats get by you! Another level
-- one unit may be necessary in the lower middle of the map to keep the
-- bats from getting by. Initiates are very effective at bat disposal,
-- so use them. Send one more fighter or hunter and some citizens to
-- hold the north-east corner villages. Don't worry about the land
-- villages too much, but hold the ones in the water. Use Cylanna,
-- Gwabbo, and a few citizens to just hold off the skeletons and
-- soulless south east of your keep until the village situation is
-- under control. When it is, bring in more units to help them. Attack
-- during the day, but retreat and heal at night: You can't afford to
-- have very many units zombified. Also, rotate your units and use the
-- ZOC of Gwabbo and your level ones to sheild your wounded. Fighters
-- are the best for this because they can take some punishment. When
-- the map starts to thin out, circle most units around to the enemy
-- leader. Try to make some brawlers, and take Gwabbo's advice to get
-- Krellis as much experience as possible.

-- You can also just charge, and if you time it right, the leader should be poorly
-- defended because all his units will be off taking villages. Maybe.

-- The most complicated event here pops zombies out of villages taken by enemy
-- units. There is also a fair bit of animation and story events. One
-- event makes a black ghost rise from the corpse of the enemy leader
-- and disappear under the mountain. There is also some action around a
-- southern village.

Scenario{
    name: _ "Invasion!"
    map: "campaigns/Dead_Water/maps/Home_1.map"

    id: "01_Invasion"
    next_scenario: "02_Flight"

    story: {
        part: {
            <DW_BIGMAP!
            story: _ "In the Far North, where the Mountains of Dorth approach the coast, lies a bay with a narrow mouth. In the calm waters of this bay lies the merfolk city of Jotha. The natural harbor and the prosperity of the dwellers within drew many envious eyes, but none could match the prowess of the merfolk in their aquatic domain. In most years, orcs from the port city of Tirigaz, further north, would raid against Jotha as predictably as the spring rains; always, they were driven back to dry land with heavy losses, the salt water of the bay stinging their wounds."
        }

        part: {
            <DW_BIGMAP!
            story: _ "In 626 YW, Jotha was attacked by a larger raiding party than ever before. The king Kai Laudiss led his troops to repel the raiders. They were successful, but merfolk casualties were greater than usual. And numbered with the slain was the wife of Kai Laudiss. The kai’s grief was great, but his wrath was also fearsome to behold. He readied his army to follow the orcs. His stated purpose was not revenge, but the desire to secure the safety of Jotha with a demonstration of force that would teach the orcs to steer well clear of the merfolk. The merfolk army caught up with the orc band as it reached Tirigaz."
        }

        part: {
            <DW_BIGMAP!
            story: _ "Under the cover of darkness, the mermen slid into the bay, intending to launch a surprise attack at dawn. But the orcs were prepared for this, and had hastily devised a surprise of their own. Ships at the mouth of the bay that had seemed but derelict hulks disgorged hordes of orcs. More of them poured forth from the city. The merfolk were trapped, and found themselves vastly outnumbered."
        }

        part: {
            <DW_BIGMAP!
            story: _ "Kai Laudiss’s army fought fiercely, slaying five orcs for every warrior they lost. The kai himself fought with reckless abandon; foes fell with each swing of his great mace. The orcs discovered that trapped mermen were tougher than they had imagined, and found themselves fleeing into the forest to escape their vengeful spears. As the kai had intended, it was a defeat the orcs would not soon forget; but the cost was heavy. Kai Laudiss was felled by a poisoned orcish dart, and the greater part of his army was destroyed. When the remaining soldiers returned to Jotha, Krellis, the young son of Kai Laudiss, learned that he had become kai."
        }

        part: {
            <DW_BIGMAP!
            story: _ "Kai Krellis felt too young for the responsibilities of a kingdom, so he relied on the wisdom of a priestess named Cylanna. She had been a friend of his father, and he had known her as long as he could remember. Cylanna mourned the former kai, but believed that his sacrifice would allow Krellis to preside over an age of peace. Unfortunately, that was not to be. A new enemy appeared from under the mountains."
        }
    }

    <DW_TRACK(JOURNEY_01_NEW!)

    <DEFAULT_SCHEDULE!
    <TURNS4(30, 28, 26, 26)

    side: {
-- wmllint: who SIDE_1 is Kai Krellis
        <SIDE_1!
        <GOLD4(110, 110, 130, 130)
    }

    side: {
        side: 2
        controller: "ai"
        user_team_name: _ "Undead Forces"
        team_name: "bad guys"
        color: "teal"

        type: "Dark Sorcerer"
        id: "Mal-Kevek"
        name: _ "Mal-Kevek"
        canrecruit: true
        <FLAG_VARIANT("undead")

        <if EASY then {
            recruit: "Walking Corpse, Vampire Bat, Skeleton Archer, Skeleton"
            ai: {
                recruitment_pattern: {"fighter", "fighter", "archer", "scout"}
            }
        }

        <if NORMAL then {
            recruit: "Walking Corpse, Soulless, Vampire Bat, Skeleton Archer, Skeleton"
            ai: {
                recruitment_pattern: {"fighter", "fighter", "archer", "scout"}
            }
        }

        <if HARD then {
            recruit: "Walking Corpse, Soulless, Vampire Bat, Blood Bat, Skeleton Archer, Skeleton"
            ai: {
                recruitment_pattern: {"fighter", "fighter", "archer", "scout", "scout"}
            }
        }

        <if NIGHTMARE then {
            recruit: "Walking Corpse, Soulless, Vampire Bat, Blood Bat, Skeleton Archer, Skeleton"
            ai: {
                recruitment_pattern: {"fighter", "fighter", "archer", "scout", "scout", "scout"}
            }
        }

        <GOLD4(120, 160, 210, 250)
        <INCOME4(0, 2, 4, 6)

-- It's not fair if the enemy leader goes into the mountains
-- where the merfolk can't follow--even slowly We'll have the
-- leader avoid the mountains.
        ai: {
            avoid: {
                x: {43, 43, 43, 43, 43, 42, 42, 41, 41, 41, 40, 39, 38, 37, 36, 35, 33, 32}
                y: {13, 14, 15, 16, 17, 17, 18, 19, 20, 21, 22, 24, 25, 26, 26, 27, 27, 27}
            }
        }
    }

    <RECRUIT_UNIT_VARIATIONS(2, "Walking Corpse", "swimmer")
    <RECRUIT_UNIT_VARIATIONS(2, "Soulless", "swimmer")

    <LIMIT_RECRUITS(1, "Merman Hunter", 3)
    <LIMIT_RECRUITS(1, "Merman Fighter", 3)
    <LIMIT_RECRUITS(1, "Mermaid Initiate", 3)

    PUT_CITIZEN: (X, Y, TRAIT_1_NAME, TRAIT_2_NAME) -> {
        unit: {
            type: "Merman Citizen"
            side: 1
            x: X
            y: Y
-- wmlscope: start ignoring
            modifications: {
-- err: ../attic/data/campaigns/Dead_Water/scenarios/01_Invasion.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 150:             {TRAIT_{TRAIT_1_NAME}}
-- err: ../attic/data/campaigns/Dead_Water/scenarios/01_Invasion.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 151:             {TRAIT_{TRAIT_2_NAME}}
            }
-- wmlscope: stop ignoring
            generate_name: true
        }
    }

    SET_VILLAGE_ZOMBIE_PATTERN: (N1_AMOUNT, N2_AMOUNT, N3_AMOUNT, N4_AMOUNT, N5_AMOUNT, TYPE) -> {
        set_variables: {
            name: "zombie_number_pattern"
            mode: "replace"
            value: {
                number: N1_AMOUNT
            }
            value: {
                number: N2_AMOUNT
            }
            value: {
                number: N3_AMOUNT
            }
            value: {
                number: N4_AMOUNT
            }
            value: {
                number: N5_AMOUNT
            }
        }
        set_variable: {
            name: "zombie_type"
            value: TYPE
        }
    }

    event: {
        name: "prestart"
        do: ->
            Music{
                name: "the_king_is_dead.ogg"
            }
            Music{
                name: "vengeful.ogg"
                append: true
            }
            Music{
                name: "legends_of_the_north.ogg"
                append: true
            }

            Objectives{
                side: 1
                objective: {
                    description: _ "Defeat enemy leader"
                    condition: "win"
                }

                <HOW_TO_LOSE!

                gold_carryover: {
                    bonus: true
                    carryover_percentage: 40
                }
            }

            PUT_CITIZEN(19, 6, "INTELLIGENT", "STRONG")
            PUT_CITIZEN(21, 6, "STRONG", "RESILIENT")
            PUT_CITIZEN(14, 9, "QUICK", "INTELLIGENT")
            PUT_CITIZEN(26, 9, "RESILIENT", "QUICK")
            PUT_CITIZEN(19, 13, "STRONG", "QUICK")
            PUT_CITIZEN(21, 13, "RESILIENT", "INTELLIGENT")

            Unit{
                type: "Mermaid Priestess"
                modifications: {
                    <TRAIT_LOYAL!
                    <TRAIT_RESILIENT!
                }
                id: "Cylanna"
                name: _ "Cylanna"
                profile: "portraits/cylanna.png"
                side: 1
                x: 21
                y: 9
                <IS_HERO!
                unrenamable: true
            }

            Set_Variable{
                name: "number_of_captured_villages"
                value: 0
            }
            if EASY
                SET_VILLAGE_ZOMBIE_PATTERN(1, 1, 1, 2, 1, "Walking Corpse")


            if NORMAL
                SET_VILLAGE_ZOMBIE_PATTERN(1, 2, 1, 2, 2, "Walking Corpse")


            if HARD
                SET_VILLAGE_ZOMBIE_PATTERN(2, 2, 2, 2, 2, "Soulless")


            if NIGHTMARE
                SET_VILLAGE_ZOMBIE_PATTERN(2, 2, 1, 2, 3, "Soulless")

    }

    -- PUT_CITIZEN = nil
    -- SET_VILLAGE_ZOMBIE_PATTERN = nil

    event: {
        name: "start"
        do: ->
            Message{
                speaker: "Kai Krellis"
                message: _ "Is something wrong, priestess?"
            }

            Message{
                speaker: "Cylanna"
                message: _ "Maybe. I smell death and decay."
            }

            Scroll_To{
                x: 34
                y: 23
            }

            Unit{
                type: "Skeleton"
                side: 2
                x: 34
                y: 23
                animate: true
                id: "fiend"
            }
            Move_Unit{
                id: "fiend"
                to_x: 35
                to_y: 20
            }
            Capture_Village{
                x: 35, y: 20
                side: 2
            }
            Delay{
                time: 300
            }

            Unit{
                type: "Merman Netcaster"
                id: "Gwabbo"
                name: _ "Gwabbo"
                unrenamable: true
                side: 1
                x: 34
                y: 20
                hitpoints: 4
                modifications: {
                    <TRAIT_LOYAL!
                    <TRAIT_FEARLESS!
                }
                facing: "se"
                animate: true
                <IS_LOYAL!
                profile: "portraits/gwabbo.png"
            }

            Message{
                speaker: "Gwabbo"
                message: _ "Back, you fiend! You have not won...I will return to finish this."
            }

            MOVE_UNIT({id: "Gwabbo"}, 20, 10)

            Delay{
                time: 500
            }

            Message{
                speaker: "Gwabbo"
                message: _ "Kai! We are under attack! Fell creatures invaded our village and slew without mercy. I managed to fight my way clear, and have come to seek your aid."
            }

            Message{
                speaker: "Kai Krellis"
                message: _ "What manner of creatures were they?"
            }

            Message{
                speaker: "Gwabbo"
                message: _ "I have never seen their like before in all my years. They were like men, but they had no skin. Our spears went right through them; they <i>laughed</i> at our weapons. And they smelled like nothing in the sea, of dank earth and rottenness."
            }

            Message{
                speaker: "Cylanna"
                message: _ "Undead. This will be your first real test as a leader, Kai Krellis. You must defeat these creatures."
            }

            Message{
                speaker: "Gwabbo"
                message: _ "Kai, please lead us against them yourself, it will hearten the folk. And — if you will permit — you reach the age now where a kai must learn battle skills."
            }

            Message{
                speaker: "Cylanna"
                message: _ "Gwabbo speaks wisely. You must fight; I will protect you as much as I can...but when war looms, a kai must lead. It is our way."
            }

            Message{
                speaker: "narrator"
                message: _ "You have few trained fighters, so you can only recruit three of each level 1 unit. There is no limit on citizens."
                image: "wesnoth-icon.png"
                duration: 60
            }
    }

    PUT_CORPSE_SWIMMER: (X, Y) -> {
        unit: {
            <unless NIGHTMARE! then {
                type: "Walking Corpse"
            } else {
                type: "Soulless"
            }
            side: 2
            variation: "swimmer"
            x: X
            y: Y
            animate: true
        }
        delay: {
            time: 200
        }
    }

    event: {
        name: "side 2 turn"
        first_time_only: true
        do: ->
            Message{
                speaker: "Mal-Kevek"
                message: _ "Rise, my slaves! We will create an army for Lord Ravanal."
            }

            PUT_CORPSE_SWIMMER(34, 20)
            PUT_CORPSE_SWIMMER(34, 21)
            PUT_CORPSE_SWIMMER(35, 21)

            Message{
                speaker: "Cylanna"
                message: _ "He is raising our dead to fight against us! Even though they were your own citizens, Krellis, show no mercy. Destroy them if you can."
            }
    }

    -- PUT_CORPSE_SWIMMER = nil

    event: {
        name: "last breath"
        filter: {
            id: "Mal-Kevek"
        }
        do: ->
            Store_Unit{
                filter: {
                    id: "Mal-Kevek"
                }
                variable: "MK"
            }

            Message{
                id: "Mal-Kevek"
                message: _ "Foolish fish-men. You cannot kill <i>me</i> that easily."
            }

            Message{
                speaker: "narrator"
                message: _ "The merfolk saw a shadowy shape rise from the dead body of the necromancer and disappear under the mountain."
                image: "wesnoth-icon.png"
            }
    }

    event: {
        name: "die"
        filter: {
            id: "Mal-Kevek"
        }
        do: ->
            Move_Unit_Fake{
                type: "Dark Shape"
                x: {MK.x, 37, 37, 36, 35, 34, 33, 34}
                y: {MK.y, 25, 26, 26, 27, 26, 26, 24}
                side: 2
            }

            Sound{
                name: "wail-long.wav"
            }

            CLEAR_VARIABLE("MK")
    }

-- Zombies are spawned manually during the starting sequence, so we
-- won't zombify villages until after turn 1 is over:
    event: {
        name: "turn 2"

-- Because of the manual spawning we have to add this village
-- manually to the list, to avoid the event below working on it again
        do: ->
            Set_Variable{
                name: "zombified_villages[number_of_captured_villages].location"
                value: "35_20"
            }
            Set_Variable{
                name: "number_of_captured_villages"
                add: 1
            }

-- Pop up a couple zombies when the bad guys capture a village
-- for the first time. (Recapturing doesn't do anything.)
            Event{
                name: "capture"
                first_time_only: false

                filter: {
                    side: 2
                }

-- Check to see if the village has been taken over before.
-- First, get the location:
                do: ->
                    Set_Variable{
                        name: "village_location"
-- err: ../attic/data/campaigns/Dead_Water/scenarios/01_Invasion.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 482:                 value=$x1|_$y1
                    }

-- Loop through the zombified villages to see if that
-- location has already been stored:
                    Foreach{
                        array: "zombified_villages"
                        do: ->
                            If{
                                variable: {
                                    name: "village_location"
                                    equals: this_item.location
                                }

                                then: ->
                                    Set_Variable{
                                        name: "already_zombified"
                                        value: true
                                    }

                            }

                    }

-- If the village's location was not found in the
-- array, it hasn't been taken over yet, so zombify
-- it:
                    If{
                        variable: {
                            name: "already_zombified"
                            not_equals: true
                        }
                        then: ->
-- Note that it *is* taken over now by
-- saving the location in the array:
                            Set_Variable{
                                name: "zombified_villages[number_of_captured_villages].location"
-- err: ../attic/data/campaigns/Dead_Water/scenarios/01_Invasion.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 519:                         value=$x1|_$y1
                            }

-- If it is a merman village, set
-- zombie_variation to swimmer.
-- Otherwise, make normal zombies:
                            If{
                                have_location: {
                                    terrain: {"Ww^Vm", "Ss^Vm"}
                                    x: x1
                                    y: y1
                                }
                                then: ->
                                    Set_Variable{
                                        name: "zombie_variation"
                                        value: "swimmer"
                                    }

                                else: ->
                                    Set_Variable{
                                        name: "zombie_variation"
                                        value: "none"
                                    }

                            }

-- Get the number of zombies from the list of numbers:
                            Repeat{
                                times: zombie_number_pattern[number_of_captured_villages % 5].number
                                do: ->
                                    if HARD
                                        If{
                                            variable: {
                                                name: "zombie_type"
                                                equals: "Soulless"
                                            }
                                            then: ->
                                                Set_Variable{
                                                    name: "zombie_type"
                                                    value: "Walking Corpse"
                                                }

                                            else: ->
                                                Set_Variable{
                                                    name: "zombie_type"
                                                    value: "Soulless"
                                                }

                                        }

                                    Unit{
                                        type: zombie_type
                                        side: unit.side
                                        variation: zombie_variation
                                        x: x1
                                        y: y1
                                        moves: 0
                                        attacks_left: 0
                                        animate: true
                                    }

                            }

-- The second time this happens, warn the player that this will
-- keep happening (in case it's not obvious yet):
                            If{
                                variable: {
                                    name: "number_of_captured_villages"
                                    equals: 2
                                }
                                then: ->
                                    Redraw{}
                                    Message{
                                        speaker: "Kai Krellis"
                                        message: _ "He is raising the dead from every village!"
                                    }
                                    Message{
                                        speaker: "Gwabbo"
                                        message: _ "This will be a dark day, but we <i>will</i> prevail."
                                    }

                            }

                            Set_Variable{
                                name: "number_of_captured_villages"
                                add: 1
                            }

                            CLEAR_VARIABLE("zombie_variation")
                            CLEAR_VARIABLE("already_zombified")
                            CLEAR_VARIABLE("village_location")

                    }
            }
    }

    event: {
        name: "die"
        filter_second: {
            id: "Kai Krellis"
        }
        do: ->
            Message{
                speaker: "Kai Krellis"
                message: _ "Hey, I did it!"
            }
            Message{
                speaker: "Gwabbo"
                message: _ "Good work Kai, if I may say so."
            }
    }

    event: {
        name: "enemies defeated"
        do: ->
            CLEAR_VARIABLE("side_1_limited_recruits")
            CLEAR_VARIABLE("zombified_villages")
            CLEAR_VARIABLE("number_of_captured_villages")
            CLEAR_VARIABLE("zombie_type")

            Endlevel{
                result: "victory"
                bonus: true
                <NEW_GOLD_CARRYOVER(40)
            }
    }

    <HERO_DEATHS!
}
