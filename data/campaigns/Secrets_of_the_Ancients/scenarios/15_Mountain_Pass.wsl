--textdomain wesnoth-sota

-- If the bird bones were not found on the beach, then you get the ability to recruit
-- chocobones when a unit inspects the bones of a flightless bird half-buried in the snow.
-- There is one long event for this. If the bones *were* found earlier, this event is
-- removed in the prestart event.

Scenario{
    name: _ "Mountain Pass"
    map: "campaigns/Secrets_of_the_Ancients/maps/15_Mountain_Pass.map"

    id: "15_Mountain_Pass"
    next_scenario: "16_The_Mage"
    victory_when_enemies_defeated: false

    story: {
        part: {
            background_layer: {
                image: "story/mountain-pass.jpg"
                scale: false
            }
            story: _ "6 V, 23 YW

We have reached a pass through the mountains that Ras-Tabahn knew of. The air is cool in these upper reaches. Mist rises from the snow in the afternoon, and the icicles drip the purest water from rock overhangs. I find it all refreshing, but Ras-Tabahn’s coughing fits are frequent. Sometimes he is reduced to speaking in short phrases due to lack of breath. Of course he is quite old — 50 at least — but I am also certain that he is ill. His thinness leads me to believe it is consumption, but he refuses to discuss it, preferring to deny the severity of his problem."
        }
        <JOURNEY_PART(15)
    }

    <DEFAULT_SCHEDULE!
    <DEFAULT_MUSIC_PLAYLIST!
    <TURNS(30, 30, 30)

    side: {
        <SIDE_1_BOTH!
-- This assumes plenty of gold from the previous scenario.
        <GOLD(150, 100, 50)
        fog: true
    }

    side: {
        side: 2
        type: "Gryphon"
        controller: "ai"
        user_team_name: _ "Gryphons"
        team_name: "bad"
        recruit: "Gryphon"
        <GOLD(160, 180, 200)
        <INCOME(20, 30, 30)
    }

    side: {
        side: 3
        type: "Gryphon"
        controller: "ai"
        user_team_name: _ "Gryphons"
        team_name: "bad"
        recruit: "Gryphon"
        <GOLD(160, 180, 200)
        <INCOME(20, 30, 30)
    }

    <STARTING_VILLAGES(1, 6)

-- *************************** PRESTART ***************************
    event: {
        name: "prestart"
        do: ->
            Objectives{
                side: 1
                objective: {
                    description: _ "Move Ardryn-Na and Ras-Tabahn to level ground in the northeast corner"
                    condition: "win"
                }

                <HOW_TO_LOSE_WITH_BOTH!

                gold_carryover: {
                    bonus: true
                    carryover_percentage: 40
                }
            }

            If{
                variable: {
                    name: "bird_bones_found"
                    not_equals: true
                }
                then: ->
                    Item{
                        x: 16, y: 21
                        image: "items/bird-bones.png"
                    }
                
                else: ->
-- If chocobones can already be recruited, you lose one unit.
-- Even though that unit tended to die fairly quickly, you still
-- should be compensated, so here's a little gold.
                    Gold{
                        side: 1
                        amount: 18
                    }
                    Event{
                        id: "bird_bones"
                        remove: true
                    }
                
            }

            Clear_Variable{
                name: "bird_bones_found"
            }

            RECALL_LOYAL_UNITS!
    }
-- *************************** PLAY ***************************

-- This long event creates a chocobone when a unit moves to where bird bones are
-- buried in the snow. The event is removed if chocobones were discovered on the
-- beach with the Merfolk.
-- There is a short conversation, but there are many possibilities for which units
-- are involved, so there are a lot of ifs. There is also a lot of animation around
-- the appearance of the chocobone involving a skeleton and a flightless-bird unit.
    event: {
        name: "moveto"
        id: "bird_bones"

        filter: {
            x: 16, y: 21
            side: 1
        }
        do: ->
            If{
                variable: {
                    name: "unit.race"
                    equals: "bats"
                }
                or: {
                    variable: {
                        name: "unit.variation"
                        equals: "bat"
                    }
                }
                then: ->
-- Bones examined by a bat or undead bat
                    Message{
                        speaker: "Ras-Tabahn"
                        message: _ "There are some... large bones there. Claws and wings... I think."
                    }
                
                else: ->
                    If{
                        variable: {
                            name: "unit.race"
                            equals: "undead"
                        }
                        then: ->
-- Bones examined by a ghost, skeleton, or ghoul.
                            Message{
                                speaker: unit.id
                                message: _ "Bones. Claws and wings."
                            }
                        
                        else: ->
-- Bones examined by a human or Vendraxis.
                            Message{
                                speaker: unit.id
                                message: _ "There are some large bones here. I can see claws and wings."
                            }
                        
                    }
                
            }

            Message{
                speaker: "Ardonna"
                message: _ "I wonder what are they from. A gryphon perhaps?"
            }
            Message{
                speaker: "Ras-Tabahn"
                message: _ "A large (<i>cough, cough</i>) flightless bird... would be my guess."
            }
            Message{
                speaker: "Ardonna"
                message: _ "Well, there is an easy way to discover the truth."
            }

-- Remove the bones and show a resurrected bird:
            If{
                have_unit: {
                    id: "Ardonna"
                    x: 16, y: 21
                }
                then: ->
-- Since Ardonna is standing on the bones, face her toward the most likely hex for the bird to appear
                    Animate_Unit{
-- Fire the recruitment animation (actually an extra_anim):
                        filter: {
                            id: "Ardonna"
                        }
                        flag: "recruit2"
                        facing: {
                            x: 15, y: 21
                        }
                    }
                
                else: ->
                    Animate_Unit{
-- Fire the recruitment animation (actually an extra_anim):
                        filter: {
                            id: "Ardonna"
                        }
                        flag: "recruit2"
                        facing: {
                            x: 16, y: 21
                        }
                    }
                
            }
            Remove_Item{
-- Remove the bones:
                x: 16, y: 21
            }
            Unit{
-- Show the bird fading in. The engine will automatically find an empty
-- location for it.
                x: 16, y: 21
                id: "bird"
                type: "Bone Bird"
                side: 1
                facing: "se"
                animate: true
            }
            Store_Unit{
-- Store the bird so we can get its location later:
                filter: {
                    id: "bird"
                }
                variable: "bird"
            }

            Message{
                speaker: "Ardonna"
                message: _ "Oh, you were right!"
            }

            If{
                have_unit: {
                    id: "Vendraxis"
                }
                then: ->
                    Message{
                        speaker: "Ras-Tabahn"
                        message: _ "I wonder... if it could carry... someone light. Vendraxis perhaps."
                    }
                    Message{
                        speaker: "Vendraxis"
                        message: _ "I will not climb on that ridiculous thing!"
                    }
                
                else: ->
                    Message{
                        speaker: "Ras-Tabahn"
                        message: _ "I wonder... if it could carry... someone light."
                    }
                
            }

            Message{
                speaker: "Ardonna"
                message: _ "A skeleton could ride it I think."
            }

-- Replace the bird with a Chocobone:
            Modify_Unit{
-- We're about to animate a recruit which will most likely appear to
-- Ardonna's upper left, so we'll face her that direction:
                filter: {
                    id: "Ardonna"
                }
                facing: "nw"
            }
            Animate_Unit{
-- Fire the recruitment animation (actually an extra_anim):
                filter: {
                    id: "Ardonna"
                }
                flag: "recruit2"
            }
            Unit{
-- Animate a skeleton getting recruited:
                side: 1
                animate: true
                type: "Skeleton"
                id: "rider"
                placement: "leader"
            }
            Store_Unit{
-- Remove the skeleton, but store it so we can get its location:
                filter: {
                    id: "rider"
                }
                variable: "rider"
                kill: true
            }
            Move_Unit_Fake{
-- Show a skeleton moving from where the skeleton appeared to wherever
-- the bird is:
                type: "Skeleton"
                side: 1
                x: {rider.x, bird.x}
                y: {rider.y, bird.y}
            }
            Kill{
                id: "bird"
                animate: false
            }
            Unit{
-- Now we show a joined skeleton and bird:
                x: bird.x, y: bird.y
                type: "Chocobone"
                side: 1
                animate: false
                facing: "se"
            }
            Clear_Variable{
                name: {"bird", "rider"}
            }

            Message{
                speaker: "Ardonna"
                message: _ "That’s fantastic! These birds could be quite useful."
            }
            Allow_Recruit{
                side: 1
                type: "Chocobone"
            }
            Message{
                speaker: "narrator"
                image: "units/undead-skeletal/chocobone.png~SCALE(93,93)"
                message: _ "You can now recruit chocobones!"
            }
    }

-- *************************** ENDING / OPENING ***************************

    event: {
        name: "start"
        do: ->
            Message{
                speaker: "Ardonna"
                message: _ "What dangers may lurk in this fog?"
            }
            Message{
                speaker: "Ras-Tabahn"
                message: _ "Gryphons... live at this height. We should be cautious."
            }
    }

    event: {
        name: "moveto"
        first_time_only: false

        filter: {
            id: "Ardonna"
            or: {
                id: "Ras-Tabahn"
            }
        }
        do: ->
            Store_Unit{
-- Stores whichever leaders are the grassland in the NE corner.
                filter: {
                    x: "21-29"
                    y: "1-3"
                    filter_location: {
                        terrain: "G*^*"
                    }
                    and: {
                        id: "Ardonna"
                        or: {
                            id: "Ras-Tabahn"
                        }
                    }
                }
                variable: "leaders_at_end"
            }

-- If both leaders got stored, the player wins.
            If{
                variable: {
                    name: "leaders_at_end.length"
                    equals: 2
                }
                then: ->
                    Endlevel{
                        result: "victory"
                        bonus: true
                        <NEW_GOLD_CARRYOVER(40)
                    }
                
                else: ->
                    Allow_Undo{
                    }
                
            }
            Clear_Variable{
                name: "leaders_at_end"
            }
    }

    <HERO_DEATHS!
    <MANAGE_PROFILE!
    <KIDS_ADVANCE!
}
