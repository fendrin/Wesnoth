--textdomain wesnoth-tb

CHARACTER_STATS_ARVITH = () -> {
    type: "Knight"
    id: "Arvith"
    name: _ "Arvith"
    profile: "portraits/arvith.png~RIGHT()"
    canrecruit: true
    unrenamable: true
}

ARVITH_LAST_BREATH = () -> {
    event: {
        name: "last breath"
        filter: {
            id: "Arvith"
        }
        do: ->
            Message{
                speaker: "Arvith"
                message: _ "All is lost now that I am dead..."
            }

            Endlevel{
                result: "defeat"
            }
    }
}

BARAN_LAST_BREATH = () -> {
    event: {
        name: "last breath"
        filter: {
            id: "Baran"
        }
        do: ->
            Message{
                speaker: "Baran"
                message: _ "It is over, I am vanquished."
            }

            Endlevel{
                result: "defeat"
            }
    }
}

NEED_MERCENARY = () -> {
    role: {
        role: "Mercenary"

        type: "Paladin,Grand Knight,Knight,Lancer,Horseman"
        not: {
            id: "Arvith"
        }

        reassign: false
        auto_recall: {}
        else: ->
            Unit{
                role: "Mercenary"
                side: 1
                type: "Horseman"
                placement: "leader"
                facing: "ne"
            }
        
    }
}

STORE_BARAN = () -> {
    if: {
        have_unit: {
            side: 1
            id: "Baran"
            search_recall_list: true
        }
        then: ->
            Store_Unit{
                filter: {
                    id: "Baran"
                }
                kill: true
                variable: "baran_store"
            }
        
    }
}

RESTORE_BARAN = () -> {
    if: {
        variable: {
            name: "baran_store.id"
            equals: "Baran"
        }
        then: ->
            Unstore_Unit{
                variable: "baran_store"
                x: "recall", y: "recall"
            }
            CLEAR_VARIABLE("baran_store")
        
    }
}

RECALL_ELSE = (ID, PLACEMENT, WML) -> {
    recall: {
        id: ID
        <PLACEMENT
    }
    if: {
        not: {
            have_unit: {
                side: 1
                id: ID
            }
        }
        then: ->
            WML
        
    }
}

NEED_BARAN = (PLACEMENT) -> {
    <RECALL_ELSE("Baran", PLACEMENT, {
            unit: {
                id: "Baran"
                name: _ "Baran"
                unrenamable: true
                type: "Red Mage"
                profile: "portraits/baran.png"
                side: 1
                <IS_HERO!
                <PLACEMENT
                modifications: {
                    <TRAIT_LOYAL!
                    <TRAIT_INTELLIGENT!
                }
            }
    })
}
