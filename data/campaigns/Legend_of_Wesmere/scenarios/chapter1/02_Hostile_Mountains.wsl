--textdomain wesnoth-low
Scenario{
    id: "02_Hostile_Mountains"
    next_scenario: "03_Kalian_under_Attack"

    random_start_time: false
    allow_new_game: false
    force_lock_settings: true

    experience_modifier: 100
    name: _ "Hostile Mountains"
    <LOW_MAP("02_Hostile_Mountains.map")
    <TURNS(36, 32, 28)

    <INTRO_AND_SCENARIO_MUSIC("sad.ogg", "northern_mountains.ogg")
    <EXTRA_SCENARIO_MUSIC("knolls.ogg")
    <EXTRA_SCENARIO_MUSIC("traveling_minstrels.ogg")
    <EXTRA_SCENARIO_MUSIC("legends_of_the_north.ogg")
    <EXTRA_SCENARIO_MUSIC("knalgan_theme.ogg")

    <DEFAULT_SCHEDULE_AFTERNOON!

    <STARTING_VILLAGES_ALL(4)
    <STARTING_VILLAGES_DWARF(3)

    story: {
        part: {
            story: _ "Kalenz and his band broke out of the orcish encirclement, only to discover that the country on the direct route to the Ka’lian was already swarming with orcs. The raid on Kalenz’s home, it seemed, had been but one small part of a great migration south. There was no choice but to make a detour through territory the elves would rather have avoided..."
            delay: 8000
        }
    }
    <LOW_TRACK(FLIGHT_STAGE2!)

---- Kalenz's code ---
    PLAYER_GOLD: () -> {
        <if MULTIPLAYER then {
            <GOLD(100, 90, 50)
        } else {
            <GOLD(200, 180, 100)
        }
        income: -2
        village_gold: 1
    }

-- wmllint: validate-off
    side: {
        side: 1
        <PLAYABLE!
        <KALENZ_YOUNG!
        <PLAYER_GOLD!
        <unless MULTIPLAYER! then {
            unit: {
                <LANDAR_YOUNG!
                x: 20
                y: 4
            }
        }
    }
-- wmllint: validate-on
    event: {
        name: "prestart"
        do: ->
            Recall{
                id: "Anduilas"
                x: 20
                y: 6
            }
            Recall{
                id: "Arkildur"
                x: 19
                y: 5
            }
    }
---- /Kalenz's code ---

-- wmllint: skip-side
    <MP_SIDE(2, {
            x: 20
            y: 4
            save_id: "Landar"
            <LANDAR_YOUNG!
            <PLAYABLE!
            <PLAYER_GOLD!
    })

---- Olurf's Code ---
    OLURFS_LAND: () -> {
        x: {"20-24", "19-30", "17-30", "16-30", "14-30", "12-30", "11-30", "10-30", "7-30", "8-30", "10-30", "13-30", "15-30", "18-30", "19-30", "20-30", "22-30", "23-30", "24-30", "23-30", "22-30"}
        y: {10, 11, 12, "13-15", "16-17", "18-19", 20, 21, 22, 23, 24, 25, 26, 27, "28-29", 30, "31-32", "33-36", 37, "38-39", 40}
    }

-- wmllint: validate-off
    side: {
-- wmllint: who OLURF is Olurf
        <OLURF!
        side: 3
        allow_player: false
        controller: "ai"
        <GOLD(150, 120, 120)
        persistent: true
        save_id: "Olurf"
        <if EASY then {
            team_name: "player"
            user_team_name: _ "Player"
        } else {
            team_name: {"player", "trolls"}
            user_team_name: _ "Neutrals"
        }
        INCLUDE("ai/aliases/stable_singleplayer.cfg")  --note that this MUST be given OUTSIDE the 'ai' tag
        ai: {
            <AI_SIMPLE_ALWAYS_ASPECT("caution", 0)
            <AI_SIMPLE_ALWAYS_ASPECT("village_value", 0)
            <AI_SIMPLE_ALWAYS_ASPECT("leader_value", 0)
        }
    }
-- wmllint: validate-on

-- Trolls have stepped on Olurf's land.
    event: {
        name: "enter_hex"
        first_time_only: true
        filter: {
            side: 4
            <OLURFS_LAND!
        }
        do: ->
            Message{
                id: "Olurf"
                message: _ "Those stinking trolls ha’ stepped on <i>our</i> land!"
            }

            Cancel_Action{
            }

            If{
                variable: {
                    name: "offended_by_elves"
                    boolean_equals: true
                }
-- the elves have stepped onto already
                then: ->
                    Modify_Side{
                        side: 3
                        team_name: "dwarves"
                        user_team_name: _ "Enemies"
                    }
                    if EASY
                        Fire_Event{
                            name: "dwarves_defend_their_territory"
                        }
                    
                    if NORMAL
                        Fire_Event{
                            name: "dwarves_defend_their_territory"
                        }
                    
                    if HARD
                        Fire_Event{
                            name: "dwarves_kill_elves_and_trolls"
                        }
                    
                
                else: ->
                    Modify_Side{
                        side: 3
                        team_name: "player"
                        user_team_name: _ "Player"
                    }
                    if EASY
                        Fire_Event{
                            name: "dwarves_kill_trolls"
                        }
                    
                    if NORMAL
                        Fire_Event{
                            name: "dwarves_kill_trolls"
                        }
                    
                    if HARD
                        Fire_Event{
                            name: "dwarves_kill_trolls"
                        }
                    
                
            }
    }

-- Elves have stepped on Olurf's land.
    event: {
        name: "enter_hex"
        first_time_only: true
        filter: {
            side: {1, 2}
            <OLURFS_LAND!
        }
        do: ->
            Message{
                id: "Olurf"
                message: _ "Those lying elves have stepped on <i>our</i> land!"
            }
            Message{
                id: "Kalenz"
                message: _ "Fight to subdue, and do not kill unless you must. We have foes enough as it is without making blood enemies of these dwarves."
            }

            Cancel_Action{
            }

            Store_Side{
                side: 3
                variable: "olurf_side"
            }
            If{
                variable: {
                    name: "olurf_side.team_name"
                    equals: "player"
                }
                then: ->
                    Modify_Side{
                        side: 3
                        team_name: "dwarves"
                        user_team_name: _ "Enemies"
                    }
                    if EASY
                        Fire_Event{
                            name: "dwarves_defend_their_territory"
                        }
                    
                    if NORMAL
                        Fire_Event{
--TODO think about making it like HARD
                            name: "dwarves_defend_their_territory"
                        }
                    
                    if HARD
                        Fire_Event{
                            name: "dwarves_kill_elves_and_trolls"
                        }
                    
                
                else: ->
                    Modify_Side{
                        side: 3
                        team_name: "trolls"
                        user_team_name: _ "Enemies"
                    }
                    if EASY
                        Fire_Event{
                            name: "dwarves_defend_their_territory"
                        }
                    
                    if NORMAL
                        Fire_Event{
                            name: "dwarves_kill_elves"
                        }
                    
                    if HARD
                        Fire_Event{
                            name: "dwarves_kill_elves"
                        }
                    
                
            }
            CLEAR_VARIABLE("olurf_side")
            VARIABLE("offended_by_elves", true)
    }

-- start dwarven ai code

    CLEAN_AI: (SIDE) -> {
        <MODIFY_AI_DELETE_GOAL(SIDE, "*")
        <MODIFY_AI_TRY_DELETE_STAGE(SIDE, "retreat_to_olurfs_land")
        <MODIFY_AI_TRY_DELETE_ASPECT(SIDE, "avoid", "stay_in_own_land")
        <MODIFY_AI_TRY_DELETE_ASPECT(SIDE, "recruitment_instructions", "always")
    }

    ADD_AVOID_STAY_AT_OLURFS_LAND: () -> {
        <MODIFY_AI_ADD_ASPECT(3, "avoid", {
                facet: {
                    id: "stay_in_own_land"
                    value: {
                        not: {
                            <OLURFS_LAND!
                        }
                    }
                }
        })
    }

    ADD_GOAL_KILL_ELVES: (SIDE) -> {
        <MODIFY_AI_ADD_GOAL(SIDE, {
                goal: {
                    id: "kill_elves"
                    criteria: {
                        side: {1, 2}
                    }
                    value: 1.5
                }
        })
    }

    ADD_GOAL_KILL_TROLLS: (SIDE) -> {
        <MODIFY_AI_ADD_GOAL(SIDE, {
                goal: {
                    id: "kill_trolls"
                    criteria: {
                        side: 4
                    }
                    value: 1.5
                }
        })
    }

    ADD_GOAL_KILL_TRESPASSERS: (SIDE) -> {
        <MODIFY_AI_ADD_GOAL(SIDE, {
                goal: {
                    id: "kill_trespassers"
                    criteria: {
                        not: {
                            side: SIDE
                        }
--limiting is handled by 'avoid' aspect
                    }
                    value: 1.5
                }
        })
    }

    ADD_STAGE_RETREAT_TO_OLURFS_LAND: (SIDE) -> {
        modify_ai: {
            side: SIDE
            action: "add"
            path: "stage[0]"
            stage: {
                id: "retreat_to_olurfs_land"
                name: "ai_default_rca::candidate_action_evaluation_loop"
--TODO: add [candidate_action]s to make the retreat work
            }
        }
    }

    event: {
        name: "dwarves_watch_the_show"
        first_time_only: false
        do: ->
            CLEAN_AI(3)
            MODIFY_AI_ADD_ASPECT(3, "recruitment_instructions", AI_NO_RECRUITMENT!)
            ADD_AVOID_STAY_AT_OLURFS_LAND!
            Message{
                id: "Olurf"
                message: _ "It should be rare sport to watch this... Just be sure not to trespass on our land."
            }
    }

    event: {
        name: "dwarves_kill_elves"
        first_time_only: false
        do: ->
            CLEAN_AI(3)
            ADD_GOAL_KILL_ELVES(3)
            Message{
                id: "Olurf"
                message: _ "Up axes, and death to elves!"
            }
    }

    event: {
        name: "dwarves_kill_trolls"
        first_time_only: false
        do: ->
            CLEAN_AI(3)
            ADD_GOAL_KILL_TROLLS(3)
            Message{
                id: "Olurf"
                message: _ "Up axes, and death to trolls!"
            }
    }

    event: {
        name: "dwarves_kill_elves_and_trolls"
        first_time_only: false
        do: ->
            CLEAN_AI(3)
            ADD_GOAL_KILL_ELVES(3)
            ADD_GOAL_KILL_TROLLS(3)
            Message{
                id: "Olurf"
                message: _ "Up axes, and kill all the interlopers!"
            }
    }

    event: {
        name: "dwarves_defend_their_territory"
        first_time_only: false
        do: ->
            CLEAN_AI(3)
            ADD_AVOID_STAY_AT_OLURFS_LAND!
            ADD_GOAL_KILL_TRESPASSERS(3)
            ADD_STAGE_RETREAT_TO_OLURFS_LAND(3)
            Message{
                id: "Olurf"
                message: _ "Defend our bounds! Slay all who trespass them!"
            }
    }

    CLEAN_AI = nil
    ADD_AVOID_STAY_AT_OLURFS_LAND = nil
    ADD_STAGE_RETREAT_TO_OLURFS_LAND = nil
    ADD_GOAL_KILL_ELVES = nil
    ADD_GOAL_KILL_TROLLS = nil
    ADD_GOAL_KILL_TRESPASSERS = nil

-- end dwarven ai code

    event: {
        name: "scenario_end"
        do: ->
            CLEAR_VARIABLE("offended_by_elves")
    }
---- /Olurf's Code ---

---- Enemy Side ---
    side: {
        side: 4
        allow_player: false
        controller: "ai"
        <if EASY then {
            type: "Troll Hero"
        } else {
            type: "Great Troll"
        }
        id: "Grugl"
        name: _ "Grugl"

        team_name: "trolls"
        user_team_name: _ "Enemies"
        <TROLL_SETUP!
        canrecruit: true
        <if EASY then {
            recruit: "Troll Whelp"
        }
        <if NORMAL then {
            recruit: {"Troll Whelp", "Troll", "Troll Rocklobber"}
        }
        <if HARD then {
            recruit: {"Troll Whelp", "Troll", "Troll Rocklobber", "Troll Warrior"}
        }
        <GOLD(170, 240, 270)

        INCLUDE("ai/aliases/stable_singleplayer.cfg")
        ai: {
            <AI_SIMPLE_ALWAYS_ASPECT("recruitment_pattern", "fighter, mixed fighter")
            goal: {
                criteria: {
                    race: "elf"
                }
                value: 1.5
            }

            <AI_SIMPLE_ALWAYS_ASPECT("aggression", 0.75)
            <AI_SIMPLE_NIGHT_ASPECT("caution", 0)
            <AI_SIMPLE_NIGHT_ASPECT("grouping", false)
        }
        <INCOME(4, 8, 12)
    }
    OLURFS_LAND = nil
    <if HARD then {
        <LIMIT_CONTEMPORANEOUS_RECRUITS(4, "Troll Warrior", 2)
    }

---- /Enemy Side ---

----- Objectives and corresponding events ----
    event: {
        name: "start"
        do: ->
            Message{
                id: "Kalenz"
                message: _ "I had hoped to avoid these paths... The eastern way is through dwarvish territory and is shorter. I pray the dwarves will grant us safe passage, since the other path is through troll territory..."
            }
            Message{
                id: "Olurf"
                message: _ "Not even in yer dreams, elf. These are dwarvish lands, and troubles we want no part of nip at yer heels. Get out and stay out!"
            }
            Message{
                id: "Landar"
                message: _ "Our troubles will be yours, too, whether either of us will it or not. The orcs have come down from the north like a flood; if we squabble among ourselves they will feast on our discord."
            }
            Message{
                id: "Olurf"
                message: _ "Bah. More smooth words and trickery, by my beard. We know yer kind... and who needs yer help anyway, weaklings? Leave now, or feel my axe! That same kiss of steel will greet all intruders. Anyone who sets foot on the eastern bank o’ this river will rue the day he was born!"
            }
            Message{
                id: "Landar"
                message: _ "I cannot see how trolls could be any less friendly."
            }
            Message{
                id: "Kalenz"
                message: _ "Hmm... Perhaps the dwarves’ intransigence can serve our purpose. Onwards, and no matter what you do, do <i>not</i> step on the eastern bank of the river!"
            }

            HIGHLIGHT_IMAGE(18, 37, "scenery/signpost.png", {})

            Fire_Event{
                name: "dwarves_watch_the_show"
            }
    }

    event: {
        name: "prestart"
        do: ->
            Objectives{
                side: 0

                objective: {
                    description: _ "Kalenz or Landar must reach the signpost"
                    condition: "win"
                }

                objective: {
                    <ALTERNATIVE_OBJECTIVE_CAPTION!
                    description: _ "Defeat Grugl"
                    condition: "win"
                }
                objective: {
                    description: _ "Death of Kalenz"
                    condition: "lose"
                }
                objective: {
                    description: _ "Death of Landar"
                    condition: "lose"
                }
                objective: {
                    description: _ "Death of Olurf"
                    condition: "lose"
                }

                <TURNS_RUN_OUT!

                gold_carryover: {
                    bonus: true
                    carryover_percentage: 80
                }
            }
    }

    ENDSPEECH: (SPEAKER_NAME) -> {
        message: {
            speaker: SPEAKER_NAME
            message: _ "We made it. Onwards to Wesmere!"
        }

        if: {
            variable: {
                name: "killed_by_elves"
                greater_than: 3
            }
            then: ->
                Message{
                    id: "Olurf"
                    message: _ "Crazy elves! But at least they felled a few trolls before they left."
                }
            
            else: ->
                Message{
                    id: "Olurf"
                    message: _ "Crazy elves!"
                }
            
        }
    }

    event: {
        name: "prestart"
        do: ->
            VARIABLE("killed_by_elves", 0)
    }

    event: {
        name: "die"
        first_time_only: "no"
        filter: {
            race: "troll"
        }
        filter_second: {
            race: "elf"
        }
--TODO does this need the variable to exist?
        do: ->
            Set_Variable{
                name: "killed_by_elves"
                add: 1
            }
    }

    event: {
        name: "scenario_end"
        do: ->
            CLEAR_VARIABLE("killed_by_elves")
    }

    event: {
        name: "moveto"
        filter: {
            x: 18
            y: 37
            and: {
                id: "Kalenz"
                or: {
                    id: "Landar"
                }
            }
        }
        do: ->
            ENDSPEECH("unit")

            Endlevel{
                result: "victory"
                <if MULTIPLAYER then {
                    bonus: 0.5
                } else {
                    bonus: true
                }
            }
    }

    event: {
        name: "last breath"
        filter: {
            id: "Grugl"
        }
        filter_second: {
            race: "dwarf"
        }
        do: ->
            Message{
                id: "Grugl"
-- wmllint: local spelling Urgh
                message: _ "Urgh! Grugl tried to eat dwarves, but choked on their sharp nasty axes."
            }

            ENDSPEECH("Kalenz")
    }

    event: {
        name: "last breath"
        filter: {
            id: "Grugl"
        }
        filter_second: {
            race: "elf"
        }
        do: ->
            Message{
                id: "Grugl"
                message: _ "Urgh! Grugl wanted tasty elf-meat, but choked on their nasty pointy spears!"
            }

            ENDSPEECH("secondary_unit")
            ENDSPEECH = nil
            Endlevel{
                result: "victory"
                <if MULTIPLAYER then {
                    bonus: 0.5
                } else {
                    bonus: true
                }
            }
    }

    INCLUDE("campaigns/Legend_of_Wesmere/utils/deaths.cfg")
}

PLAYER_GOLD = nil
MULTIPLAYER_GOLD = nil
