--textdomain wesnoth-httt
Scenario{
    id: "13_The_Dwarven_Doors"
    name: _ "The Dwarven Doors"
    map: "campaigns/Heir_To_The_Throne/maps/13_The_Dwarven_Doors.map"
    <TURNS(26, 20, 15)
    victory_when_enemies_defeated: false

    <DEFAULT_SCHEDULE_DUSK!

    next_scenario: "14_Plunging_into_the_Darkness"

    <SCENARIO_MUSIC("battle.ogg")
    <EXTRA_SCENARIO_MUSIC("the_dangerous_symphony.ogg")
    <EXTRA_SCENARIO_MUSIC("legends_of_the_north.ogg")
    <EXTRA_SCENARIO_MUSIC("northern_mountains.ogg")
    <EXTRA_SCENARIO_MUSIC("casualties_of_war.ogg")
    <EXTRA_SCENARIO_MUSIC("battle-epic.ogg")
    <EXTRA_SCENARIO_MUSIC("the_city_falls.ogg")

    <HTTT_TRACK(JOURNEY_13_NEW!)

    event: {
        name: "prestart"
        do: ->
            Objectives{
                side: 1
                objective: {
                    description: _ "Move Konrad to the entrance of the dwarven tunnels"
                    condition: "win"
                }
                objective: {
                    description: _ "Death of Konrad"
                    condition: "lose"
                }
                objective: {
                    description: _ "Death of Delfador"
                    condition: "lose"
                }
                objective: {
                    description: _ "Death of Kalenz"
                    condition: "lose"
                }

                <TURNS_RUN_OUT!

                gold_carryover: {
                    bonus: true
                    carryover_percentage: 40
                }
            }
    }

    <PLACE_IMAGE("scenery/dwarven-doors-closed.png", 14, 3)
    <PLACE_IMAGE("scenery/mine-abandoned.png", 25, 2)

    side: {
        type: "Commander"
        id: "Konrad"
        name: _ "Konrad"
        unrenamable: true
        profile: "portraits/konrad-human.png"
        side: 1
        canrecruit: true
        team_name: "elves"
        user_team_name: _ "Rebels"
        controller: "human"
        gold: 200
        <FLAG_VARIANT("long")
    }

    side: {
        type: "Orcish Slurbow"
        id: "Knafa-Telfar"
        name: _ "Knafa-Telfar"
        side: 2
        canrecruit: true
        recruit: {"Troll Whelp", "Orcish Grunt", "Orcish Crossbowman"}
        <GOLD(100, 120, 140)
        <INCOME(14, 18, 22)
        ai: {
            <ATTACK_DEPTH(4, 5, 5)
            aggression: 1.0
            grouping: false
            caution: -5.0
        }
        team_name: "orcs"
        user_team_name: _ "Orcs"
        <FLAG_VARIANT6("ragged")
    }

    side: {
        type: "Orcish Warlord"
        id: "Urug-Tan"
        name: _ "Urug-Tan"
        side: 3
        canrecruit: true
        recruit: {"Troll Whelp", "Orcish Grunt", "Orcish Crossbowman"}
        <GOLD(75, 95, 115)
        <INCOME(12, 14, 18)
        ai: {
            <ATTACK_DEPTH(4, 5, 5)
            aggression: 1.0
            grouping: false
            caution: -5.0
        }
        team_name: "orcs"
        user_team_name: _ "Orcs"
        <FLAG_VARIANT6("ragged")
    }

    side: {
        type: "Orcish Sovereign"
        id: "Shuuga-Mool"
        name: _ "Shuuga-Mool"
        side: 4
        canrecruit: true
        recruit: {"Orcish Grunt", "Wolf Rider", "Orcish Archer", "Troll"}
        <GOLD(30, 50, 70)
        <INCOME(12, 14, 18)
        team_name: "orcs"
        user_team_name: _ "Orcs"
        ai: {
            <ATTACK_DEPTH(4, 5, 5)
            aggression: 1.0
            grouping: false
            caution: -5.0
        }
        <FLAG_VARIANT6("ragged")
    }

    side: {
        side: 5
        no_leader: true
        controller: "ai"
        hidden: true
    }

    <STARTING_VILLAGES(2, 20)
    <STARTING_VILLAGES(3, 20)
    <STARTING_VILLAGES(4, 20)
    label: {
        x: 15
        y: 21
        text: _ "Pillars of Thunedain"
    }
    label: {
        x: 14
        y: 4
        text: _ "The Great Doors"
    }

    LISAR_GUARD_DOORS: () -> {
        <NAMED_LOYAL_UNIT(2, "Royal Guard", 8, 44, {}, _ "Royal Guard")
    }

    event: {
        name: "prestart"
--
-- Randomly set the exit location - 1=the main door and 2=the mine
--
        do: ->
            VARIABLE_OP("true_entrance_location", "rand", "1..2")

            Lua{
                code: [[
-- The only parameter right now is the coverage (real 0.0 to 1.0, incl.)
-- For prime-time use the filter terrain needs to come in and the convert
-- table needs to be VERY complete. Or, rename this to morph_terrain and
-- have the conversion table come in as an argument, too.

local locations = wesnoth.get_locations{terrain = 'Ce,Ch,Chr,Co,Gd,Gd^Vc,Gd^Vh,Gd^Vo,Gll^Fp,Hhd,Hhd^Fp,Hhd^Vo,Ke,Khr,Ko,Md,Mm,Rd,Re,Re^Vo,Rr,Ww'}

local coverage = wesnoth.get_variable("snowCoverage")
if coverage == nil or coverage < 0 then
    coverage = 0
elseif coverage 
    coverage = 1
end
local snowNeeded = (#locations * coverage) / 3
-- Use 1/3rd of the coverage from Northern Winter. Spring is approaching. We need to watch
-- this; if it adds too much snow, the player may not be able to make it to the exit in time.

local convert = {
    ['Ce'] = 'Cea',
    ['Ch'] = 'Cha',
    ['Chr'] = 'Cha',
    ['Co'] = 'Coa',
    ['Gd'] = 'Aa',
    ['Gd^Vc'] = 'Aa^Vca',
    ['Gd^Vh'] = 'Aa^Vha',
    ['Gd^Vo'] = 'Aa^Voa',
    ['Gll^Fp'] = 'Aa^Fpa',
    ['Hhd'] = 'Ha',
    ['Hhd^Fp'] = 'Ha^Fpa',
    ['Hhd^Vo'] = 'Ha^Voa',
    ['Ke'] = 'Kea',
    ['Khr'] = 'Kha',
    ['Ko'] = 'Koa',
    ['Md'] = 'Ms',
    ['Mm'] = 'Ms',
    ['Rd'] = 'Aa',
    ['Re'] = 'Aa',
    ['Re^Vo'] = 'Aa^Voa',
    ['Rr'] = 'Aa',
    ['Ww'] = 'Ai'
}

local loopCounter
for loopCounter = 1, snowNeeded do
    local locationsIndex = wesnoth.random(#locations)
    local coordinate = locations[locationsIndex]
    local terrainCode = wesnoth.get_terrain(coordinate[1], coordinate[2])
    wesnoth.set_terrain(coordinate[1], coordinate[2], (convert[terrainCode] or terrainCode))
    table.remove(locations, locationsIndex)
end
            ]]
            }
    }

    event: {
        name: "prestart"
        do: ->
            NEED_DELFADOR({placement: "leader"})
            NEED_KALENZ({placement: "leader"})
            STORE_LISAR!
            Recall{
                id: "Haldiel"
            }
            Role{ --If Haldiel was just recalled, this will select him.
                role: "Rider"
                auto_recall: {}

                type: "Elvish Outrider," .. 
                "Paladin,Grand Knight," .. 
                "Elvish Rider," .. 
                "Knight,Lancer," .. 
                "Elvish Scout," .. 
                "Horseman"
                else: ->
                    Unit{
                        side: 1
                        type: "Horseman"
                        role: "Rider"
                        placement: "leader"
                    }
                
            }
            Recall{
                id: "Delurin"
            }
            Role{ -- If Delurin was just recalled, this will select him.
                role: "Outlaw_Advisor"
                auto_recall: {}

                type: "Highwayman,Fugitive,Huntsman,Ranger," .. 
                "Bandit,Outlaw,Trapper," .. 
                "Thug,Footpad,Poacher"
            }
    }

    event: {
        name: "start"
        do: ->
            Message{
                speaker: "Delfador"
                message: _ "At last, this is the entrance to the dwarven tunnels."
            }
            Message{
                speaker: "Konrad"
                message: _ "All I can see are ruins and poor villages."
            }
            Message{
                speaker: "Kalenz"
                message: _ "The poor villagers that once lived here and traded with the dwarves are now held in slavery by the orcs."
            }
            Message{
                speaker: "Konrad"
                message: _ "Slaves to the evil orcs? We must liberate them!"
            }
            Message{
                speaker: "Delfador"
                <DELFADOR_MENTORING!
                message: _ "That would not be a wise choice, for our mission is to retrieve the Sceptre of Fire. If we tarry in this place, hordes of orcs will surround us."
            }
            Message{
                speaker: "Kalenz"
                message: _ "Konrad, heed the words of Delfador. We shall return to wrest the grip of the orcs from these lands. Look â€” orcs are already gathering. More are surely on their way."
            }
            Message{
                speaker: "Konrad"
                message: _ "This does not please me, but I will listen to your advice."
            }
            Message{
                role: "Rider"
                message: _ "Sir, I should like to scout out the path ahead. It would be disaster for us to find these doors sealed, leaving us as hunting fodder for the gathering horde."
            }
            Message{
                speaker: "Delfador"
                message: _ "Excellent. We must find a way underground before we are overwhelmed."
            }
--
-- If you have outlaws in your party, you have the chance to
-- find a special unit
--
            If{
                have_unit: {
                    role: "Outlaw_Advisor"
                }

                then: ->
                    Store_Unit{
                        filter: {
                            role: "Outlaw_Advisor"
                        }

                        kill: false
                        variable: "outlaw_advisor_store"
                    }

                    VARIABLE("outlaw_name", outlaw_advisor_store.name)

                    Message{
                        role: "Outlaw_Advisor"
                        message: _ "My uncle used to smuggle... err... I mean... trade food for the dwarves. He could get grain carts in under the very noses of those ugly orcs."
                    }
                    Message{
                        role: "Outlaw_Advisor"
                        message: _ "He must be hiding in one of those villages."
                    }
                
            }
    }

--
-- Some colorful talking events to make the scenario more interesting
--

    event: {
        name: "turn 2"
        do: ->
            Message{
                speaker: "Konrad"
                message: _ "The defense of the dwarves must have been strong. Look at those ruined towers!"
            }
            Message{
                speaker: "Delfador"
                message: _ "The battle outside was fierce and lasted a full half-year. But, the battles inside the tunnels were worse."
            }
    }

    event: {
        name: "moveto"
        filter: {
            id: "Delfador"
            x: "11-19"
            y: "19-22"
        }
        do: ->
            Message{
                speaker: "Delfador"
                <DELFADOR_MENTORING!
-- wmllint: local spelling Thunedain
                message: _ "The pillars of Thunedain. He was a legendary dwarvish lord who made his last stand here. May we triumph where he fell."
            }
            Message{
                speaker: "Kalenz"
                message: _ "I would settle for escape, though I know not which I dread more: foul orcs or fetid caves."
            }

            Allow_Undo{}
    }

    event: {
        name: "die"
        filter: {
            side: {2, 3, 4}
        }
        filter_second: {
            side: 1
            id: {"Haldiel", "Simyr"}
            or: {
                type: "Paladin"
            }
        }
        do: ->
            Message{
                speaker: "second_unit"
                message: _ "Back to the abyss, spawn of filth!"
            }
    }

--
-- Finding the bandit uncle who gives you a big hint about the true exit
--
    event: {
        name: "moveto"
        filter: {
            side: 1
            x: 18
            y: 24
        }
        do: ->
            If{
                have_unit: {
                    role: "Outlaw_Advisor"
                }
                then: ->
                    NAMED_LOYAL_UNIT(1, "Bandit", 18, 24, "Uncle Somf", _ "Uncle Somf")

                    Message{
                        speaker: "unit"
                        message: _ "Who... whoâ€™s here?"
                    }

--
-- The bandit's speech depends on who finds him
--
                    If{
                        have_unit: {
                            role: "Outlaw_Advisor"
                            x: 18, y: 24
                        }
-- the outlaw advisor finds Uncle Somf
                        then: ->
                            Message{
                                speaker: "Uncle Somf"
                                message: _ "#{outlaw_name}! How have you been? I havenâ€™t seen you in years."
                            }
                        
-- ...or someone else finds him
                        else: ->
                            Message{
                                speaker: "Uncle Somf"
                                message: _ "Haw! Any friend of #{outlaw_name is a friend of mine too."
                            }
                        
                    }

                    Message{
                        speaker: "Konrad"
                        message: _ "We need to make it into the caves of the dwarves."
                    }

--
-- The bandit divulges the true location of the entrance
--
                    If{
                        variable: {
                            name: "true_entrance_location"
                            numerical_equals: 1
                        }
                        then: ->
                            Message{
                                speaker: "Uncle Somf"
                                message: _ "The mine entrances were all collapsed intentionally during the fighting. The doors, while heavily defended, remain accessible. The orcish hordes that assault them are repulsed, but you may be able to sneak in unnoticed."
                            }
                        
                        else: ->
                            Message{
                                speaker: "Uncle Somf"
                                message: _ "The best way is through the mine tunnels. The orcs have never found all the mine entrances, and many still lead deep underground."
                            }
                        
                    }
                

                else: ->
                    Allow_Undo{}
                
            }
    }

    event: {
        name: "moveto"

        filter: {
            id: "Uncle Somf"

            filter_adjacent: {
                role: "Outlaw_Advisor"
            }

            or: {
                role: "Outlaw_Advisor"

                filter_adjacent: {
                    id: "Uncle Somf"
                }
            }
        }
        do: ->
            Message{
                speaker: "Uncle Somf"
                message: _ "How are we doing, #{outlaw_name}?"
            }
            Message{
                speaker: outlaw_advisor_store.id
                message: _ "The same as always, Uncle!"
            }
            Message{
                speaker: "Uncle Somf"
                message: _ "That bad, huh?"
            }

            Allow_Undo{}
    }

--
-- When any side 1 unit reaches a possible exit, we find out if it
-- is the correct one. We don't know who will reach the exit,
-- so the dialog must be general for anyone.
-- If the unit is Konrad, the victory event is handled separately.
--
    event: {
        name: "moveto"
        first_time_only: true
        filter: {
            side: 1
            x: 14
            y: 3
        }
--
-- If true_entrance_location = 1 then this is the true entrance
--
        do: ->
            If{
                variable: {
                    name: "true_entrance_location"
                    numerical_equals: 1
                }
                then: ->
                    Message{
                        speaker: "unit"
                        message: _ "The doors... they can be moved!"
                    }
                    Message{
                        speaker: "Delfador"
                        message: _ "Quickly, now, let us slip inside and hope the dwarves do not object..."
                    }
                    Message{
                        speaker: "Kalenz"
                        message: _ "... and that the orcs do not follow."
                    }
                
                else: ->
                    Message{
                        speaker: "unit"
                        message: _ "The doors are closed and barred from the inside!"
                    }
                    Message{
                        speaker: "Konrad"
                        <KONRAD_VARIATION("concerned")
                        message: _ "We canâ€™t get in! What should we do now?"
                    }
                    Message{
                        speaker: "Kalenz"
                        message: _ "It is said that the orcs used old mine tunnels to surprise the dwarves. There appears to be one nearby, to the north-east."
                    }
                    Message{
                        speaker: "Konrad"
                        message: _ "Then we must make it to that tunnel!"
                    }
                
            }
    }

    event: {
        name: "moveto"
        filter: {
            side: 1
            x: 25
            y: 2
        }
--
-- If true_entrance_location = 2 then this is the true entrance
--
        do: ->
            If{
                variable: {
                    name: "true_entrance_location"
                    numerical_equals: 2
                }
                then: ->
                    Message{
                        speaker: "unit"
                        message: _ "This old mine seems to be connected to the main tunnels."
                    }
                    Message{
                        speaker: "Kalenz"
                        message: _ "I am hesitant to enter. It will be so difficult in the darkness!"
                    }
                    Message{
                        speaker: "Delfador"
                        <DELFADOR_VARIATION("mad")
                        message: _ "There is no time for idle chatter or delay of any kind. Onward!"
                    }
                
                else: ->
                    Message{
                        speaker: "unit"
                        message: _ "I have reached the mine entrance, but there is no tunnel here. Rock and rubble completely block the way."
                    }
                    Message{
                        speaker: "Konrad"
                        message: _ "I hope we can make it through the main doors, then."
                    }
                    Message{
                        speaker: "Delfador"
                        message: _ "It is our only choice now. Hurry!"
                    }
                
            }
    }

--
-- These events end the level when Konrad makes it to the correct location.
-- This has to be a separate event from when any side 1 unit first reaches
-- a possible exit (the above events).
--
    event: {
        name: "moveto"
        first_time_only: false
        filter: {
            id: "Konrad"
            x: 14
            y: 3
        }
        do: ->
            If{
                variable: {
                    name: "true_entrance_location"
                    numerical_equals: 1
                }
                then: ->
                    Message{
                        speaker: "Konrad"
                        message: _ "Pray that we live to see sunlight again."
                    }
                    Fire_Event{
                        name: "victory dance"
                    }
                    Endlevel{
                        result: "victory"
                        bonus: true
                        <NEW_GOLD_CARRYOVER(40)
                    }
                
            }
    }
    event: {
        name: "moveto"
        first_time_only: false
        filter: {
            id: "Konrad"
            x: 25
            y: 2
        }
        do: ->
            If{
                variable: {
                    name: "true_entrance_location"
                    numerical_equals: 2
                }
                then: ->
                    Message{
                        speaker: "Konrad"
                        message: _ "Pray that we live to see sunlight again."
                    }
                    Fire_Event{
                        name: "victory dance"
                    }
                    Endlevel{
                        result: "victory"
                        bonus: true
                        <NEW_GOLD_CARRYOVER(40)
                    }
                
            }
    }

    event: {
        name: "enemies defeated"
        do: ->
            Message{
                speaker: "Kalenz"
                message: _ "We have defeated the foul orcs guarding this land, but we must continue without rest. More will surely come!"
            }
            If{
                variable: {
                    name: "true_entrance_location"
                    numerical_equals: 1
                }
                then: ->
                    Message{
                        speaker: "Delfador"
                        message: _ "Indeed we must not delay. Let us breach the great doors to the dwarven kingdom."
                    }
                
                else: ->
                    Message{
                        speaker: "Delfador"
                        message: _ "Indeed we must not delay. The mines in the northeast are the best way to enter."
                    }
                
            }
    }

    event: {
        name: "moveto"
        filter: {
            side: 1
            x: "10-15"
            y: "10-15"
        }
        do: ->
            NAMED_LOYAL_UNIT(5, "Cuttle Fish", 13, 13, "Cuttle Fish", _ "Cuttle Fish")

            Message{
                speaker: "Cuttle Fish"
                message: _ "Ruarrrrr!!!"    -- wmllint: no spellcheck
            }
            Message{
                speaker: "unit"
                message: _ "A monster was hiding in that lake!"
            }
            Role{
                type: "Thief," .. 
                "Poacher,Footpad,Thug," .. 
                "Horseman," .. 
                "Elvish Scout,Elvish Archer,Elvish Fighter," .. 
                "Fighter," .. 
                "Rogue," .. 
                "Trapper,Outlaw,Bandit," .. 
                "Lancer,Knight," .. 
                "Elvish Rider,Elvish Marksman,Elvish Ranger,Elvish Hero,Elvish Captain," .. 
                "Elvish Lord," .. 
                "Commander," .. 
                "Assassin," .. 
                "Ranger,Huntsman,Fugitive,Highwayman," .. 
                "Grand Knight,Paladin," .. 
                "Elvish Outrider,Elvish Sharpshooter,Elvish Avenger,Elvish Champion,Elvish Marshal," .. 
                "Elvish High Lord," .. 
                "Lord"
                role: "whiner"
            }
            Message{
                role: "whiner"
                message: _ "The legend was true! There are always tentacled creatures hiding in the lakes near the dwarven tunnels."
            }
    }

    event: {
        name: "victory dance"
        do: ->
            Message{
                speaker: "narrator"
                image: "wesnoth-icon.png"
                message: _ "But Konradâ€™s party was not alone in entering the caves..."
            }

            NAMED_LOYAL_UNIT(2, "Princess", 8, 44, "Li'sar", _ "Liâ€™sar")
            Unit{
                amend: true
                profile: "portraits/lisar.png"
            }
            LISAR_GUARD_DOORS!
            LISAR_GUARD_DOORS!
            LISAR_GUARD_DOORS!
            LISAR_GUARD_DOORS!
            LISAR_GUARD_DOORS!
            LISAR_GUARD_DOORS!
            Message{
                speaker: "Li'sar"
                message: _ "Whew! We make our way through the dangerous fog of the mountains, and now there is all this chaos before us! Come on, men! We must make it to the caves that lie ahead of us!"
            }
    }

    event: {
        name: "victory"
        do: ->
            CLEAR_VARIABLE("true_entrance_location")
            CLEAR_VARIABLE("outlaw_advisor_store")
            CLEAR_VARIABLE("outlaw_name")

            RESTORE_LISAR!
    }

    INCLUDE("campaigns/Heir_To_The_Throne/utils/deaths.cfg")
}

LISAR_GUARD_DOORS = nil
