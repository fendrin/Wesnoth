--textdomain wesnoth-httt
Scenario{
    id: "10_Gryphon_Mountain"
    name: _ "Gryphon Mountain"
    map: "campaigns/Heir_To_The_Throne/maps/10_Gryphon_Mountain.map"
    <TURNS(27, 24, 21)

    <DEFAULT_SCHEDULE!

    next_scenario: "11_The_Ford_of_Abez"

    <SCENARIO_MUSIC("wanderer.ogg")
    <EXTRA_SCENARIO_MUSIC("knolls.ogg")
    <EXTRA_SCENARIO_MUSIC("loyalists.ogg")
    <EXTRA_SCENARIO_MUSIC("battle.ogg")
    <EXTRA_SCENARIO_MUSIC("siege_of_laurelmor.ogg")
    <EXTRA_SCENARIO_MUSIC("northern_mountains.ogg")

    event: {
        name: "prestart"
        do: ->
            VARIABLE("eggs_done", false)
            CLEAR_VARIABLE("gryphons_return")
            Objectives{
                side: 1
                objective: {
                    description: _ "Defeat the enemy leader"
                    condition: "win"
                }
                objective: {
                    show_if: {
                        <CHECK_VARIABLE("eggs_done", false)
                    }
                    <BONUS_OBJECTIVE_CAPTION!
                    description: _ "Defeat the mother gryphon before the enemy does" .. OBJECTIVE_FOOTNOTE(_ "(special bonus)")
                    condition: "win"
                }
                objective: {
                    description: _ "Death of Konrad"
                    condition: "lose"
                }
                objective: {
                    description: _ "Death of Delfador"
                    condition: "lose"
                }
                objective: {
                    description: _ "Death of Kalenz"
                    condition: "lose"
                }

                <TURNS_RUN_OUT!

                gold_carryover: {
                    bonus: true
                    carryover_percentage: 40
                }
            }
    }

    <HTTT_TRACK(JOURNEY_10_NEW!)

    <PLACE_IMAGE("scenery/nest-empty.png", 10, 14)
    <PLACE_IMAGE("scenery/nest-empty.png", 16, 16)
    <PLACE_IMAGE("scenery/nest-empty.png", 12, 18)
    <PLACE_IMAGE("scenery/nest-full.png", 13, 16)

    <PLACE_IMAGE("scenery/rock1.png", 23, 12)
    <PLACE_IMAGE("scenery/rock2.png", 8, 31)
    <PLACE_IMAGE("scenery/rock3.png", 15, 2)

    side: {
        type: "Commander"
        id: "Konrad"
        name: _ "Konrad"
        unrenamable: true
        profile: "portraits/konrad-human.png"
        side: 1
        canrecruit: true
        team_name: "elves"
        user_team_name: _ "Rebels"
        controller: "human"
        gold: 200
        <FLAG_VARIANT("long")
    }

    side: {
        type: "General"
        id: "Robryn"
        name: _ "Robryn"
        side: 2
        canrecruit: true
        recruit: {"Cavalryman", "Swordsman", "Mage", "Ogre", "Duelist", "Longbowman"}
        ai: {
            <ATTACK_DEPTH(1, 3, 5)
            recruitment_pattern: {"scout", "fighter", "fighter", "fighter", "archer", "mixed fighter"}
        }
        <GOLD(160, 270, 350)
        team_name: "asheviere"
        user_team_name: _ "Asheviere"
        <FLAG_VARIANT("loyalist")
    }

    <STARTING_VILLAGES(2, 8)

    side: {
        type: "Gryphon"
        id: "Mother Gryphon"
        name: _ "Mother Gryphon"
        side: 3
        team_name: "gryphons"
        user_team_name: _ "Gryphons"
        canrecruit: true
        recruit: "Gryphon"
        gold: 0
        <NO_INCOME!
        ai: {
            <ATTACK_DEPTH(1, 3, 5)
            passive_leader: true
        }
    }

    event: {
        name: "prestart"
        do: ->
            CLEAR_VARIABLE("get_gryphons")
            NEED_DELFADOR({placement: "leader"})
            NEED_KALENZ({placement: "leader"})

            NAMED_LOYAL_UNIT(3, "Sleeping Gryphon", 12, 18, "Graak", _ "Graak")
            NAMED_LOYAL_UNIT(3, "Sleeping Gryphon", 16, 16, "Grook", _ "Grook")
            NAMED_LOYAL_UNIT(3, "Sleeping Gryphon", 10, 14, "Gruak", _ "Gruak")
-- wmllint: recognize Rampant Graak
-- wmllint: recognize Rampant Grook
-- wmllint: recognize Rampant Gruak

            VARIABLE("gryphon_disposition", 1)
    }

    event: {
        name: "start"
        do: ->
            Message{
                speaker: "Konrad"
                message: _ "What is this place? That is one big mountain!"
            }
            Message{
                speaker: "Delfador"
                message: _ "That is the fabled Gryphon Mountain."
            }
            Message{
                speaker: "Konrad"
                message: _ "Gryphon Mountain! Maybe we could steal some eggs from the gryphons and train the young to be flying mounts. Would that work, Delfador?"
            }
            Message{
                speaker: "Delfador"
                message: _ "We can try to do that, but we must be careful. To disturb the gryphons could prove dangerous... and yet such mounts could help us greatly later. Whatever we do, we must pass by this place."
            }
            Message{
                speaker: "Konrad"
                message: _ "Well, let’s start climbing the mountain!"
            }
    }

--if the player kills the mother gryphon
--and gets her eggs
    event: {
        name: "die"
        filter: {
            id: "Mother Gryphon"
        }
        filter_second: {
            side: 1
        }
        do: ->
            Message{
                speaker: "second_unit"
                message: _ "Here are the mother Gryphon’s eggs!"
            }
            Message{
                speaker: "Konrad"
                <KONRAD_VARIATION("glad")
                message: _ "Excellent! We should be able to breed Gryphons for our own uses now!"
            }
            Set_Variable{
                name: "get_gryphons"
                value: 1
            }
            REMOVE_IMAGE(13, 16)
            PLACE_IMAGE("scenery/nest-empty.png", 13, 16)
            VARIABLE("eggs_done", true)
    }

    event: {
        name: "turn 2"
        do: ->
            Message{
                speaker: "Delfador"
                message: _ "It appears that we are not the only ones interested in this mountain. Once again the Queen opposes us!"
            }
            Message{
                speaker: "Konrad"
                <KONRAD_VARIATION("mad")
                message: _ "Quickly, men! Onward!"
            }
    }

--if the enemy gets to the gryphon eggs first
    event: {
        name: "die"
        filter: {
            id: "Mother Gryphon"
        }
        filter_second: {
            side: 2
        }
        do: ->
            Message{
                speaker: "second_unit"
                message: _ "Ha ha! We have killed this foul beast of the air, and can deny the rebels its eggs!"
            }
            VARIABLE_OP("gryphon_disposition", "sub", 1)
            REMOVE_IMAGE(13, 16)
            PLACE_IMAGE("scenery/nest-empty.png", 13, 16)
            VARIABLE("eggs_done", true)
    }
    event: {
        name: "attack"
        filter: {
            side: 2
        }
        filter_second: {
            side: 3
        }
        do: ->
            VARIABLE_OP("gryphon_disposition", "add", 2)
    }
    event: {
        name: "attack"
        first_time_only: false
        filter: {
            side: 1
        }
        filter_second: {
            side: 3
        }
        do: ->
            VARIABLE_OP("gryphon_disposition", "sub", 1)
    }
    event: {
        name: "die"
        filter: {
            side: 3
        }
        filter_second: {
            side: 1
        }
        do: ->
            VARIABLE_OP("gryphon_disposition", "sub", 10)
    }

    event: {
        name: "die"
        filter: {
            id: "Robryn"
        }
        do: ->
            Message{
                speaker: "Konrad"
                message: _ "We have defeated them! Now what do we do?"
            }
            Message{
                speaker: "Delfador"
                message: _ "We must continue north. It is too late to return to the safety of Elensefar or Alduin before winter falls. We must therefore cross the great river and continue toward the land of the dwarves. Hurry, let us go!"
            }
            If{
                variable: {
                    name: "get_gryphons"
                    numerical_equals: 1
                }
                then: ->
                    Message{
                        speaker: "Konrad"
                        message: _ "With these gryphon eggs we should be able to breed gryphons that will serve us. When they are large enough to carry mounts, we can hire gryphon riders!"
                    }
                
                elseif: {
                    and: {
                        variable: {
                            name: "gryphon_disposition"
                            greater_than_equal_to: 2
                        }
                        have_unit: {
                            side: 3
                        }
                    }
                    then: ->
                        Message{
                            speaker: "Konrad"
                            message: _ "It is a shame we could not get those gryphon eggs. I am glad we did not slaughter any gryphons. They are magnificent animals (looks back at the mountain). Still..."
                        }
                        Message{
                            speaker: "Konrad"
                            message: _ "Whoa!!"
                        }
--
-- Wake up all the sleeping gryphons
--
                        Store_Unit{
                            variable: "gryphon_store"
                            filter: {
                                side: 3
                            }
                        }
                        Foreach{
                            array: "gryphon_store"
                            do: ->
                                VARIABLE("this_item.type", "Gryphon")
                                Unstore_Unit{
                                    variable: "this_item"
                                }
                            
                        }
                        CLEAR_VARIABLE("gryphon_store")
--
-- Figure out where Konrad is standing
--
                        Store_Unit{
                            variable: "konrad_store"
                            filter: {
                                id: "Konrad"
                            }
                        }
                        If{
                            variable: {
                                name: "konrad_store.x"
                                greater_than: 13
                            }
                            then: ->
                                VARIABLE("destination_x", 24)
                            
                            else: ->
                                VARIABLE("destination_x", 1)
                            
                        }
                        If{
                            variable: {
                                name: "konrad_store.y"
                                greater_than: 16
                            }
                            then: ->
                                VARIABLE("destination_y", 39)
                            
                            else: ->
                                VARIABLE("destination_y", 1)
                            
                        }
--
-- Put some more gryphons up there and view the mountain
--
                        NAMED_LOYAL_UNIT(3, "Gryphon", 13, 14, "Graik", _ "Graik")
                        NAMED_LOYAL_UNIT(3, "Gryphon", 13, 18, "Griak", _ "Griak")
                        Scroll_To{
                            x: 13, y: 16
                        }
                        Message{
                            speaker: "narrator"
                            image: "wesnoth-icon.png"
                            message: _ "Indeed, the majestic beasts were now circling the mountain’s peak. Several glared in Konrad’s direction, their eagle eyes fixed on him at an incredible distance."
                        }
                        Sound{
                            name: "gryphon-shriek-1.ogg"
                        }
                        Store_Unit{
                            variable: "gryphon_store"
                            filter: {
                                side: 3
                            }
                        }
                        Foreach{
                            array: "gryphon_store"
                            do: ->
                                VARIABLE("temp_x", this_item.x)
                                VARIABLE("temp_y", this_item.y)
                                VARIABLE("range_x", "#{temp_x}, #{destination_x")
                                VARIABLE("range_y", "#{temp_y}, #{destination_y")
                                Kill{
                                    x: temp_x
                                    y: temp_y
                                }
                                Move_Unit_Fake{
                                    type: "Gryphon"
                                    side: 3
                                    x: range_x
                                    y: range_y
                                }
                            
                        }
                        CLEAR_VARIABLE("konrad_store")
                        CLEAR_VARIABLE("gryphon_store")
                        CLEAR_VARIABLE("temp_x")
                        CLEAR_VARIABLE("temp_y")
                        CLEAR_VARIABLE("range_x")
                        CLEAR_VARIABLE("range_y")
                        CLEAR_VARIABLE("destination_x")
                        CLEAR_VARIABLE("destination_y")
                        Message{
                            speaker: "Delfador"
                            message: _ "Amazing! I have never before heard of such behavior in gryphons."
                        }
                        Message{
                            speaker: "Konrad"
                            message: _ "What does it mean?"
                        }
                        Message{
                            speaker: "Delfador"
                            message: _ "I do not know. Come now, the show is over."
                        }
                        VARIABLE("gryphons_return", true)
                    
                }
                else: ->
                    Message{
                        speaker: "Konrad"
                        message: _ "It is a shame we could not get those gryphon eggs — they would surely have given us an advantage sometime. Still, we must continue."
                    }
                
            }
            Message{
                speaker: "Delfador"
                message: _ "Let us continue onward!"
            }

            Endlevel{
                result: "victory"
                bonus: true
                <NEW_GOLD_CARRYOVER(40)
            }
    }

    event: {
        name: "victory"
        do: ->
            CLEAR_VARIABLE("gryphon_disposition,eggs_done")
    }

-- Sleeping Gryphons will counter if attacked, then wake up and
-- morph to new Gryphons (a different unit type). The new unit will
-- then usually fly away because the AI thinks your attacking unit
-- is too tough for it to take.  This could be fixed with some
-- WML contortions, but why do it?  The nonstandard behavior adds
-- variety and a bit of mystery.  Gryphon Mountain is a magical place.

--
-- If the sleeping gryphon is attacked, it wakes up
--

    event: {
        name: "attack"
        filter_second: {
            id: "Graak"
        }
        do: ->
            Modify_Unit{
                filter: {
                    id: "Graak"
                }
                type: "Gryphon"
                id: "Rampant Graak"
                name: _ "Rampant Graak"
            }
    }

    event: {
        name: "attack"
        filter_second: {
            id: "Grook"
        }
        do: ->
            Modify_Unit{
                filter: {
                    id: "Grook"
                }
                type: "Gryphon"
                id: "Rampant Grook"
                name: _ "Rampant Grook"
            }
    }

    event: {
        name: "attack"
        filter_second: {
            id: "Gruak"
        }
        do: ->
            Modify_Unit{
                filter: {
                    id: "Gruak"
                }
                type: "Gryphon"
                id: "Rampant Gruak"
                name: _ "Rampant Gruak"
            }
    }

--
-- If the sleeping gryphon attacks you, it wakes up
--

    event: {
        name: "attack"
        filter: {
            id: "Graak"
        }
        do: ->
            Modify_Unit{
                filter: {
                    id: "Graak"
                }
                type: "Gryphon"
                id: "Rampant Graak"
                name: _ "Rampant Graak"
            }
    }

    event: {
        name: "attack"
        filter: {
            id: "Grook"
        }
        do: ->
            Modify_Unit{
                filter: {
                    id: "Grook"
                }
                type: "Gryphon"
                id: "Rampant Grook"
                name: _ "Rampant Grook"
            }
    }

    event: {
        name: "attack"
        filter: {
            id: "Gruak"
        }
        do: ->
            Modify_Unit{
                filter: {
                    id: "Gruak"
                }
                type: "Gryphon"
                id: "Rampant Gruak"
                name: _ "Rampant Gruak"
            }
    }

    INCLUDE("campaigns/Heir_To_The_Throne/utils/deaths.cfg")
}
