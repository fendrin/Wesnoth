--textdomain wesnoth-tsg
Scenario{
    id: "06b_The_Long_March"

    name: _ "The Long March"
    next_scenario: "07b_Pebbles_in_the_Flood"

    <SCENARIO_MUSIC("heroes_rite.ogg")
    <EXTRA_SCENARIO_MUSIC("the_dangerous_symphony.ogg")

-- Note: the map contains a large grid of roads but only one path through the
-- forest will be picked when the scenario starts. When editing the map, make
-- sure not to create any dead ends in the roads, and preferably also make
-- sure to not have sets of three dirt hexes all adjacent to each other.
    map: "campaigns/The_South_Guard/maps/06b_The_Long_March.map"

    INCLUDE("campaigns/The_South_Guard/utils/sg_deaths.cfg")

    <DEFAULT_SCHEDULE_DUSK!

    victory_when_enemies_defeated: false
    <TURNS(30, 25, 20)

    <TSG_BIGMAP(JOURNEY_06B_NEW!)

-- The South Guard

    side: {
        side: 1
        type: "Horseman Commander"
        id: "Deoran"
        name: _ "Deoran"
        profile: "portraits/deoran.png"
        unrenamable: true

        team_name: "South_Guard"
        user_team_name: _ "South Guard"
        controller: "human"
        <CUSTOM_SG_FLAG!

        fog: true
        shroud: true
        share_view: true
        share_maps: true

        <GOLD(125, 100, 80)
        <INCOME(6, 4, 2)

        canrecruit: true
        recruit: {"Bowman", "Spearman", "Cavalryman", "Thug", "Footpad"}
    }

-- We're not using an extra side for the ambusher elves
-- - they will be on the undead side by default (so the undead
-- don't trigger ambushes), then change to the active elven side
-- and are being petrified to prevent any action
--
-- note: this means that elves can trigger ambushes, which should
-- be treated as if they "ran for reinforcements" - thus these elves
-- switch to their side just as if the player had triggered the ambush
-- (this is a better solution than undead triggering ambushes, and
-- should occur less often)

-- The Undead Hordes (Part II)

    side: {
        side: 2
        no_leader: true

        team_name: "undead"
        user_team_name: _ "Undead"
        controller: "ai"

        fog: false
        shroud: false

        canrecruit: true
        ai: {
            aggression: 1.0
            grouping: false
            attack_depth: 1
            village_value: 0
            goal: {
                name: "target"
                criteria: {
                    side: 1
                }
                value: 20
            }
        }
        <FLAG_VARIANT("undead")
    }

-- When discovering an ambusher, the ambusher will be moved to this side so
-- it may move and attack normally

    side: {
        side: 3
        no_leader: true
        team_name: "elves"
        user_team_name: _ "Elves"
        controller: "ai"

        ai: {
            aggression: 0.7
            caution: 0.4
            goal: {
                name: "target"
                criteria: {
                    side: 1
                }
                value: 5
            }
        }
        <FLAG_VARIANT("long")
    }

-- This prestart event iterates through the labyrinth and picks a random
-- route through it, stores the path in $secret_path, covers everything with
-- forest and then places the ford on the endpoint of the chosen path.
    event: {
        name: "prestart"
        do: ->
            VARIABLE("previous_path_hex.x", 18)
            VARIABLE("previous_path_hex.y", 36)
            VARIABLE("new_path_hex.x", 18)
            VARIABLE("new_path_hex.y", 35)
            VARIABLE("secret_path.x", 18)
            VARIABLE("secret_path.y", 35)

            if EASY
                VARIABLE("first_undead_spawn_turn", 3)
            
            if NORMAL
                VARIABLE("first_undead_spawn_turn", 2)
            
            if HARD
                VARIABLE("first_undead_spawn_turn", 1)
            

            While{
                variable: {
                    name: "new_path_hex.y"
                    greater_than: 10
                }

                do: ->
                    If{
                        have_location: {
                            terrain: "R*"

                            filter_adjacent_location: {
                                x: new_path_hex.x, y: new_path_hex.y
                                adjacent: {"sw", "s", "se"}
                            }

                            not: {
                                x: previous_path_hex.x, y: previous_path_hex.y
                            }
                        }

                        then: ->
                            Store_Locations{
                                terrain: "R*"

                                filter_adjacent_location: {
                                    x: new_path_hex.x, y: new_path_hex.y
                                    adjacent: {"sw", "s", "se"}
                                }

                                not: {
                                    x: previous_path_hex.x, y: previous_path_hex.y
                                }

                                variable: "new_road_branches"
                            }
                        

                        else: ->
                            Store_Locations{
                                terrain: "R*"

                                filter_adjacent_location: {
                                    x: new_path_hex.x, y: new_path_hex.y
                                    adjacent: {"nw", "n", "ne"}
                                }

                                not: {
                                    x: previous_path_hex.x, y: previous_path_hex.y
                                }

                                variable: "new_road_branches"
                            }
                        
                    }

                    VARIABLE("previous_path_hex.x", new_path_hex.x)
                    VARIABLE("previous_path_hex.y", new_path_hex.y)

                    If{
                        variable: {
                            name: "new_road_branches.length"
                            numerical_equals: 1
                        }

                        then: ->
                            VARIABLE("new_path_hex.x", new_road_branches.x)
                            VARIABLE("new_path_hex.y", new_road_branches.y)
                        

                        elseif: {
                            variable: {
                                name: "new_road_branches.length"
                                greater_than: 1
                            }

                            then: ->
                                RANDOM("1..#{new_road_branches.length")
                                VARIABLE_OP("random", "sub", 1)

                                VARIABLE("new_path_hex.x", new_road_branches[random].x)
                                VARIABLE("new_path_hex.y", new_road_branches[random].y)
                            
                        }
                    }

--[item]
--    x,y=$new_path_hex.x,$new_path_hex.y
--    image=misc/capture.png
--[/item]

                    Store_Locations{
                        x: new_path_hex.x, y: new_path_hex.y

                        or: {
                            find_in: "secret_path"
                        }

                        variable: "secret_path"
                    }
                
            }

            Store_Locations{
                find_in: "secret_path"

                variable: "secret_path_unrevealed"
            }

            Store_Locations{
                terrain: "R*"
                y: "10-35"

                variable: "secret_path_to_hide"
            }

            Foreach{
                array: "secret_path_to_hide"
                do: ->
                    Store_Locations{
                        terrain: "*^F*"

                        and: {
                            x: this_item.x, y: this_item.y
                            radius: 1
                        }

                        variable: "adjacent_forests"
                    }

                    RANDOM("1..#{adjacent_forests.length")
                    VARIABLE_OP("random", "sub", 1)

                    Terrain{
                        x: this_item.x, y: this_item.y
                        terrain: adjacent_forests[random].terrain
                    }
                
            }

            VARIABLE("ford_mask_x", new_path_hex.x)
            VARIABLE_OP("ford_mask_x", "sub", 1)

-- This mask creates the ford at the end of the road
            Terrain_Mask{
                x: ford_mask_x
                y: 3
                border: false
                mask: "Ww, Wwf, Ww
Ww, Wwf, Ww
Ww, Wwf, Ww
Ww, Wwf, Ww
Ww, Wwf, Ww
Ww, Wwf, Ww
Ww, Wwf, Ww
Ww, Wwf, Ww
"

                rule: {
                    old: {"!", "W*"}
                    use_old: true
                }
            }

-- This mask creates a straight road leading north of the ford
            Terrain_Mask{
                x: ford_mask_x
                y: 0
                mask: "_f, _f, Re, _f
_f, _f, Re, _f
_f, _f, Re, _f
_f, _f, Re, _f
_f, _f, Re, _f
_f, _f, Re, _f
_f, _f, Re, _f
_f, _f, Re, _f
"

                rule: {
                    old: {"W*", "D*"}
                    use_old: true
                }
            }

            NAMED_GENERIC_UNIT(3, "Naga Warrior", new_path_hex.x, 6, "Fssth", _ "Fssth"), GUARDIAN!

            if NORMAL
                NAMED_GENERIC_UNIT(3, "Naga Fighter", new_path_hex.x, 6, "Wizzi", _ "Wizzi"), GUARDIAN!
            

            if HARD
                NAMED_GENERIC_UNIT(3, "Naga Warrior", new_path_hex.x, 6, "Wizzi", _ "Wizzi"), GUARDIAN!
            

            CLEAR_VARIABLE("new_road_branches,secret_path_to_hide,adjacent_forests")

            VARIABLE("urza_dialogue", 0)
    }

    event: {
        name: "prestart"

        <if EASY then {
            <VARIABLE("num_of_ambushers", 12)
        }

        <if NORMAL then {
            <VARIABLE("num_of_ambushers", 16)
        }

        <if HARD then {
            <VARIABLE("num_of_ambushers", 20)
        }

-- This places a bunch of lvl1 elves along the secret path, the player
-- will probably bump into all of these.
        do: ->
            SCATTER_UNITS(num_of_ambushers, "Elvish Fighter,Elvish Archer,Elvish Shaman,Elvish Scout,Elvish Fighter", 3, {
                    terrain: "*^F*"
                    x: "3-34"
                    y: "13-31"

                    filter_adjacent_location: {
                        find_in: "secret_path"
                    }

                    not: {
                        find_in: "secret_path"
                    }

                    not: {
                        filter: {
                        }
                    }

                    not: {
                        filter_adjacent_location: {
                            filter: {
                            }
                        }
                    }
                },{
                    side: 2
                    generate_name: true
                    random_traits: true
                    upkeep: "loyal"

                    modifications: {
                        object: {
                            effect: {
                                apply_to: "new_ability"

                                abilities: {
                                    hides: {
                                        id: "elvish_ambush"
                                        affect_self: true

                                        filter_self: {
-- only effective as long as the unit
-- is on the ambusher side
                                            side: 2

                                            filter_location: {
                                                terrain: "*^F*"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
            })

-- This places lvl2 elves in the forest, away from the secret path. The
-- player will mostly only bump into these if he wanders away from the
-- path, although a few might occasionally be close enough to join an
-- ambush by the lvl1 elves next to the path.
            SCATTER_UNITS(30, "Elvish Hero,Elvish Captain,Elvish Marksman,Elvish Ranger,Elvish Druid,Elvish Sorceress", 2, {
                    terrain: "*^F*"
                    x: "3-34"
                    y: "13-31"

                    not: {
                        radius: 3
                        find_in: "secret_path"
                    }

                    not: {
                        filter: {
                        }
                    }

                    not: {
                        filter_adjacent_location: {
                            filter: {
                            }
                        }
                    }
                },{
                    side: 2
                    generate_name: true
                    random_traits: true
                    upkeep: "loyal"

                    modifications: {
                        object: {
                            effect: {
                                apply_to: "new_ability"

                                abilities: {
                                    hides: {
                                        id: "elvish_ambush"
                                        affect_self: true

                                        filter_self: {
-- only effective as long as the unit
-- is on the ambusher side
                                            side: 2

                                            filter_location: {
                                                terrain: "*^F*"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
            })
    }

    event: {
        name: "start"
        do: ->
            Message{
                speaker: "narrator"
                message: _ "Deoran and Urza Afalas led their men quickly from Mebrin’s fortress..."
                image: "wesnoth-icon.png"
            }

            Recall{
                id: "Urza Afalas"
            }
            Recall{
                id: "Sir Gerrick"
            }
            Recall{
                id: "Minister Hylas"
            }
            Recall{
                id: "Jarek"
            }

            Message{
                speaker: "Deoran"
                message: _ "Will this forest ever end? How can we know what path to take?!"
            }
            Message{
                speaker: "Urza Afalas"
                message: _ "You have to follow me! I have often traveled these woods avoiding the elves with my comrades, and I know a secret path through it."
            }
            Message{
                speaker: "Sir Gerrick"
                message: _ "Can we trust him? His people are murderers and thieves!"
            }
            Message{
                speaker: "Minister Hylas"
                message: _ "Do we have any choice? Our food is running out, and it will be winter soon..."
            }
            Message{
                speaker: "Minister Hylas"
                message: _ "Beware! I sense that there are many undead creatures chasing us. We should move quickly."
            }
            Message{
                speaker: "Urza Afalas"
                message: _ "Let us go quickly, then. I will show you the way."
            }

            MOVE_UNIT({id: "Urza Afalas"}, 18, 35)

            Message{
                speaker: "Urza Afalas"
                message: _ "Remember that these woods are crawling with elves, and I don’t think they’ll receive us too kindly. Stay on the path and perhaps we can avoid at least most of them."
            }

            Objectives{
                side: 1
                objective: {
                    description: _ "Move Deoran through the woods and over the river"
                    condition: "win"
                }
                objective: {
                    description: _ "Death of Deoran"
                    condition: "lose"
                }
                objective: {
                    description: _ "Death of Sir Gerrick"
                    condition: "lose"
                }
                objective: {
                    description: _ "Death of Minister Hylas"
                    condition: "lose"
                }
                objective: {
                    description: _ "Death of Urza Afalas"
                    condition: "lose"
                }

                <TURNS_RUN_OUT!

                gold_carryover: {
                    bonus: true
                    carryover_percentage: 40
                }

                note: {
                    description: _ "At the start of each turn, Urza Afalas will reveal as much of the secret path as is within his vision range."
                }
            }
    }

-- This event stores the vision range of Urza Afalas into
-- $urza_movement_area and then reveals any parts of the secret path within
-- it.
--
-- Note: the mechanism inside the loop is very fragile and the ordering of
-- the commands is important. Be sure to test thoroughly after making any
-- changes to it.
    event: {
        name: "new turn"
        first_time_only: false
        do: ->
            Store_Unit{
                filter: {
                    id: "Urza Afalas"
                }

                kill: false
                variable: "stored_Urza_Afalas"
            }

            VARIABLE("urza_movement_area.x", stored_Urza_Afalas.x)
            VARIABLE("urza_movement_area.y", stored_Urza_Afalas.y)

            VARIABLE("urza_moves", stored_Urza_Afalas.max_moves)

            While{
                variable: {
                    name: "urza_moves"
                    greater_than: 0
                }

                do: ->
                    Store_Locations{
                        find_in: "delayed_2_mp_hexes"

                        variable: "previous_2_mp_hexes"
                    }

                    Store_Locations{
                        terrain: {"*^F*", "Hh", "Ss", "Ww"}

                        filter_adjacent_location: {
                            find_in: "urza_movement_area"
                        }

                        not: {
                            find_in: "urza_movement_area"
                        }

                        not: {
                            find_in: "secret_path"
                        }

                        not: {
                            find_in: "previous_2_mp_hexes"
                        }

                        variable: "delayed_2_mp_hexes"
                    }

                    Store_Locations{
                        find_in: "urza_movement_area"
                        radius: 1

                        filter_radius: {
                            terrain: {"R*", "Gg", "C*", "K*", "*^V*"}

                            or: {
                                terrain: "*^F*"
                                find_in: "secret_path"
                            }
                        }

                        variable: "urza_movement_area"
                    }

                    Store_Locations{
                        find_in: "urza_movement_area"

                        or: {
                            find_in: "previous_2_mp_hexes"
                        }

                        variable: "urza_movement_area"
                    }

                    CLEAR_VARIABLE("previous_2_mp_hexes")

                    VARIABLE_OP("urza_moves", "sub", 1)
                
            }

-- extend the movement area by one to expand the area to represent the
-- vision range instead
            Store_Locations{
                find_in: "urza_movement_area"
                radius: 1

                variable: "urza_movement_area"
            }

-- marks the area visibly on the map, useful for debugging
--[foreach]
--    array=urza_movement_area
--    [do]
--        [label]
--            x,y=$this_item.x,$this_item.y
--            text=$turn_number
--        [/label]
--    [/do]
--[/foreach]

-- store all yet unrevealed hidden road hexes within the area and reveal
-- them
            Store_Locations{
                not: {
                    terrain: "R*"
                }
                y: "10-35"
                find_in: "urza_movement_area"

                and: {
                    find_in: "secret_path"
                }

                variable: "secret_path_to_reveal"
            }

            Store_Locations{
                find_in: "secret_path_unrevealed"

                not: {
                    find_in: "secret_path_to_reveal"
                }

                variable: "secret_path_unrevealed"
            }

            Scroll_To_Unit{
                id: "Urza Afalas"
            }

            Foreach{
                array: "secret_path_to_reveal"
                do: ->
                    Terrain{
                        x: this_item.x, y: this_item.y
                        terrain: "Re"
                    }
                
            }

            Redraw{
            }

-- This makes Urza Afalas say different things based on how much of the
-- path is still unrevealed
            If{
                variable: {
                    name: "secret_path_to_reveal.length"
                    greater_than: 0
                }

                variable: {
                    name: "turn_number"
                    greater_than: 1
                }

                variable: {
                    name: "urza_dialogue"
                    less_than: 4
                }

                then: ->
                    If{
                        variable: {
                            name: "secret_path_unrevealed.length"
                            less_than: 10
                        }

                        variable: {
                            name: "urza_dialogue"
                            equals: 3
                        }

                        then: ->
                            Message{
                                speaker: "Urza Afalas"
                                message: _ "Just a little further!"
                            }
                        

                        elseif: {
                            variable: {
                                name: "secret_path_unrevealed.length"
                                less_than: 20
                            }

                            variable: {
                                name: "urza_dialogue"
                                equals: 2
                            }

                            then: ->
                                Message{
                                    speaker: "Urza Afalas"
                                    message: _ "We’re almost there!"
                                }
                            
                        }
                        elseif: {
                            variable: {
                                name: "secret_path_unrevealed.length"
                                less_than: 30
                            }

                            variable: {
                                name: "urza_dialogue"
                                equals: 1
                            }

                            then: ->
                                Message{
                                    speaker: "Urza Afalas"
                                    message: _ "Come on! Hurry!"
                                }
                            
                        }
                        elseif: {
                            variable: {
                                name: "secret_path_unrevealed.length"
                                less_than: 40
                            }

                            variable: {
                                name: "urza_dialogue"
                                equals: 0
                            }

                            then: ->
                                Message{
                                    speaker: "Urza Afalas"
                                    message: _ "Keep moving!"
                                }
                            
                        }
                    }

                    VARIABLE_OP("urza_dialogue", "add", 1)
                
            }

            If{
                have_location: {
                    y: 10
                    find_in: "secret_path_to_reveal"
                }

                then: ->
                    Message{
                        speaker: "Urza Afalas"
                        message: _ "From here you can see the banks of the river! Across it we will find the sun again, and an end to these cursed trees!"
                    }
                
            }

            CLEAR_VARIABLE("urza_movement_area,delayed_2_mp_hexes,previous_2_mp_hexes,secret_path_to_reveal,stored_Urza_Afalas")
    }

    event: {
        name: "turn refresh"
        first_time_only: false
        do: ->
            If{
                variable: {
                    name: "side_number"
                    equals: 2
                }

                then: ->
                    MODIFY_UNIT({side: 2, race: "elf"}, "moves", 0)
                
            }
    }

    event: {
        name: "moveto"

        filter: {
            side: 1

            filter_adjacent: {
                side: 2
                race: "elf"
            }
        }
        do: ->
            MODIFY_UNIT({
                    side: 2
                    race: "elf"
                    filter_location: {
                        x: x1, y: y1
                        radius: 4
                    }
err: ../attic/data/campaigns/The_South_Guard/scenarios/06b_The_Long_March.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 865:         ) side 3}

                    redraw: {}

                    message: {
                        race: "elf"
                        filter_location: {
                            filter_adjacent_location: {
                                x: x1, y: y1
                            }
                        }
                        message: _ "You humans have kidnapped Mebrin the Sage. You will pay for your crimes."
                    }
                    message: {
                        id: "Deoran"
                        message: _ "Your sage Mebrin is the criminal. He practices necromancy and now commands an army of undead. By the laws of Wesnoth, the punishment for his crimes is death!"
                    }
                    message: {
                        race: "elf"
                        filter_location: {
                            filter_adjacent_location: {
                                x: x1, y: y1
                            }
                        }
                        message: _ "It is you who is a criminal and who is in a company of criminals. We will not let you kill Mebrin!"
                    }

                    event: {
                        name: "moveto"
                        delayed_variable_substitution: true

                        filter: {
                            side: 1

                            filter_adjacent: {
                                side: 2
                                race: "elf"
                            }
                        }
                        do: ->
                            MODIFY_UNIT({
                                    side: 2
                                    race: "elf"
                                    filter_location: {
                                        x: x1, y: y1
                                        radius: 4
                                    }
err: ../attic/data/campaigns/The_South_Guard/scenarios/06b_The_Long_March.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 912:             ) side 3}

                                    redraw: {}

                                    message: {
                                        race: "elf"
                                        filter_location: {
                                            filter_adjacent_location: {
                                                x: x1, y: y1
                                            }
                                        }
                                        message: _ "We cannot allow you bandits and criminals to pass through our lands!"
                                    }
                                    message: {
                                        speaker: "Urza Afalas"
                                        message: _ "We wish only to return to our homes!"
                                    }
                                    message: {
                                        race: "elf"
                                        filter_location: {
                                            filter_adjacent_location: {
                                                x: x1, y: y1
                                            }
                                        }
                                        message: _ "Nevertheless, we will have vengeance for Mebrin!!"
                                    }

                                    event: {
                                        name: "moveto"
                                        delayed_variable_substitution: true

                                        filter: {
                                            side: 1

                                            filter_adjacent: {
                                                side: 2
                                                race: "elf"
                                            }
                                        }
                                        do: ->
                                            MODIFY_UNIT({
                                                    side: 2
                                                    race: "elf"
                                                    filter_location: {
                                                        x: x1, y: y1
                                                        radius: 4
                                                    }
err: ../attic/data/campaigns/The_South_Guard/scenarios/06b_The_Long_March.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 959:                 ) side 3}

                                                    redraw: {}

                                                    message: {
                                                        race: "elf"
                                                        filter_location: {
                                                            filter_adjacent_location: {
                                                                x: x1, y: y1
                                                            }
                                                        }
                                                        message: _ "Get them!"
                                                    }

                                                    event: {
                                                        name: "moveto"
                                                        first_time_only: false
                                                        delayed_variable_substitution: true

                                                        filter: {
                                                            side: 1

                                                            filter_adjacent: {
                                                                side: 2
                                                                race: "elf"
                                                            }
                                                        }
                                                        do: ->
                                                            MODIFY_UNIT({
                                                                    side: 2
                                                                    race: "elf"
                                                                    filter_location: {
                                                                        x: x1, y: y1
                                                                        radius: 4
                                                                    }
err: ../attic/data/campaigns/The_South_Guard/scenarios/06b_The_Long_March.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 994:                     ) side 3}

                                                                    redraw: {}
err: ../attic/data/campaigns/The_South_Guard/scenarios/06b_The_Long_March.cfg - ./wml_to_wsl/compile.moon:31: Unbalanced WML! table closed by event at line 993
err: ../attic/data/campaigns/The_South_Guard/scenarios/06b_The_Long_March.cfg - ./wml_to_wsl/compile.moon:31: Unbalanced WML! table closed by event at line 994
err: ../attic/data/campaigns/The_South_Guard/scenarios/06b_The_Long_March.cfg - ./wml_to_wsl/compile.moon:31: Unbalanced WML! table closed by event at line 995
err: ../attic/data/campaigns/The_South_Guard/scenarios/06b_The_Long_March.cfg - ./wml_to_wsl/compile.moon:31: Unbalanced WML! table closed by event at line 996

                                                    event: {
                                                        name: "moveto"
                                                        first_time_only: false

                                                        filter: {
                                                            side: 3

                                                            filter_adjacent: {
                                                                side: 2
                                                                race: "elf"
                                                            }
                                                        }
                                                        do: ->
                                                            MODIFY_UNIT({
                                                                    side: 2
                                                                    race: "elf"
                                                                    filter_adjacent: {
                                                                        x: x1, y: y1
                                                                    }
err: ../attic/data/campaigns/The_South_Guard/scenarios/06b_The_Long_March.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 1021:         ) side 3}

                                                                    redraw: {}
err: ../attic/data/campaigns/The_South_Guard/scenarios/06b_The_Long_March.cfg - ./wml_to_wsl/compile.moon:31: Unbalanced WML! table closed by event at line 1019

                                                                event: {
                                                                    name: "new turn"
                                                                    first_time_only: false
                                                                    do: ->
                                                                        If{
                                                                            variable: {
                                                                                name: "turn_number"
                                                                                greater_than: first_undead_spawn_turn
                                                                            }

-- Don't spawn more than is really needed, for performance reasons
                                                                            have_unit: {
                                                                                side: 2
                                                                                race: {"bats", "undead"}
                                                                                count: "0-50"
                                                                            }

                                                                            then: ->
                                                                                VARIABLE("got_a_quick_one_this_turn", false)

                                                                                Repeat{
                                                                                    times: "#{(min(#{turn_number - 2, 5))"

                                                                                    do: ->
                                                                                        VARIABLE_OP("undead_spawn_x", "rand", "11..22")

-- If there's already been a quick unit (ghost or bat)
-- spawned this turn, don't make any more
                                                                                        If{
                                                                                            variable: {
                                                                                                name: "got_a_quick_one_this_turn"
                                                                                                equals: true
                                                                                            }

                                                                                            then: ->
                                                                                                if EASY
                                                                                                    VARIABLE_OP("undead_spawn_type", "rand", "Bone Shooter,Revenant,Necrophage")
                                                                                                else
                                                                                                    VARIABLE_OP("undead_spawn_type", "rand", "Bone Shooter,Revenant,Deathblade,Necrophage")
                                                                                                
                                                                                            

                                                                                            else: ->
                                                                                                if EASY
                                                                                                    VARIABLE_OP("undead_spawn_type", "rand", "Ghost,Bone Shooter,Revenant,Blood Bat,Necrophage")
                                                                                                else
                                                                                                    VARIABLE_OP("undead_spawn_type", "rand", "Wraith,Bone Shooter,Revenant,Deathblade,Blood Bat,Dread Bat,Necrophage")
                                                                                                
                                                                                            
                                                                                        }

-- This checks whether the current spawn is going to be a
-- "quick" one, so on the next repeat the above [if] will
-- know whether we've already gotten a quick one this turn
                                                                                        VARIABLE("quick_spawn_types", "Ghost,Wraith,Blood Bat,Dread Bat")
                                                                                        If{
                                                                                            variable: {
                                                                                                name: "quick_spawn_types"
                                                                                                contains: undead_spawn_type
                                                                                            }

                                                                                            then: ->
                                                                                                VARIABLE("got_a_quick_one_this_turn", true)
                                                                                            
                                                                                        }

                                                                                        Unit{
                                                                                            side: 2
                                                                                            type: undead_spawn_type
                                                                                            x: undead_spawn_x
                                                                                            y: 45
                                                                                        }
                                                                                    
                                                                                }

                                                                                CLEAR_VARIABLE("got_a_quick_one_this_turn,undead_spawn_type,undead_spawn_x")
                                                                            
                                                                        }
                                                                }

                                                                event: {
                                                                    name: "last breath"
                                                                    filter: {
                                                                        id: "Urza Afalas"
                                                                    }
                                                                    do: ->
                                                                        Message{
                                                                            speaker: "unit"
                                                                            message: _ "Now I pay for my crimes. But how many others will also suffer for them?"
                                                                        }
                                                                        Kill{
                                                                            x: x1, y: y1
                                                                            animate: true
                                                                        }
                                                                        Endlevel{
                                                                            result: "defeat"
                                                                        }
                                                                }

-- Deoran exits the forest.

                                                                event: {
                                                                    name: "moveto"
                                                                    filter: {
                                                                        id: "Deoran"
                                                                        y: "1-6"

                                                                        filter_location: {
                                                                            not: {
                                                                                terrain: "W*"
                                                                            }
                                                                        }
                                                                    }
                                                                    do: ->
                                                                        Message{
                                                                            speaker: "Deoran"
                                                                            message: _ "Thank heaven we have escaped that awful forest!"
                                                                        }
                                                                        Message{
                                                                            speaker: "Sir Gerrick"
                                                                            message: _ "Indeed, Afalas, you’ve earned my trust today."
                                                                        }
                                                                        Message{
                                                                            speaker: "Urza Afalas"
                                                                            message: _ "I can only hope for mercy when I return to Westin."
                                                                        }

                                                                        Message{
                                                                            speaker: "narrator"
                                                                            message: _ "But there was a dark cloud looming behind Deoran and his men..."
                                                                            image: "wesnoth-icon.png"
                                                                        }

                                                                        CLEAR_VARIABLE("secret_path")
                                                                        CLEAR_VARIABLE("first_undead_spawn_turn,ford_mask_x,num_of_ambushers,quick_spawn_types,random,urza_moves,urza_dialogue,previous_path_hex,new_path_hex,secret_path_unrevealed")

                                                                        Endlevel{
                                                                            result: "victory"
                                                                            bonus: true
                                                                            <NEW_GOLD_CARRYOVER(40)
                                                                        }
                                                                }
err: ../attic/data/campaigns/The_South_Guard/scenarios/06b_The_Long_March.cfg - ./wml_to_wsl/compile.moon:31: Unbalanced WML! table closed by scenario at line 1160
