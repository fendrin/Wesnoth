--textdomain wesnoth-dm
Scenario{
    id: "21_Clash_at_the_Manor"
    name: _ "Clash at the Manor"
    next_scenario: "22_Face_of_the_Enemy"
    victory_when_enemies_defeated: false
    <MEMOIRS_MAP("21_Clash_at_the_Manor.map")
    <TURNS(40, 32, 30)
    <DEFAULT_SCHEDULE!

    <INTRO_AND_SCENARIO_MUSIC("nunc_dimittis.ogg", "elvish-theme.ogg")
    <EXTRA_SCENARIO_MUSIC("the_king_is_dead.ogg")
    <EXTRA_SCENARIO_MUSIC("frantic.ogg")
    <EXTRA_SCENARIO_MUSIC("the_city_falls.ogg")

    <DM_TRACK({show_title: true}, BOOK_STAGE2!, ")")

    story: {
        part: {
-- Asheviere was already having secret talks with
-- the orcs about the early HttT events and Lionel’s mission
--po: "demesne" = the part of a feudal lord's lands reserved for
--po: personal use.
--po: The "Sceptre" spelling is intentional.
            story: _ "Upon his return to Weldyn, Delfador discovered that the queen had left with a strong escort to visit her family’s demesne and her ailing parents. Lionel, the King’s most trusted general, had been sent at Asheviere’s request on an errand to Knalga to retrieve the Sceptre of Fire. That mission would cost Lionel his life; and neither Lionel nor Delfador knew that Lionel’s mission had been compromised from the start."
        }
        part: {
            story: _ "Although the King did reprimand Eldred for his actions, Delfador could sense that the military commanders were solidly behind Eldred and his mother. Asheviere had flattered them and beguiled them with promises of glory and plunder in a coming war."
            delay: 4000
        }
        part: {
            story: _ "Delfador was granted an audience with the King and expressed his concerns about the missing Book, but the King put off a decision until Asheviere returned to Weldyn, and ordered Delfador to take no further action. And for once, Delfador knew he could not obey the King’s order."
            delay: 4000
        }
        part: {
            story: _ "Since he could not ask even his personal guard to go against the King’s wishes, he turned to Kalenz and the elves. Traveling by night to remain unseen they reached Asheviere’s family demesne."
            delay: 4000
        }
    }
    <DM_TRACK(BOOK_STAGE3!)

----- Delfador's code ----
--wmllint: validate-off
    side: {
        <OLD_DELFADOR!
        side: 1
        save_id: "Player"
        persistent: true
        controller: "human"
        recruit: ELVES!
        team_name: "allies"
        user_team_name: _ "Rebels"
        <GOLD(130, 100, 100)
        <FLAG_VARIANT("long")
    }
--wmllint: validate-on

-- wmllint: recognize Kalenz
-- wmllint: recognize Chantal
    event: {
        name: "prestart"
        do: ->
            ELVISH_NPCS_REAPPEAR!
            MODIFY_UNIT({side: 1}, "facing", "ne")
            Object{
                silent: true
                duration: "scenario"
                filter: {
                    id: "Kalenz"
                }
                effect: {
                    apply_to: "attack"
                    name: "sword"
--textdomain wesnoth-units
                    set_description: _ "greatsword"
--textdomain wesnoth-dm
                    set_icon: "attacks/greatsword-orcish.png"
                }
            }
    }
----- /Delfador's code ----

    side: {
        type: "General"
        id: "Rhuwin"
        name: _ "Rhuwin"
        facing: "sw"
        side: 2
        canrecruit: true
        controller: "ai"
        team_name: "enemies"
        user_team_name: _ "Loyalists"
        recruit: {"Heavy Infantryman", "Spearman", "Bowman", "Swordsman", "Pikeman", "Longbowman", "Shock Trooper", "Royal Guard"}
        <GOLD(130, 180, 230)
        <INCOME(2, 6, 10)
        ai: {
--recruitment_pattern=fighter,archer,mixed fighter,scout
            aggression: 1.0
            caution: 0.0
            goal: {
                name: "protect_unit"
                criteria: {
                    side: 2
                    canrecruit: true
                }
                value: 3.0
            }
        }
        <FLAG_VARIANT("loyalist")
    }

    <LIMIT_CONTEMPORANEOUS_RECRUITS(2, "Royal Guard", 1)

    event: {
        name: "prestart"
        do: ->
            Objectives{
                side: 1
                objective: {
                    description: _ "Kill all enemy units"
                    condition: "win"
                }
                objective: {
                    description: _ "Enemy unit reaches a signpost"
                    condition: "lose"
                }
                objective: {
                    description: _ "Death of Delfador"
                    condition: "lose"
                }
                objective: {
                    description: _ "Death of Kalenz"
                    condition: "lose"
                }
                objective: {
                    description: _ "Death of Chantal"
                    condition: "lose"
                }

                <TURNS_RUN_OUT!

                gold_carryover: {
                    bonus: true
                    carryover_percentage: 80
                }

                note: {
                    description: _ "Enemy rider units will go for a signpost"
                    show_if: {
                        have_unit: {
                            id: "Rhuwin"
                            side: 2
                        }
                    }
                }
                note: {
                    description: _ "All enemy units will go for a signpost"
                    show_if: {
                        not: {
                            have_unit: {
                                id: "Rhuwin"
                                side: 2
                            }
                        }
                    }
                }
            }
    }

    event: {
        name: "start"
        do: ->
            Message{
                id: "Delfador"
                message: _ "I am grieved to have to resort to this. Yet the book must be recovered at all costs and no one should be left alive."
            }
            Message{
                id: "Kalenz"
                message: _ "The book’s curse is already weighing heavy upon you, friend. But we cannot falter. We have acquired orcish weapons, as you have requested. Nobody will be able to link this to you or the elves."
            }
            Message{
                id: "Kalenz"
                message: _ "Make sure everybody hears the orders. Nobody must escape."
            }
            Message{
                id: "Rhuwin"
                message: _ "Elves! And that traitor, Delfador is with them! Riders, quickly, go alert the queen. And guards, prepare to strike them down!"
            }

            HIGHLIGHT_IMAGE(1, 19, "scenery/signpost.png", {})
            HIGHLIGHT_IMAGE(18, 33, "scenery/signpost.png", {})
    }

    event: {
        name: {"recruit", "recall"}
        first_time_only: false
        filter: {
            race: "elf"
            not: {
                type: {"Elvish Shaman", "Elvish Druid", "Elvish Shyde", "Elvish Sorceress", "Elvish Enchantress", "Elvish Sylph"}
            }
        }
        do: ->
            Object{
                silent: true
                duration: "scenario"
                effect: {
                    apply_to: "attack"
                    name: "sword"
                    set_icon: "attacks/sword-orcish.png"
                }
                effect: {
                    filter: {
                        type: {"Elvish Hero", "Elvish Champion", "Elvish Marshal"}
                    }
                    apply_to: "attack"
                    name: "sword"
--textdomain wesnoth-units
                    set_description: _ "greatsword"
--textdomain wesnoth-dm
                    set_icon: "attacks/greatsword-orcish.png"
                }
            }
    }

    event: {
        name: "side 2 turn 1 refresh"
-- place riders and set them to head for the signposts
-- deduct unit cost from side gold so they look like they were recruited
        do: ->
            Unit{
                type: ON_DIFFICULTY("Cavalryman", "Dragoon", "Dragoon")
                id: "rider1"
                side: 2
                x: 27, y: 19
                goto_x: 1, goto_y: 19
                moves: 0
            }
            Unit{
                type: ON_DIFFICULTY("Cavalryman", "Cavalryman", "Dragoon")
                id: "rider2"
                side: 2
                x: 29, y: 21
                goto_x: 18, goto_y: 33
                moves: 0
            }
            Store_Unit{
                filter: {
                    id: "rider1"
                }
                variable: "rider1"
            }
            Store_Unit{
                filter: {
                    id: "rider2"
                }
                variable: "rider2"
            }
            Store_Side{
                side: 2
            }
            Modify_Side{
                side: 2
                gold: "#{(#{side.gold - #{rider1.cost - #{rider2.cost)"
            }
            CLEAR_VARIABLE("rider1,rider2,side")
    }

-- now that the enemy has made the initial recruitment, allow additional riders
-- to be recruited when enough gold is accumulated
    event: {
        name: "side 2 turn 2"
        do: ->
            Allow_Recruit{
                type: {"Cavalryman", "Dragoon"}
                side: 2
            }
    }

-- next code lifted from Silent Siege in Unstoppable Legion (not
-- tested); the idea is to make the riders head for the signposts
    event: {
        name: "recruit"
        first_time_only: false
        filter: {
            type: {"Cavalryman", "Dragoon"}
        }
        do: ->
            Set_Variable{
                name: "sentry"
                rand: "1..2"
            }

            If{
                variable: {
                    name: "sentry"
                    equals: 1
                }
                then: ->
                    MODIFY_UNIT({x: x1, y: y1}, "goto_x", 1)
                    MODIFY_UNIT({x: x1, y: y1}, "goto_y", 19)
                
            }
            If{
                variable: {
                    name: "sentry"
                    equals: 2
                }
                then: ->
                    MODIFY_UNIT({x: x1, y: y1}, "goto_x", 18)
                    MODIFY_UNIT({x: x1, y: y1}, "goto_y", 33)
                
            }
    }

-- new objectives, find the book
    event: {
        name: "new-objectives"
        do: ->
            Message{
                id: "Delfador"
                message: _ "The guards are slain. Now we must look for the book."
            }
            Objectives{
                side: 1
                objective: {
                    description: _ "Find the secret door to enter the manor"
                    condition: "win"
                }

                <TURNS_RUN_OUT!

                gold_carryover: {
                    bonus: true
                    carryover_percentage: 80
                }
            }
-- Create some new events for when we move to the right spot.
            Event{
                name: "moveto"
                filter: {
                    side: 1
                    x: 32, y: 8
                }
                do: ->
                    Music{
                        name: "northerners.ogg"
                        play_once: true
                    }

                    Message{
                        id: unit.id
                        message: _ "This looks like a secret door. Let’s see where it leads..."
                    }
                    Terrain{
                        x: 32
                        y: 9
                        terrain: "Uu"
                    }
                    Endlevel{
                        result: "victory"
                    }
            }
    }

    event: {
        name: "last breath"
        filter: {
            id: "Rhuwin"
        }
        do: ->
            If{
                have_unit: {
                    side: 2
                    not: {
                        id: "Rhuwin"
                    }
                }
                then: ->
                    Message{
                        speaker: "Rhuwin"
                        message: _ "Everyone, quickly, go alert the queen!"
                    }
-- loop through all remaining units and have them go to the nearest exit
                    Store_Unit{
                        filter: {
                            side: 2
                        }
                        variable: "escapees"
                    }
                    Foreach{
                        array: "escapees"
                        do: ->
                            Find_Path{
                                traveler: {
                                    id: this_item.id
                                }
                                destination: {
                                    x: 1, y: 19
                                }
                                variable: "exit1"
                                allow_multiple_turns: true
                                check_zoc: false
                            }
                            Find_Path{
                                traveler: {
                                    id: this_item.id
                                }
                                destination: {
                                    x: 18, y: 33
                                }
                                variable: "exit2"
                                allow_multiple_turns: true
                                check_zoc: false
                            }
                            If{
                                <VARIABLE_CONDITIONAL("exit1.hexes", "less_than", exit2.hexes)
                                then: ->
                                    MODIFY_UNIT({id: this_item.id}, "goto_x", 1)
                                    MODIFY_UNIT({id: this_item.id}, "goto_y", 19)
                                
                                else: ->
                                    MODIFY_UNIT({id: this_item.id}, "goto_x", 18)
                                    MODIFY_UNIT({id: this_item.id}, "goto_y", 33)
                                
                            }
                            CLEAR_VARIABLE("exit1,exit2")
                        
                    }
                    CLEAR_VARIABLE("escapees")
                
            }
    }

    event: {
        name: "die"
        filter: {
            id: "Rhuwin"
        }
        filter_condition: {
            have_unit: {
                side: 2
            }
        }
        do: ->
            Show_Objectives{
            }
    }

    event: {
        name: "die"
        first_time_only: false
        do: ->
            If{
                not: {
                    have_unit: {
                        side: 2
                    }
                }
                then: ->
                    Fire_Event{
-- Factored like this so the inner events
-- won't trigger a false positive from wmllint.
                        name: "new-objectives"
                    }
                
            }
    }

    event: {
        name: "moveto"
        filter: {
            side: 2
            x: 1, y: 19
        }
        do: ->
            Endlevel{
                result: "defeat"
            }
    }
    event: {
        name: "moveto"
        filter: {
            side: 2
            x: 18, y: 33
        }
        do: ->
            Endlevel{
                result: "defeat"
            }
    }

    event: {
        name: "time over"
        do: ->
            Message{
                id: "Delfador"
                message: _ "Reinforcements on the horizon. We are too late!"
            }
            Endlevel{
                result: "defeat"
            }
    }
    <MEMOIRS_DEATHS!
}
