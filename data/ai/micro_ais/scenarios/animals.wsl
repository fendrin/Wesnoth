--textdomain wesnoth-ai

ANIMAL_AI_DESCRIPTIONS1 = () -> {
    _ "<u>General</u>: These AIs are set up to simulate (to some extent) how these animals behave in real life. This includes that they are animals, meaning that they are not super smart. As an example, the wolves generally hunt in a pack, but are easily distracted by prey coming into range. They are also decent, but not great at cornering deer. For the most part, this is intentional.

<u>Bears (replaced by Ghasts), Spiders and Yetis</u> mostly just wander in their respective parts of the map. They stay out of each other's way (and out of the way of the dogs), but do attack each other if cornered. They attack the other, weaker animals (deer etc.) if those are within range.

<u>Wolves</u> hunt in a pack. They actively go after the closest deer (as long as it stays in the forest) and try to corner it (not always super successfully), but are easily distracted by other prey coming into range. The wolves try to avoid getting into the range of bears, spiders, dogs and the yeti, except when they are going in for an attack. If you let them move for long enough, they will also learn that it is not healthy to attack the tusklets. When no deer is left, they wander randomly. Note that, unlike the Wolves Multipack AI (used in a different scenario), this Wolves AI combines all wolves of the side in the same pack."
}

ANIMAL_AI_DESCRIPTIONS2 = () -> {
    _ "Each <u>Deer (replaced by Vampire Bats)</u> wanders randomly on forest tiles, except when enemies get in its (the deer's) range, in which case it flees to the farthest point it can reach.

<u>Tuskers (replaced by Ogres)</u> exhibit the same behavior as deer, except when an enemy is next to one of the tusklets. This enemy will then experience the full wrath of an irate boar.

<u>Tusklets (replaced by Young Ogres)</u> blindly follow the closest adult tusker, except when there is no tusker left, in which case they behave the same as deer.

<u>Rabbits (replaced by Rats)</u> also wander randomly, but in addition disappear into their holes (replaced by straw bales; if any are within reach) when enemies are close. They reappear out of their holes at the beginning of the turn, if it is safe.

<u>Sheep dogs (replaced by Footpads)</u> try to keep their sheep safe. This involves keeping them inside the area outlined by the path the dogs have worn into the meadow, positioning themselves in between the sheep and approaching enemies, and attacking the enemies if those get too close. You might have to let the scenario play for quite some time before you get to see an interesting dog/wolf interaction. If no active herding or protecting move is needed, the dogs go to a random location on the path.

<u>Sheep (replaced by Troll Whelps)</u> wander aimlessly except when a sheep dog is next to them, in which case they run away from the dog. The dogs exploit this by positioning themselves on the outside of the sheep, if possible. Sheep also run away from approaching enemies. The sheep, dogs and forest creatures (deer, tuskers, rabbits) have learned that they are no threat to each other and leave each other alone, demonstrating the enormous self control of a well trained sheep dog."
}

Test{
    id: "animals"
    name: _ "Animals"
    next_scenario: "micro_ai_test"

    map: "ai/micro_ais/maps/animals.map"

    <DEFAULT_SCHEDULE!
    turns: -1
    victory_when_enemies_defeated: false

    side: {
        side: 1
        controller: "human"
        suppress_end_turn_confirmation: true
        hidden: false
        name: _ "Rutburt"
        id: "Rutburt"
        max_moves: 99
        type: "Outlaw"
        persistent: false

        team_name: "humans"
        user_team_name: _ "Humans"

        canrecruit: true
        recruit: {"Ruffian", "Footpad", "Thug", "Poacher"}
        gold: 0
    }

    side: {
        side: 2
        controller: "ai"
        no_leader: true
        defeat_condition: "no_units_left"
        persistent: false

        team_name: "forest"
        user_team_name: _ "Forest Creatures"

        gold: 0
        income: -2
    }

    side: {
        side: 3
        controller: "ai"
        no_leader: true
        defeat_condition: "no_units_left"
        persistent: false

        team_name: "ghasts"
        user_team_name: _ "Ghasts" -- wmllint: no spellcheck

        gold: 0
        income: -2
    }

    side: {
        side: 4
        controller: "ai"
        no_leader: true
        defeat_condition: "no_units_left"
        persistent: false

        team_name: "spiders"
        user_team_name: _ "Spiders"

        gold: 0
        income: -2
    }

    side: {
        side: 5
        controller: "ai"
        no_leader: true
        defeat_condition: "no_units_left"
        persistent: false

        team_name: "yetis"
        user_team_name: _ "Yetis"

        gold: 0
        income: -2
    }

    side: {
        side: 6
        controller: "ai"
        no_leader: true
        defeat_condition: "no_units_left"
        persistent: false

        team_name: "wolves"
        user_team_name: _ "Wolves"

        gold: 0
        income: -2
    }

    side: {
        side: 7
        controller: "ai"
        no_leader: true
        defeat_condition: "no_units_left"
        persistent: false

        team_name: {"whelps", "forest"}
        user_team_name: _ "Whelps"

        gold: 0
        income: -2
    }

    side: {  -- This side is only here because we need one persistent side for the game to go on
        side: 8
        controller: "null"
        persistent: true
        save_id: "Grnk"
        hidden: true
    }

-- Put all the units and markers out there
    event: {
        name: "prestart"
        do: ->
            VARIABLE("scenario_name", "animals")

            SCATTER_UNITS(3, "Vampire Bat", 1, {x: "6-99", y: "12-99", terrain: "G*^F*"}, {side: 2, random_traits: false})
            NOTRAIT_UNIT(2, "Ogre", 6, 20)
            NOTRAIT_UNIT(2, "Ogre", 7, 21)
            NOTRAIT_UNIT(2, "Young Ogre", 7, 20)
            NOTRAIT_UNIT(2, "Young Ogre", 8, 21)

-- Do this separately, so that there will definitely be two
            SCATTER_UNITS(1, "Ghast", 1, {x: "1-10", y: "1-11", terrain: "G*"}, {side: 3, random_traits: false})
            SCATTER_UNITS(1, "Ghast", 1, {x: "11-20", y: "1-11", terrain: "G*"}, {side: 3, random_traits: false})

            SCATTER_UNITS(1, "Giant Spider", 1, {x: "51-57", y: "1-8"}, {side: 4, random_traits: false})
            SCATTER_UNITS(1, "Giant Spider", 1, {x: "36-50", y: "1-9"}, {side: 4, random_traits: false})

            SCATTER_UNITS(1, "Yeti", 1, {x: "11-25", y: "1-9", terrain: "M*"}, {side: 5, random_traits: false})

            NOTRAIT_UNIT(6, "Wolf", 1, 33)
            NOTRAIT_UNIT(6, "Wolf", 2, 32)
            NOTRAIT_UNIT(6, "Wolf", 2, 33)

            NOTRAIT_UNIT(7, "Footpad", 34, 24)
            NOTRAIT_UNIT(7, "Footpad", 25, 32)
            NOTRAIT_UNIT(7, "Footpad", 36, 31)
            NOTRAIT_UNIT(7, "Troll Whelp", 35, 27)
            NOTRAIT_UNIT(7, "Troll Whelp", 29, 28)
            NOTRAIT_UNIT(7, "Troll Whelp", 30, 29)
            NOTRAIT_UNIT(7, "Troll Whelp", 28, 30)

-- Need to make sure these won't be on the border !!!!
-- Other dimension are carefully chosen to give good distribution on map
-- and not inside th Troll Whelp herding area
            SCATTER_IMAGE({
                    terrain: {"Gg", "Gs"}
                    x: "19-39", y: "17-32"
                    not: {
                        x: "26-38", y: "25-32"
                    }
err: ../attic/data/ai/micro_ais/scenarios/animals.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 189:         ) 3 items/straw-bale1.png}
                    <SCATTER_IMAGE({
                            terrain: {"Gg", "Gs"}
                            x: "19-39", y: "17-32"
                            not: {
                                x: "26-38", y: "25-32"
                            }
err: ../attic/data/ai/micro_ais/scenarios/animals.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 196:         ) 3 "items/straw-bale1.png~FL()"}
                            <SCATTER_IMAGE({
                                    terrain: {"Gg", "Gs"}
                                    x: "40-57", y: "17-29"
err: ../attic/data/ai/micro_ais/scenarios/animals.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 200:         ) 2 items/straw-bale1.png}
                                    <SCATTER_IMAGE({
                                            terrain: {"Gg", "Gs"}
                                            x: "40-57", y: "17-29"
err: ../attic/data/ai/micro_ais/scenarios/animals.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 204:         ) 2 "items/straw-bale1.png~FL()"}

-- The right-click menu items
                                            set_menu_item: {
                                                id: "m01_end_animals"
                                                description: _ "End Scenario"
                                                image: "items/ring-red.png~CROP(26,26,20,20)"
                                                show_if: {
                                                    <VARIABLE_CONDITIONAL("scenario_name", "equals", "animals")
                                                }
                                                command: ->
-- So that game goes on to next scenario
                                                    Modify_Side{
                                                        side: 8
                                                        controller: "human"
                                                    }

                                                    MESSAGE("narrator", "wesnoth-icon.png", "", _ "Well, that was that.")

                                                    Endlevel{
                                                        result: "victory"
                                                        bonus: false
                                                        carryover_percentage: 0
                                                        carryover_report: false
                                                        linger_mode: false
                                                    }
                                                
                                            }

                                            micro_ai: {
                                                side: 2
                                                ai_type: "forest_animals"
                                                action: "add"

                                                deer_type: "Vampire Bat"
                                                rabbit_type: "Giant Rat"
                                                tusker_type: "Ogre"
                                                tusklet_type: "Young Ogre"
                                                filter_location: {
                                                    terrain: "*^F*"
                                                }
                                            }

-- Set up the big_animals micro AI for the Ghasts
                                            micro_ai: {
                                                side: 3
                                                ai_type: "big_animals"
                                                action: "add"

                                                filter: {
                                                    type: "Ghast"
                                                }
                                                avoid_unit: {
                                                    type: {"Yeti", "Giant Spider", "Ghast", "Footpad"}
                                                }
                                                filter_location: {
                                                    x: "1-40", y: "1-18"
                                                }
                                            }

-- Set up the big_animals micro AI for side 4 (the spiders)
                                            micro_ai: {
                                                side: 4
                                                ai_type: "big_animals"
                                                action: "add"

                                                filter: {
                                                    type: "Giant Spider"
                                                }
                                                avoid_unit: {
                                                    type: {"Yeti", "Giant Spider", "Ghast", "Footpad"}
                                                }
                                                filter_location: {
                                                    terrain: "H*"
                                                }
                                            }

-- Set up the big_animals micro AI for the Yeti
                                            micro_ai: {
                                                side: 5
                                                ai_type: "big_animals"
                                                action: "add"

                                                filter: {
                                                    type: "Yeti"
                                                }
                                                avoid_unit: {
                                                    type: {"Yeti", "Giant Spider", "Ghast", "Footpad"}
                                                }
                                                filter_location: {
                                                    terrain: "M*"
                                                }
                                                filter_location_wander: {
                                                    terrain: {"M*", "M*^*", "H*", "H*^*"}
                                                }
                                            }

-- Set up the wolves micro AI
                                            micro_ai: {
                                                side: 6
                                                ai_type: "wolves"
                                                action: "add"

                                                filter: {
                                                    type: "Wolf"
                                                }
                                                filter_second: {
                                                    type: "Vampire Bat"
                                                }
                                                avoid_type: {"Yeti", "Giant Spider", "Ghast", "Footpad"}
                                            }

-- Set up the Troll Whelp micro AI
                                            micro_ai: {
                                                side: 7
                                                ai_type: "herding"
                                                action: "add"

                                                filter: {
                                                    type: "Footpad"
                                                }
                                                filter_second: {
                                                    type: "Troll Whelp"
                                                }
                                                herd_x: 32, herd_y: 28
                                                filter_location: {
                                                    terrain: "Rb"
                                                }
                                            }
err: ../attic/data/ai/micro_ais/scenarios/animals.cfg - ./wml_to_wsl/compile.moon:31: Unbalanced WML! table closed by event at line 329

                                        event: {
                                            name: "start"
                                            do: ->
                                                MESSAGE("narrator", "wesnoth-icon.png", "Important Note", _ "<span color='#A00000'>Important:</span> The animal Micro AIs in this scenario are written for a number of animal unit types that do not exist in Wesnoth mainline, such as bears, sheep and sheep dogs, or deer. In this test scenario, these units have been replaced by mainline units.")

-- wmlindent: start ignoring
                                                MESSAGE("narrator", "wesnoth-icon.png", "", _ "This is a fun little scenario with a bunch of different animal AIs, mostly for watching only. The animal AIs behave as follows:

"
-- wmlindent: stop ignoring
                                                    <MESSAGE("narrator", "wesnoth-icon.png", "", ANIMAL_AI_DESCRIPTIONS2!)

                                                    message: {
                                                        speaker: "narrator"
                                                        caption: _ "Question for the Player"
                                                        image: "wesnoth-icon.png"
-- wmllint: unbalanced-on
-- wmlindent: start ignoring
                                                        message: _ "It is possible to include a human-controlled Side 1, so that the action stops once every turn for looking around (or to mess with things in debug mode).

Note that there is no end to this scenario. For demonstration purposes, any unit that is killed is replaced by another unit of the same type at the beginning of the next turn. In order to end the scenario, there's a right-click option - but that only works in human-controlled mode. In AI-only mode, you have to press 'Esc' or reload a previous savefile.

Also note: The Animal AIs are coded as Micro AIs. A Micro AI can be added and adapted to the need of a scenario easily using only WML and the [micro_ai] tag. Check out the <span color='#00A000'>Micro AI wiki page</span> at http://wiki.wesnoth.org/Micro_AIs for more information."
-- wmlindent: stop ignoring
-- wmllint: unbalanced-off
                                                        option: {
                                                            label: _ "<span font='16'>I'll just watch the animals.</span>"
                                                            command: ->
                                                                End_Turn{
                                                                }
                                                                Event{
                                                                    name: "side 2 turn"
                                                                    do: ->
                                                                        Modify_Side{
                                                                            side: 1
                                                                            controller: "null"
                                                                            hidden: true
                                                                        }
                                                                        Kill{
                                                                            side: 1
                                                                        }
                                                                }
                                                            
                                                        }
                                                        option: {
                                                            label: _ "<span font='16'>I want to have control of Side 1.</span>"
                                                        }
                                                    }

                                                    objectives: {
                                                        side: 1
                                                        summary: _ "Watch the animals do their things"
                                                        objective: {
                                                            description: _ "Use right-click option"
                                                            condition: "win"
                                                        }
                                                        objective: {
                                                            description: _ "Death of Rutburt"
                                                            condition: "lose"
                                                        }
                                                        note: {
                                                            description: _ "Check out the right-click menu options for additional actions"
                                                        }
                                                    }
err: ../attic/data/ai/micro_ais/scenarios/animals.cfg - ./wml_to_wsl/compile.moon:28: Unbalanced WML! macro: MESSAGE closed by event at line 394

-- After first Ogre attack on wolves, wolves do not attack those any more
                                                event: {
                                                    name: "attack end"
                                                    filter: {
                                                        side: 2
                                                        type: "Ogre"
                                                    }
                                                    filter_second: {
                                                        side: 6
                                                        type: "Wolf"
                                                    }

-- wmlindent: start ignoring
                                                    do: ->
                                                        MESSAGE(second_unit.id, "", "", _ "Yowl!
Translation: Those Ogres are mean!  We better stay away from them and their young.")
-- wmlindent: stop ignoring

                                                        Micro_Ai{
                                                            side: 6
                                                            ai_type: "wolves"
                                                            action: "change"

                                                            filter: {
                                                                type: "Wolf"
                                                            }
                                                            filter_second: {
                                                                type: "Vampire Bat"
                                                            }
                                                            avoid_type: {"Yeti", "Giant Spider", "Ghast", "Footpad", "Ogre", "Young Ogre"}
                                                        }
                                                }

-- At the beginning of each side turn, put another unit one out there, if it was lost
-- This is just for the sake of keeping the scenario going indefinitely
                                                NEW_UNIT_SIDE_TURN: (SIDE, TYPE, COUNT, X, Y) -> {
                                                    event: {
                                                        name: "side #{SIDE} turn"
                                                        first_time_only: false
                                                        do: ->
                                                            If{
                                                                have_unit: {
                                                                    type: TYPE
                                                                    count: COUNT
                                                                }
                                                                then: ->
                                                                    NOTRAIT_UNIT(SIDE, TYPE, X, Y)
                                                                
                                                            }
                                                    }
                                                }

                                                <NEW_UNIT_SIDE_TURN(2, "Vampire Bat", "0-2", 18, 33)
                                                <NEW_UNIT_SIDE_TURN(2, "Ogre", "0-1", 1, 20)
                                                <NEW_UNIT_SIDE_TURN(2, "Young Ogre", "0-1", 1, 21)
                                                <NEW_UNIT_SIDE_TURN(3, "Ghast", "0-1", 1, 1)
                                                <NEW_UNIT_SIDE_TURN(4, "Giant Spider", "0-1", 57, 1)
                                                <NEW_UNIT_SIDE_TURN(5, "Yeti", 0, 15, 1)
                                                <NEW_UNIT_SIDE_TURN(6, "Wolf", "0-2", 1, 33)
                                                <NEW_UNIT_SIDE_TURN(7, "Footpad", "0-2", 30, 33)
                                                <NEW_UNIT_SIDE_TURN(7, "Troll Whelp", "0-3", 34, 33)
err: ../attic/data/ai/micro_ais/scenarios/animals.cfg - ./wml_to_wsl/compile.moon:28: Unbalanced WML! macro: MESSAGE closed by test at line 456
