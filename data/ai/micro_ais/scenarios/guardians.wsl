--textdomain wesnoth-ai

HOME_GUARDIAN = (X, Y) -> {
-- Meant to be used as a suffix to a unit-generating macro call.
-- The previously-generated unit will treat (X,Y) as its home.
    unit: {
        amend: true
        ai: {
            vars: {
                home_loc: "loc(#{X},#{Y})"
            }
        }
    }
}

Test{
    id: "guardians"
    name: _ "Guardians"
    next_scenario: "micro_ai_test"

    map: "/multiplayer/maps/4p_Paths_of_Daggers.map"

    <DEFAULT_SCHEDULE!
    turns: -1
    victory_when_enemies_defeated: false

    side: {
        side: 1
        controller: "human"
        suppress_end_turn_confirmation: true
        id: "Kraa"
        name: _ "Kraa"
        unrenamable: true
        type: "Gryphon"
        x: 3, y: 5

        team_name: "gryphons"
        user_team_name: _ "Gryphons"
        recruit: "Gryphon"
        persistent: false

        gold: 200
    }

-- Guardians
    side: {
        side: 2
        type: "Orcish Leader"
        id: "Another Bad Orc"
        name: _ "Another Bad Orc"
        x: 33, y: 24

        canrecruit: true
        recruit: {"Orcish Archer", "Orcish Grunt"}
        persistent: false
        gold: 30

        ai: {
            modify_ai: {
                side: 1
                action: "add"
-- wmllint: unbalanced-on
                path: "stage[main_loop].candidate_action[]"
-- wmllint: unbalanced-off
                candidate_action: {
                    engine: "fai"
                    name: "go_home"
                    id: "go_home"
                    type: "movement"
-- wmlindent: start ignoring
                    evaluation: "if( (null != me.vars.home_loc), #{AI_CA_MOVE_TO_TARGETS_SCORE}+10, 0)"
                    action: "if( (me.loc != me.vars.home_loc), move(me.loc, next_hop(me.loc, me.vars.home_loc)), move(me.loc, me.loc)#do not move this turn#)"
-- wmlindent: stop ignoring
                }
            }
        }
    }

-- Put all the units and markers out there
    event: {
        name: "prestart"
        do: ->
            VARIABLE("scenario_name", "guardians")

            PLACE_IMAGE("scenery/signpost.png", 1, 6)
            SET_LABEL(1, 6, _ "End Scenario")

-- A couple gryphons
            GENERIC_UNIT(1, "Gryphon", 4, 6)
            GENERIC_UNIT(1, "Gryphon", 5, 4)

-- The normal guardians
            Unit{
                type: "Dwarvish Guardsman"
                side: 2
                id: "guardian1"
                name: _ "Guardian 1"
                x: 12, y: 1
                ai_special: "guardian"
                variables: {
                    label: "ai_special=guardian"
                }
            }
            Unit{
                type: "Dwarvish Guardsman"
                side: 2
                id: "guardian2"
                name: _ "Guardian 2"
                x: 15, y: 1
                ai_special: "guardian"
                variables: {
                    label: "ai_special=guardian"
                }
            }

-- The cowards
            Unit{
                type: "Giant Rat"
                side: 2
                id: "coward1"
                name: _ "Coward 1"
                x: 14, y: 21
                modifications: {
                    <TRAIT_QUICK!
                }
                variables: {
                    label: "coward r=5"
                }
            }
            Micro_Ai{
                side: 2
                ai_type: "coward"
                action: "add"

                id: "coward1"
                distance: 5
            }

            Unit{
                type: "Giant Rat"
                side: 2
                id: "coward2"
                name: _ "Coward 2"
                x: 16, y: 21
                modifications: {
                    <TRAIT_QUICK!
                }
                variables: {
                    label: "coward r=5
    s=24 5"
                }
            }
            Micro_Ai{
                side: 2
                ai_type: "coward"
                action: "add"

                id: "coward2"
                distance: 5
                seek_x: 24, seek_y: 5
            }

            Unit{
                type: "Giant Rat"
                side: 2
                id: "coward3"
                name: _ "Coward 3"
                x: 18, y: 21
                modifications: {
                    <TRAIT_QUICK!
                }
                variables: {
                    label: "   coward r=5
 s=24,5 a=24,15"
                }
            }
            Micro_Ai{
                side: 2
                ai_type: "coward"
                action: "add"

                id: "coward3"
                distance: 5
                seek_x: 24, seek_y: 5
                avoid_x: 24, avoid_y: 15
            }

            Unit{
                type: "Giant Rat"
                side: 2
                id: "coward4"
                name: _ "Coward 4"
                x: 12, y: 21
                modifications: {
                    <TRAIT_QUICK!
                }
                variables: {
                    label: "coward r=5
    s=32,--"
                }
            }
            Micro_Ai{
                side: 2
                ai_type: "coward"
                action: "add"

                id: "coward4"
                distance: 4
                seek_x: 32
            }

            SET_LABEL(15, 19, _ "Move gryphons here to see different coward reactions")
            PLACE_IMAGE("items/gohere.png", 13, 20)
            PLACE_IMAGE("items/gohere.png", 17, 20)

-- The return guardians
            Unit{
                type: "Troll"
                side: 2
                id: "return1"
                name: _ "Return Guardian 1"
                x: 20, y: 2
                variables: {
                    label: "return 20,2"
                }
            }
            Micro_Ai{
                side: 2
                ai_type: "return_guardian"
                action: "add"

                id: "return1"
                return_x: 20, return_y: 2
            }

            Unit{
                type: "Troll Whelp"
                side: 2
                id: "return2"
                name: _ "Return Guardian 2"
                x: 21, y: 9
                variables: {
                    label: "return 21,9"
                }
            }
            Micro_Ai{
                side: 2
                ai_type: "return_guardian"
                action: "add"

                id: "return2"
                return_x: 21, return_y: 9
            }

-- The home guards
            Unit{
                type: "Troll Whelp"
                side: 2
                id: "home1"
                name: _ "Home Guard 1"
                x: 19, y: 2
                variables: {
                    label: "home 19,2"
                }
            }
            HOME_GUARDIAN(19, 2)

            Unit{
                type: "Troll"
                side: 2
                id: "home 2"
                name: _ "Home Guard 2"
                x: 21, y: 10
                variables: {
                    label: "home 21,10"
                }
            }
            HOME_GUARDIAN(21, 10)

-- The stationed guardians
            Unit{
                type: "Skeleton Archer"
                side: 2
                id: "stationed1"
                name: _ "Stationed Guardian 1"
                x: 1, y: 12
                variables: {
                    label: " stationed r=4
s=2,14 g=3,13"
                }
            }
            Micro_Ai{
                side: 2
                ai_type: "stationed_guardian"
                action: "add"

                id: "stationed1"
                distance: 4
                station_x: 2, station_y: 14
                guard_x: 3, guard_y: 13
            }

            Unit{
                type: "Skeleton"
                side: 2
                id: "stationed2"
                name: _ "Stationed Guardian 2"
                x: 6, y: 14
                variables: {
                    label: " stationed r=4
s=4,14 g=7,13"
                }
            }
            Micro_Ai{
                side: 2
                ai_type: "stationed_guardian"
                action: "add"

                id: "stationed2"
                distance: 4
                station_x: 4, station_y: 14
                guard_x: 3, guard_y: 13
            }

-- Zone guardians
            Unit{
                type: "Troll"
                side: 2
                id: "zone1"
                name: _ "Gate Keeper"
                x: 5, y: 25
                modifications: {
                    <TRAIT_STRONG!
                }
                variables: {
                    label: "Zone Guard"
                }
            }
            Micro_Ai{
                side: 2
                ai_type: "zone_guardian"
                action: "add"

                id: "zone1"
                filter_location: {
                    x: {4, 5, 6, 7, 5}
                    y: {24, 24, 24, 24, 25}
                }
            }

            Unit{
                type: "Dwarvish Guardsman"
                side: 2
                id: "zone2"
                name: _ "Home Keeper"
                x: 2, y: 27
                modifications: {
                    <TRAIT_STRONG!
                }
                variables: {
                    label: "Zone Guard with
separate attack Zone"
                }
            }
            Micro_Ai{
                side: 2
                ai_type: "zone_guardian"
                action: "add"

                id: "zone2"
                filter_location: {
                    x: {1, 2, 3, 2}
                    y: {27, 27, 27, 26}
                }
                filter_location_enemy: {
                    x: "1-4", y: "24-27"
                }
            }

            Unit{
                type: "Naga Fighter"
                side: 2
                id: "zone3"
                name: _ "Water Guardian"
                x: 29, y: 8
                variables: {
                    label: "Zone Guard"
                }
            }
            Micro_Ai{
                side: 2
                ai_type: "zone_guardian"
                action: "add"

                id: "zone3"
                filter_location: {
                    x: "22-31", y: "4-11"  -- This is intentionally chosen to extend past the lake
                    terrain: "W*"
                }
                station_x: 32, station_y: 8
            }

            SET_LABEL(3, 13, _ "Guarded Location")
            SET_LABEL(2, 14, _ "Station 1")
            SET_LABEL(4, 14, _ "Station 2")

-- Set initial label for each units
            Store_Unit{
                filter: {
                    side: 2
                }
                variable: "tmp_units"
                kill: false
            }
            Foreach{
                array: "tmp_units"
                do: ->
                    SET_LABEL(this_item.x, this_item.y, this_item.variables.label)
                
            }
            CLEAR_VARIABLE("tmp_units")

-- The right-click menu items
            Set_Menu_Item{
                id: "m01_guardian"
                description: _ "Standard WML Guardian"
                image: "units/dwarves/guard.png~CROP(28,24,24,24)"
                show_if: {
                    <VARIABLE_CONDITIONAL("scenario_name", "equals", "guardians")
                }
                command: ->
                    MESSAGE("narrator", "portraits/dwarves/guard.png", _ "Standard WML Guardian", _ "This is the built-in WML guardian coded using 'ai_special=guardian'. These guardians attack if there is an enemy within their movement range, otherwise they do nothing (except maybe retreating to a village for healing).")
                
            }
            Set_Menu_Item{
                id: "m02_return"
                description: _ "Return Guardian"
                image: "units/trolls/grunt.png~CROP(31,7,24,24)"
                show_if: {
                    <VARIABLE_CONDITIONAL("scenario_name", "equals", "guardians")
                }
                command: ->
                    MESSAGE("narrator", "portraits/trolls/troll.png", _ "Return Guardian", _ "A 'return guardian' is a variation of the standard Wesnoth guardian. It has an assigned guard position (GP) to which it returns after attacks on approaching enemies:
- If at GP with no enemy in reach, do nothing.
- If at GP with enemy in reach, leave attack to default AI (note that this may include not attacking if the enemy is deemed too strong).
- If not at GP, return there, no matter whether an enemy is in reach or not.
- If enemies are blocking your way back, do your best to get there anyway.
- If you end up next to an enemy on the way back, attack after the move.")
                
            }
            Set_Menu_Item{
                id: "m03_home"
                description: _ "Home Guard"
                image: "units/trolls/grunt.png~CROP(31,7,24,24)"
                show_if: {
                    <VARIABLE_CONDITIONAL("scenario_name", "equals", "guardians")
                }
                command: ->
                    MESSAGE("narrator", "portraits/trolls/troll.png", _ "Home Guard", _ "A 'home guard' is a variant on the 'guardian' AI special. With this variant, the unit has an assigned 'home' location, and will return there if not involved in combat and if not going to a village, whether for healing or to capture it this turn. (By contrast, the standard guardian AI will cause the unit to stay where it last attacked.) This differs from 'return guardian' in that a home guard will press the attack, possibly getting drawn quite far from 'home', rather than returning after each attack. (It can also be lured away by a string of closely-placed villages, but that is something a map builder can control.)
This also demonstrates how to combine candidate actions from Formula AI and Lua AI in one side. The home guard is written in Formula AI, while the return and stationed guardians and the cowards are written in Lua AI. In addition the non-guardian units of the side follow the default AI behavior.")
                
            }
            Set_Menu_Item{
                id: "m04_stationed"
                description: _ "Stationed Guardian"
                image: "units/undead-skeletal/archer/archer.png~CROP(24,16,24,24)"
                show_if: {
                    <VARIABLE_CONDITIONAL("scenario_name", "equals", "guardians")
                }
                command: ->
                    MESSAGE("narrator", "portraits/undead/archer.png", _ "Stationed Guardian", _ "A 'stationed guardian' is another variation of the standard Wesnoth guardian with a somewhat more complex behavior than that of the 'return guardian'. Two positions are defined for it, a 'station' and a 'guarded location', as well as a 'distance'. The behavior is as follows:
- If no enemy is within 'distance' of the guard's current position, do nothing.
- Otherwise: If an enemy is within 'distance' of the guard, but not also within the same distance of the guarded location and the station (all of this simultaneously), move the guard in the direction of the station.
- Otherwise:
  - Pick the enemy unit that is closest to the guarded location.
  - If we can reach it, pick the adjacent hex with the highest defense rating and attack from there.
  - If not in reach, move toward this unit.")
                
            }
            Set_Menu_Item{
                id: "m05_coward"
                description: _ "Coward"
                image: "units/monsters/giant-rat.png~CROP(30,30,24,24)"
                show_if: {
                    <VARIABLE_CONDITIONAL("scenario_name", "equals", "guardians")
                }
                command: ->
                    MESSAGE("narrator", "units/monsters/giant-rat.png", _ "Coward", _ "Cowards are units that, like guardians, sit around doing nothing until an enemy comes into range. Unlike guardians, however, they run away once enemies approach. Applications might be wild animals, unarmed civilians getting in the way of a battle, etc. The coward macro can be called with two optional locations, 'seek' and 'avoid':
- If neither is given, the coward retreats to the position farthest away from the approaching enemies.
- If 'seek' is given, it preferentially goes toward that location (but getting away from enemies takes priority).
- If 'avoid' is given, it in addition tries to avoid that location (with both maximizing distance from enemies and going toward 'seek' taking priority).
- Both 'seek' and 'avoid' may consist of only one coordinate ('x' or 'y'), in which case not a single hex, but a line of hexes is sought or avoided.")
                
            }
            Set_Menu_Item{
                id: "m06_zone"
                description: _ "Zone Guardian"
                image: "units/nagas/fighter.png~CROP(25,19,24,24)"
                show_if: {
                    <VARIABLE_CONDITIONAL("scenario_name", "equals", "guardians")
                }
                command: ->
                    MESSAGE("narrator", "portraits/nagas/fighter.png", _ "Zone Guardian", _ "A zone guardian is a unit that, as the name says, guards a zone. It moves randomly inside this zone until an enemy enters it (or a separately defined enemy zone, see below). Applications might be the defense of a castle or a nesting area. The zone macro can be called with an optional enemy zone:
- If not specified, the zone guard attacks any enemy coming inside its guard zone.
- Otherwise, it attacks any enemy entering the enemy zone and once there are no more enemies, it goes back to patrol in its basic zone.")
                
            }
    }

    event: {
        name: "start"
        do: ->
            STORE_UNIT_VAR({id: "Kraa"}, "profile", "profile")
            MESSAGE("Kraa", "#{profile~FL()~RIGHT()", "", _ "Kraahhh!!!!")
            MESSAGE("Another Bad Orc", "", "", _ "They there!  We them get!")
-- wmllint: unbalanced-on
            MESSAGE("Kraa", "#{profile~FL()~RIGHT()", "", _ "Gryphons of the High Plains, look at all these enemies. They don't behave normally. Most of them don't move at all unless we get close. Let's check out how they react to us.

Note to the player: the right-click context menu provides information about each of the units' behavior.

Another note: Most of the Guardian AIs are coded as Micro AIs. A Micro AI can be added and adapted to the need of a scenario easily using only WML and the [micro_ai] tag. Check out the <span color='#00A000'>Micro AI wiki page</span> at http://wiki.wesnoth.org/Micro_AIs for more information.")
-- wmllint: unbalanced-off
            CLEAR_VARIABLE("profile")

            Objectives{
                summary: _ "Move the Gryphons around to explore how the guardians react"
                objective: {
                    description: _ "Defeat all enemy units"
                    condition: "win"
                }
                objective: {
                    description: _ "Move Kraa to the signpost"
                    condition: "win"
                }
                objective: {
                    description: _ "Death of Kraa"
                    condition: "lose"
                }
                note: {
                    description: _ "Check out the right-click menu options for information on each guardian type"
                }
            }
    }

-- Reset the label for moving units
    event: {
        name: "moveto"
        first_time_only: false
        filter: {
            side: 2
        }
        do: ->
            REMOVE_LABEL(x2, y2)
            SET_LABEL(x1, y1, unit.variables.label)
    }

-- The events finishing the scenario
    event: {
        name: "die"
        first_time_only: false
        do: ->
            If{
                not: {
                    have_unit: {
                        side: 2
                    }
                }
                then: ->
                    Kill{
                        id: unit.id
                    }

                    Fire_Event{
                        name: "end_scenario"
                    }
                
            }
    }

    event: {
        name: "moveto"
        filter: {
            id: "Kraa"
            x: 1, y: 6
        }
        do: ->
            Fire_Event{
                name: "end_scenario"
            }
    }

    event: {
        name: "end_scenario"
        do: ->
            MESSAGE("Kraa", "", "", _ "Gryphons of the High Plains, it is time to return to said plains. Follow me.")

            Endlevel{
                result: "victory"
                bonus: false
                carryover_percentage: 0
                carryover_report: false
                linger_mode: false
            }
    }
}
