--textdomain wesnoth-ai

Test{
    id: "messenger_escort"
    name: _ "Messenger Escort"
    next_scenario: "micro_ai_test"

    map: "ai/micro_ais/maps/messenger_escort.map"

    <DEFAULT_SCHEDULE!
    turns: -1
    victory_when_enemies_defeated: false

    side: {
        side: 1
        controller: "human"
        suppress_end_turn_confirmation: true
        name: _ "Vanak"
        id: "Vanak"
        type: "Orcish Ruler"
        persistent: false

        team_name: "Vanak"
        user_team_name: _ "Orcs"
        recruit: {"Orcish Grunt", "Orcish Archer", "Orcish Assassin", "Wolf Rider"}

        gold: 100
    }

    side: {
        side: 2
        controller: "ai"
        no_leader: true
        persistent: false

        team_name: "messenger"
        user_team_name: _ "Messenger"

        gold: 0
        income: -2
    }

    side: {  -- This side is only here because we need one persistent side for the game to go on
        side: 3
        controller: "null"
        persistent: true
        save_id: "Grnk"
        hidden: true
    }

-- Prestart actions
    event: {
        name: "prestart"
        do: ->
            VARIABLE("scenario_name", "messenger_escort")

            Micro_Ai{
                side: 2
                ai_type: "messenger_escort"
                action: "add"

                id: "messenger"
                waypoint_x: {31, 24, 27, 28}
                waypoint_y: {20, 14, 7, 1}
            }

-- Put the messenger side units out there
            Unit{
                type: "Dragoon"
                id: "messenger"
                name: _ "Messenger"
                side: 2
                x: 30, y: 27
                random_traits: false
                overlays: "misc/hero-icon.png"
            }
            NOTRAIT_UNIT(2, "Dragoon", 30, 26)
            Unit{
                type: "Cavalryman"
                side: 2
                x: 29, y: 27
                modifications: {
                    <TRAIT_QUICK!
                }
            }
            Unit{
                type: "Cavalryman"
                side: 2
                x: 31, y: 27
                modifications: {
                    <TRAIT_QUICK!
                }
            }
            Unit{
                type: "Cavalryman"
                side: 2
                x: 29, y: 28
                modifications: {
                    <TRAIT_QUICK!
                }
            }

-- And the orcs
            NOTRAIT_UNIT(1, "Orcish Grunt", 14, 18)
            NOTRAIT_UNIT(1, "Orcish Archer", 15, 19)
            NOTRAIT_UNIT(1, "Orcish Grunt", 14, 17)

            NOTRAIT_UNIT(1, "Orcish Archer", 12, 19)
            NOTRAIT_UNIT(1, "Orcish Archer", 12, 20)
            Unit{
                type: "Wolf Rider"
                side: 1
                x: 10, y: 20
                modifications: {
                    <TRAIT_QUICK!
                }
            }

-- waypoints for AI
            PLACE_IMAGE("scenery/signpost.png", 31, 20)
            SET_LABEL(31, 20, _ "Messanger Waypoint 1")
            PLACE_IMAGE("scenery/signpost.png", 24, 14)
            SET_LABEL(24, 14, _ "Messenger Waypoint 2")
            PLACE_IMAGE("scenery/signpost.png", 27, 7)
            SET_LABEL(27, 7, _ "Messenger Waypoint 3")
-- Goal signpost for AI
            PLACE_IMAGE("scenery/signpost.png", 28, 1)
            SET_LABEL(28, 1, _ "AI moves Messenger here")
    }

    event: {
        name: "start"
        do: ->
            STORE_UNIT_VAR({id: "Vanak"}, "profile", "profile")
            MESSAGE("Vanak", "#{profile~FL()~RIGHT()", "", _ "They there!  We them get!")
            CLEAR_VARIABLE("profile")
            MESSAGE("messenger", "", "", _ "Men, I need to get to that signpost in the north, to get the message to our leader. Let's head up there as quickly as we can.")
-- wmllint: unbalanced-on
            MESSAGE("narrator", "wesnoth-icon.png", _ "Notes", _ "The Messenger Escort AI will try to move the dragoon messenger to the signpost in the north, while protecting him as well as possible with the other units. Vanak's orcs need to stop him.

Note that the messenger route is set up through a series of waypoints here simply to demonstrate how to use waypoints. On this map, using only a single waypoint at the end of the route would work just as well (or probably even better).

Also note that the messenger does not have to get exactly to each signpost (except for the last one), getting close is good enough.

The Messenger Escort AI is coded as a Micro AI. A Micro AI can be added and adapted to the need of a scenario easily using only WML and the [micro_ai] tag. Check out the <span color='#00A000'>Micro AI wiki page</span> at http://wiki.wesnoth.org/Micro_AIs for more information.")
-- wmllint: unbalanced-off

            Objectives{
                side: 1
                objective: {
                    description: _ "Defeat the messenger"
                    condition: "win"
                }
                objective: {
                    description: _ "Messenger gets to the signpost"
                    condition: "lose"
                }
                objective: {
                    description: _ "Death of Vanak"
                    condition: "lose"
                }
            }
    }

-- When Messenger makes it to the signpost: defeat
    event: {
        name: "moveto"
        filter: {
            id: "messenger"
            x: 28, y: 1
        }
        do: ->
            MESSAGE("messenger", "", "", _ "I made it!  Now our people will be safe.")
            Endlevel{
                result: "defeat"
            }
    }

-- When Messenger dies: victory
    event: {
        name: "last breath"
        filter: {
            id: "messenger"
        }
        do: ->
            MESSAGE("messenger", "", "", _ "Nooo!  All is lost. We will never stop the orcs now!")

-- So that game goes on to next scenario
            Modify_Side{
                side: 3
                controller: "human"
            }

            Endlevel{
                result: "victory"
                bonus: false
                carryover_percentage: 0
                carryover_report: false
                linger_mode: false
            }
    }
}
