--textdomain wesnoth-lib
----
---- The in game portrait dialogs.
---- Due to the excessive amount of dialogs it's not possible to split off the
---- window definitions. So this unit is a bit larger as wanted.
----

-- The maximum width of the text
MAX_TEXT_WIDTH = () -> {
    675
}

___GUI_IMAGE_WIDTH = () -> {
    {
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 15: 	max(250, min(500, best_size))
        "where"
        best_size: "("
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 18: 		if((best_width * aspect_ratio) > max_height,
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 19: 			floor(max_height / aspect_ratio),
        "best_width"
    }
    "where"
    best_width: "("
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 24: 			if(gamemap_width > text_width_saturation,
    "gamemap_width - #{MAX_TEXT_WIDTH}", 
    "gamemap_width / size_factor"
}
"where"
-- gamemap_width width needed to reach the MAX_TEXT_WIDTH -
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 30: 			text_width_saturation = 3 * height_offset / 2 where height_offset = 25,
size_factor: 3
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 32: 		),
aspect_ratio: "("
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 34: 			if(image_original_width > 0,
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 35: 				as_decimal(image_original_height) / image_original_width,
0
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/compile.moon:31: Unbalanced WML! define closed by table at line 29
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 38: 		),
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 39: 		max_height = (gamemap_height - 4)
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/compile.moon:31: Unbalanced WML! define closed by table at line 30
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/compile.moon:31: Unbalanced WML! define closed by table at line 31

-- This is the version with debug info
__GUI_IMAGE_WIDTH: () -> {
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 45: ([[
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 46: 	debug_print('screen_width ', screen_width),
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 47: 	debug_print('screen_height ', screen_height),
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 48: 	debug_print('gamemap_width ', gamemap_width),
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 49: 	debug_print('gamemap_height ', gamemap_height),
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 50: 	debug_print('image_original_width ', image_original_width),
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 51: 	debug_print('image_original_height ', image_original_height),
    "]", 
    <___GUI_IMAGE_WIDTH!
    "][1]"
}


__GUI_IMAGE_WIDTH = nil
-- This is the version without debug info
__GUI_IMAGE_WIDTH: () -> {
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 61: ({___GUI_IMAGE_WIDTH})#enddef


-- This is the macro for the image width which is can be used as string
-- parameter.
_GUI_IMAGE_WIDTH: () -> {
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/compile.moon:461: attempt to concatenate local 'node_type' (a nil value)

-- the value the image needs to be scaled by, this version can be used as string
-- parameter.
    _GUI_IMAGE_SCALE_FACTOR: () -> {
        {
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 73: 	{__GUI_IMAGE_WIDTH} / 500
        }--enddef


-- The formula to set the widthe of the real image width depending on the
-- image real size
        __GUI_IMAGE_DISPLAYED_WIDTH: () -> {
            {
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 81: 	if((image_original_width < 300) and (image_original_height < 300),
                "image_original_width", 
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 83: 		((image_original_width * calculated_width) / 500)
            }
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 85: where calculated_width = {__GUI_IMAGE_WIDTH}
        }--enddef

-- The formula to set the heighte of the real image height depending on the
-- image real size
        __GUI_IMAGE_DISPLAYED_HEIGHT: () -> {
            {
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 92: 	if((image_original_width < 300) and (image_original_height < 300),
                "image_original_height", 
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 94: 		((image_original_height * calculated_width) / 500)
            }
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 96: where calculated_width = {__GUI_IMAGE_WIDTH}
        }--enddef

-- The X location of the image to display, only tested on the left side.
        __GUI_IMAGE_DISPLAYED_X: () -> {
            {
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 102: 	if(image_original_width > 100,
                0, 
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 104: 		(calculated_width - image_width) / 2
            }
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 106: where calculated_width = {__GUI_IMAGE_WIDTH}
        }--enddef

-- The Y location of the image to display, only tested on the left side.
-- Note since we don't know the exact height of the text we can't centre
-- the image. Instead we use the centre of the reserved image space.
--
-- TODO the Y can't be determined properly since we don't know the height
-- of the panel. Disabled the centring for now.
--
        __GUI_IMAGE_DISPLAYED_Y: () -> {
            {
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 118: 	if(image_original_height > 0,
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 119: 		(height - image_height),
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 120: 		height - ((calculated_width - image_height) / 2)
            }
err: ../attic/data/gui/window/wml_message.cfg - ./wml_to_wsl/parse.moon:224: Error parsing (wml) line 122: where calculated_width = {__GUI_IMAGE_WIDTH}
        }--enddef

        Window_Definition{
            id: "wml_message_left"
            description: "bar"

            resolution: {

                background: {

                    draw: {

                    }

                }

                foreground: {

                    draw: {

                        image: {
                            x: "#{__GUI_IMAGE_DISPLAYED_X}"
                            y: "#{__GUI_IMAGE_DISPLAYED_Y}"
                            w: "#{__GUI_IMAGE_DISPLAYED_WIDTH}"
                            h: "#{__GUI_IMAGE_DISPLAYED_HEIGHT}"
                            name: "(portrait_image)"
                            vertical_mirror: "(portrait_mirror)"
                        }

                    }

                }

            }

        }

        Window_Definition{
            id: "wml_message_right"
            description: "bar"

            resolution: {

                background: {

                    draw: {

                    }

                }

                foreground: {

                    draw: {

                        image: {
                            x: "(width - #{__GUI_IMAGE_DISPLAYED_WIDTH})"
                            y: "(height - image_height)"
                            w: "#{__GUI_IMAGE_DISPLAYED_WIDTH}"
                            h: "#{__GUI_IMAGE_DISPLAYED_HEIGHT}"
                            name: "(portrait_image)"
                            vertical_mirror: "(portrait_mirror)"
                        }

                    }

                }

            }

        }

        Window_Definition{
            id: "wml_message_double"
            description: "bar"

            resolution: {

                background: {

                    draw: {

                    }

                }

                foreground: {

                    draw: {

                        image: {
                            x: "#{__GUI_IMAGE_DISPLAYED_X}"
                            y: "#{__GUI_IMAGE_DISPLAYED_Y}"
                            w: "#{__GUI_IMAGE_DISPLAYED_WIDTH}"
                            h: "#{__GUI_IMAGE_DISPLAYED_HEIGHT}"
                            name: "(portrait_image)"
                            vertical_mirror: "(portrait_mirror)"
                        }

                        image: {
                            x: "(width - #{__GUI_IMAGE_DISPLAYED_WIDTH})"
                            y: "(height - image_height)"
                            w: "#{__GUI_IMAGE_DISPLAYED_WIDTH}"
                            h: "#{__GUI_IMAGE_DISPLAYED_HEIGHT}"
                            name: "(second_portrait_image)"
                            vertical_mirror: "(second_portrait_mirror)"
                        }

                    }

                }

            }

        }

        _GUI_INPUT_LIST: () -> {
            listbox: {
                id: "input_list"
                definition: "wml_message"
                list_definition: {

                    row: {

                        column: {
                            grow_factor: 1
                            horizontal_grow: true

                            toggle_panel: {
                                definition: "wml_message"

                                return_value_id: "ok"
                                grid: {

                                    row: {

                                        column: {
                                            grow_factor: 0
                                            horizontal_alignment: "left"

                                            border: "all"
                                            border_size: 5

                                            image: {
                                                id: "icon"
                                                definition: "default"
                                                linked_group: "icon"
                                            }

                                        }

                                        column: {
                                            grow_factor: 0
                                            horizontal_alignment: "left"

                                            border: "all"
                                            border_size: 5

                                            label: {
                                                id: "label"
                                                definition: "default"
                                                linked_group: "label"
                                            }

                                        }

                                        column: {
                                            grow_factor: 1
                                            horizontal_grow: true

                                            border: "all"
                                            border_size: 5

                                            label: {
                                                id: "description"
                                                definition: "default"
                                                linked_group: "description"
                                            }

                                        }

                                    }

                                }

                            }

                        }

                    }

                }

            }
        }

        _GUI_WML_MESSAGE_CONTENT: () -> {
            column: {
                grow_factor: 1
                horizontal_grow: true
                vertical_grow: true

                grid: {

                    row: {
                        grow_factor: 0

                        column: {
                            border: "all"
                            border_size: 5
                            horizontal_alignment: "left"

                            label: {
                                id: "title"
                                definition: "title"
                            }

                        }

                    }

                    row: {
                        grow_factor: 1

                        column: {
                            grow_factor: 1
                            horizontal_grow: true

                            border: "all"
                            border_size: 5

                            scroll_label: {
                                id: "message"
                                definition: "wml_message"
                            }

                        }

                    }

                    row: {
                        grow_factor: 0

                        column: {
                            grow_factor: 1
                            horizontal_grow: true

                            grid: {

                                row: {

                                    column: {
                                        border: "all"
                                        border_size: 5

                                        label: {
                                            id: "input_caption"
                                            definition: "default"
                                        }

                                    }

                                    column: {
                                        grow_factor: 1
                                        horizontal_grow: true

                                        border: "all"
                                        border_size: 5

                                        text_box: {
                                            id: "input"
                                            definition: "transparent"
                                        }

                                    }

                                }

                            }

                        }

                    }

                    row: {
                        grow_factor: 0

                        column: {
                            border: "all"
                            border_size: 5
                            horizontal_grow: true

                            <_GUI_INPUT_LIST!

                        }

                    }

                    row: {
                        grow_factor: 0

                        column: {
                            border: "all"
                            border_size: 5
                            horizontal_alignment: "center"

                            button: {
-- This button will be shown or hidden depending on the
-- whether or not a scrollbar is needed to show the
-- text.
                                id: "ok"
                                definition: "transparent"

                                label: _ "OK"
                            }

                        }

                    }

                }

            }
        }

        Window{
            id: "wml_message_left"
            description: "Dialog showing a unit portrait on the left side"

            resolution: {
                window_width: 0
                window_height: 0

                definition: "wml_message_left"

                automatic_placement: false

                x: "(gamemap_x_offset)"
                y: 30
                width: "(gamemap_width)"
                height: "(screen_height - 30)"

                click_dismiss: true

                linked_group: {
                    id: "icon"
                    fixed_width: true
                }

                linked_group: {
                    id: "label"
                    fixed_width: true
                }

                linked_group: {
                    id: "description"
                    fixed_width: true
                }

                tooltip: {
                    id: "tooltip"
                }

                helptip: {
                    id: "tooltip"
                }

                grid: {

                    row: {

                        column: {
                            vertical_alignment: "bottom"
                            horizontal_grow: true

                            panel: {
                                definition: "wml_message"

                                grid: {

                                    row: {

                                        column: {
                                            horizontal_grow: true

                                            grid: {

                                                row: {

                                                    column: {

                                                        spacer: {
-- reserve place for the image and set a minimum height for the text
                                                            id: "image_place_holder"

                                                            width: _GUI_IMAGE_WIDTH!
                                                            height: 75
                                                        }

                                                    }

                                                    <_GUI_WML_MESSAGE_CONTENT!

                                                    column: {

                                                        spacer: {
                                                            width: "(
if(gamemap_width - ({__GUI_IMAGE_WIDTH}) > {MAX_TEXT_WIDTH}
, gamemap_width - (({__GUI_IMAGE_WIDTH}) + {MAX_TEXT_WIDTH})
, 0
))"
                                                            height: 75
                                                        }

                                                    }

                                                }

                                            }

                                        }

                                    }

                                }

                            }

                        }

                    }

                }

            }

        }

        Window{
            id: "wml_message_right"
            description: "Dialog showing a unit portrait on the right side"

            resolution: {
                window_width: 0
                window_height: 0

                definition: "wml_message_right"

                automatic_placement: false

                x: "(gamemap_x_offset)"
                y: 30
                width: "(gamemap_width)"
                height: "(screen_height - 30)"

                click_dismiss: true

                linked_group: {
                    id: "icon"
                    fixed_width: true
                }

                linked_group: {
                    id: "label"
                    fixed_width: true
                }

                linked_group: {
                    id: "description"
                    fixed_width: true
                }

                tooltip: {
                    id: "tooltip"
                }

                helptip: {
                    id: "tooltip"
                }

                grid: {

                    row: {

                        column: {
                            vertical_alignment: "bottom"
                            horizontal_grow: true

                            panel: {
                                definition: "wml_message"

                                grid: {

                                    row: {

                                        column: {
                                            horizontal_grow: true

                                            grid: {

                                                row: {

                                                    column: {

                                                        spacer: {
                                                            width: 10
                                                            height: 75
                                                        }

                                                    }

                                                    <_GUI_WML_MESSAGE_CONTENT!

                                                    column: {

                                                        spacer: {
                                                            width: "(
if(gamemap_width - (10 + ({__GUI_IMAGE_WIDTH})) > {MAX_TEXT_WIDTH}
, gamemap_width - (10 + ({__GUI_IMAGE_WIDTH}) + {MAX_TEXT_WIDTH})
, 0
))"
                                                            height: 75
                                                        }

                                                    }

                                                    column: {

                                                        spacer: {
-- reserve place for the image and set a minimum height for the text
                                                            id: "image_place_holder"

                                                            width: _GUI_IMAGE_WIDTH!
                                                            height: 75
                                                        }

                                                    }


                                                }

                                            }

                                        }

                                    }

                                }

                            }

                        }

                    }

                }

            }

        }

        Window{
            id: "wml_message_double"
            description: "Dialog showing a unit portrait on each side"

            resolution: {
                window_width: 0
                window_height: 0

                definition: "wml_message_double"

                automatic_placement: false

                x: "(gamemap_x_offset)"
                y: 30
                width: "(gamemap_width)"
                height: "(screen_height - 30)"

                click_dismiss: true

                linked_group: {
                    id: "icon"
                    fixed_width: true
                }

                linked_group: {
                    id: "label"
                    fixed_width: true
                }

                linked_group: {
                    id: "description"
                    fixed_width: true
                }

                tooltip: {
                    id: "tooltip"
                }

                helptip: {
                    id: "tooltip"
                }

                grid: {

                    row: {

                        column: {
                            vertical_alignment: "bottom"
                            horizontal_grow: true

                            panel: {
                                definition: "wml_message"

                                grid: {

                                    row: {

                                        column: {
                                            horizontal_grow: true

                                            grid: {

                                                row: {

                                                    column: {

                                                        spacer: {
-- reserve place for the image and set a minimum height for the text
                                                            id: "image_place_holder"

                                                            width: _GUI_IMAGE_WIDTH!
                                                            height: 75
                                                        }

                                                    }

                                                    <_GUI_WML_MESSAGE_CONTENT!

                                                    column: {

                                                        spacer: {
-- reserve place for the image and set a minimum height for the text
                                                            id: "image_place_holder"

                                                            width: _GUI_IMAGE_WIDTH!
                                                            height: 75
                                                        }

                                                    }


                                                }

                                            }

                                        }

                                    }

                                }

                            }

                        }

                    }

                }

            }

        }

        _GUI_INPUT_LIST = nil

        __GUI_IMAGE_DISPLAYED_Y = nil
        __GUI_IMAGE_DISPLAYED_X = nil
        __GUI_IMAGE_DISPLAYED_HEIGHT = nil
        __GUI_IMAGE_DISPLAYED_WIDTH = nil
        _GUI_IMAGE_SCALE_FACTOR = nil
        _GUI_IMAGE_WIDTH = nil
        __GUI_IMAGE_WIDTH = nil
        ___GUI_IMAGE_WIDTH = nil
        MAX_TEXT_WIDTH = nil
