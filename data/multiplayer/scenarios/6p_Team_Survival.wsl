--textdomain wesnoth-multiplayer

-- wmlindent: start ignoring

if 6P_TEAM_SURVIVAL_LOAD
    TS_WALL_MASK_NORTH: () -> {
        "Ww", "Ww", "Ww"
        "Gs", "Ww", "Gg"
        "Ww", "Ww", "Gg"
        "Gg", "Gg", "Ww"
        "Mm", "Hh", "Gg"
        "Gs^Fp", "Gg", "Gg"
        "Ww", "Ww", "Gg"
        "Gg", "Wwf", "Gs^Fp"
        "Gg", "Wwf", "Gg"
        "Gs^Fp", "Ww", "Gg"
        "Ww", "Xu", "Ww"
    }
    TS_WALL_MASK_NORTH_EAST: () -> {
        "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "Gs", "Ww", "_s"
        "_s", "_s", "_s", "_s", "_s", "_s", "_s", "Gg", "Ww", "Ww", "Ww", "Ww"
        "_s", "_s", "_s", "_s", "_s", "Gs^Fp", "Mm", "Gg", "Ww", "Gg", "Gg", "_s"
        "_s", "_s", "_s", "Gg", "Ww", "Gg", "Hh", "Gg", "Ww", "_s", "_s", "_s"
        "_s", "Gs^Fp", "Gg", "Wwf", "Ww", "Gg", "Gg", "_s", "_s", "_s", "_s", "_s"
        "Ww", "Ww", "Wwf", "Gg", "Gs^Fp", "_s", "_s", "_s", "_s", "_s", "_s", "_s"
        "Xu", "Ww", "Gg", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s"
    }
    TS_WALL_MASK_NORTH_WEST: () -> {
        "_s", "_s", "Ww", "Gg", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s"
        "_s", "Ww", "Ww", "Ww", "Gg", "Ww", "_s", "_s", "_s", "_s", "_s", "_s", "_s"
        "_s", "_s", "Gs", "Ww", "Ww", "Gg", "Gg", "Gg", "_s", "_s", "_s", "_s", "_s"
        "_s", "_s", "_s", "_s", "Gg", "Mm", "Hh", "Gg", "Gg", "Gs^Fp", "_s", "_s", "_s"
        "_s", "_s", "_s", "_s", "_s", "_s", "Gs^Fp", "Ww", "Ww", "Wwf", "Gg", "Gg", "_s"
        "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "Gg", "Gg", "Wwf", "Ww", "Ww"
        "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "Gs^Fp", "Ww", "Xu"
    }
    TS_WALL_MASK_SOUTH: () -> {
        "_s", "Xu", "_s"
        "Ww", "Ww", "Ww"
        "Gg", "Wwf", "Gs^Fp"
        "Gg", "Wwf", "Gg"
        "Gs^Fp", "Ww", "Gg"
        "Gg", "Gg", "Ww"
        "Gg", "Hh", "Gs^Fp"
        "Gg", "Gg", "Mm"
        "Ww", "Ww", "Gg"
        "Gg", "Ww", "Ww"
        "Gg", "Ww", "Gs"
        "Ww", "_s", "Ww"
    }
    TS_WALL_MASK_SOUTH_EAST: () -> {
        "_s", "Ww", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s"
        "Xu", "Ww", "Gs^Fp", "Gg", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s"
        "Ww", "Gg", "Wwf", "Wwf", "Gg", "Ww", "_s", "_s", "_s", "_s", "_s", "_s"
        "_s", "_s", "Gg", "Gs^Fp", "Ww", "Gg", "Gs^Fp", "Mm", "_s", "_s", "_s", "_s"
        "_s", "_s", "_s", "_s", "Gg", "Gg", "Hh", "Gg", "Gg", "Ww", "_s", "_s"
        "_s", "_s", "_s", "_s", "_s", "_s", "Gg", "Ww", "Ww", "Ww", "Gs", "Ww"
        "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "Gg", "Gg", "Ww", "_s"
        "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "Ww", "_s"
    }
    TS_WALL_MASK_SOUTH_WEST: () -> {
        "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "Ww", "_s"
        "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "Gg", "Gg", "Ww", "Xu"
        "_s", "_s", "_s", "_s", "_s", "_s", "_s", "Gg", "Gs^Fp", "Wwf", "Wwf", "Gs^Fp", "Ww"
        "_s", "_s", "_s", "_s", "_s", "Gg", "Gg", "Gg", "Ww", "Gg", "Gg", "_s", "_s"
        "_s", "_s", "_s", "Gg", "Ww", "Gg", "Hh", "Gs^Fp", "Ww", "_s", "_s", "_s", "_s"
        "_s", "Ww", "Gg", "Ww", "Ww", "Gg", "Mm", "_s", "_s", "_s", "_s", "_s", "_s"
        "_s", "_s", "Ww", "Gs", "Ww", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s"
        "_s", "_s", "Ww", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s", "_s"
    }
    TS_CASTLE_MASK: () -> {
        "_s", "_s", "_s", "_s", "_s", "Gg", "_s", "_s", "_s", "Gg", "_s", "_s", "_s", "_s", "_s"
        "_s", "_s", "_s", "Ch", "Ch", "Gs^Fp", "_s", "_s", "_s", "Gs^Fp", "Ch", "Ch", "_s", "_s", "_s"
        "_s", "_s", "Gg", "Gs^Fp", "Gg", "_s", "_s", "Ww", "_s", "_s", "Gg", "Gs^Fp", "Gg", "_s", "_s"
        "_s", "_s", "_s", "_s", "_s", "Gg", "Gs^Fp", "Hh", "Mm", "Gg", "_s", "_s", "_s", "_s", "_s"
        "_s", "_s", "_s", "Ww", "Mm", "Gs^Fp", "Gg", "Ch", "Gs^Fp", "Gg", "Gs^Fp", "Ww", "_s", "_s", "_s"
        "Gg", "Gs^Fp", "_s", "Gs^Fp", "Hh", "Ch", "Ch", "Ch", "Ch", "Ch", "Hh", "Mm", "_s", "Gs^Fp", "Gg"
        "Ch", "Gg", "_s", "Gg", "Gg", "Ch", "Ch", "Kh", "Ch", "Ch", "Gs^Fp", "Gg", "_s", "Gg", "Ch"
        "Ch", "Gs^Fp", "_s", "Mm", "Gs^Fp", "Ch", "Ch", "Ch", "Ch", "Ch", "Gg", "Gs^Fp", "_s", "Gs^Fp", "Ch"
        "Gg", "_s", "_s", "Ww", "Hh", "Gg", "Ch", "Ch", "Ch", "Gs^Fp", "Hh", "Ww", "_s", "_s", "Gg"
        "_s", "_s", "_s", "_s", "Gs^Fp", "Gg", "Gs^Fp", "Hh", "Gg", "Gg", "Mm", "_s", "_s", "_s", "_s"
        "_s", "_s", "_s", "Gs^Fp", "_s", "_s", "Mm", "Ww", "Gs^Fp", "_s", "_s", "Gs^Fp", "_s", "_s", "_s"
        "_s", "_s", "Gg", "Ch", "Gg", "Gs^Fp", "_s", "_s", "_s", "Gs^Fp", "Gg", "Ch", "Gg", "_s", "_s"
        "_s", "_s", "_s", "_s", "Ch", "Gg", "_s", "_s", "_s", "Gg", "Ch", "_s", "_s", "_s", "_s"
    }

    TS_OPEN_MASK_NORTH_WEST: () -> {
        "_s", "_s", "_s", "_s", "_s"
        "_s", "_s", "_s", "Gg", "Ww"
        "_s", "Ww", "Hh", "_s", "_s"
    }

    TS_OPEN_MASK_NORTH_EAST: () -> {
        "Ww", "Hh", "_s", "_s"
        "_s", "_s", "Gg", "Ww"
    }

    TS_OPEN_MASK_EAST: () -> {
        "Ww"
        "Hh"
        "Gg"
        "Ww"
    }

    TS_OPEN_MASK_SOUTH_WEST: () -> {
        "_s", "_s", "_s", "_s", "_s"
        "_s", "Ww", "_s", "_s", "_s"
        "_s", "_s", "Gg", "Hh", "_s"
        "_s", "_s", "_s", "_s", "Ww"
    }

    TS_OPEN_MASK_SOUTH_EAST: () -> {
        "_s", "_s", "_s", "_s"
        "_s", "_s", "_s", "Ww"
        "_s", "Gg", "Hh", "_s"
        "Ww", "_s", "_s", "_s"
    }

    TS_OPEN_MASK_WEST: () -> {
        "Ww"
        "Gg"
        "Hh"
        "Ww"
    }
-- wmlindent: stop ignoring

    TS_SPAWN1: (TYPE) -> {
        <IF_ALIVE(2, NOTRAIT_UNIT(1, TYPE, 12, 10))
        <IF_ALIVE(3, NOTRAIT_UNIT(1, TYPE, 29, 7))
        <IF_ALIVE(4, NOTRAIT_UNIT(1, TYPE, 41, 18))
        <IF_ALIVE(5, NOTRAIT_UNIT(1, TYPE, 36, 32))
        <IF_ALIVE(6, NOTRAIT_UNIT(1, TYPE, 19, 36))
        <IF_ALIVE(7, NOTRAIT_UNIT(1, TYPE, 7, 25))
    }

    TS_SPAWN2: (TYPE) -> {
        <IF_ALIVE(2, NOTRAIT_UNIT(1, TYPE, 19, 7))
        <IF_ALIVE(3, NOTRAIT_UNIT(1, TYPE, 36, 10))
        <IF_ALIVE(4, NOTRAIT_UNIT(1, TYPE, 41, 25))
        <IF_ALIVE(5, NOTRAIT_UNIT(1, TYPE, 29, 36))
        <IF_ALIVE(6, NOTRAIT_UNIT(1, TYPE, 12, 32))
        <IF_ALIVE(7, NOTRAIT_UNIT(1, TYPE, 7, 18))
    }

    TS_SWAMP_SPAWN: (TYPE) -> {
        <IF_ALIVE(2, NOTRAIT_UNIT(1, TYPE, 15, 6))
        <IF_ALIVE(3, NOTRAIT_UNIT(1, TYPE, 35, 7))
        <IF_ALIVE(4, NOTRAIT_UNIT(1, TYPE, 44, 22))
        <IF_ALIVE(5, NOTRAIT_UNIT(1, TYPE, 33, 37))
        <IF_ALIVE(6, NOTRAIT_UNIT(1, TYPE, 13, 36))
        <IF_ALIVE(7, NOTRAIT_UNIT(1, TYPE, 4, 20))
    }

    TS_LAKE_SPAWN: (TYPE) -> {
        <IF_ALIVE(2, NOTRAIT_UNIT(1, TYPE, 17, 10))
        <IF_ALIVE(3, NOTRAIT_UNIT(1, TYPE, 32, 10))
        <IF_ALIVE(4, NOTRAIT_UNIT(1, TYPE, 39, 22))
        <IF_ALIVE(5, NOTRAIT_UNIT(1, TYPE, 31, 33))
        <IF_ALIVE(6, NOTRAIT_UNIT(1, TYPE, 16, 32))
        <IF_ALIVE(7, NOTRAIT_UNIT(1, TYPE, 9, 21))
    }

    TS_HOME_SPAWN: (TYPE) -> {
        <IF_ALIVE(2, NOTRAIT_UNIT(1, TYPE, 18, 12))
        <IF_ALIVE(3, NOTRAIT_UNIT(1, TYPE, 30, 12))
        <IF_ALIVE(4, NOTRAIT_UNIT(1, TYPE, 36, 21))
        <IF_ALIVE(5, NOTRAIT_UNIT(1, TYPE, 30, 30))
        <IF_ALIVE(6, NOTRAIT_UNIT(1, TYPE, 18, 13))
        <IF_ALIVE(7, NOTRAIT_UNIT(1, TYPE, 12, 21))
    }

    TS_SPAWNS: () -> {
        event: {
            name: "turn 2"
            do: ->
                TS_SPAWN1("Footpad"), TS_SPAWN1("Peasant")
                TS_SPAWN2("Bowman"), TS_SPAWN2("Cavalryman")
        }

        event: {
            name: "turn 5"
            do: ->
                TS_SPAWN1("Thief"), TS_SPAWN1("Poacher")
                TS_SPAWN2("Dwarvish Guardsman"), TS_SPAWN2("Dwarvish Fighter")
        }

        event: {
            name: "turn 8"
            do: ->
                TS_SPAWN1("Elvish Archer"), TS_SPAWN1("Elvish Shaman")
                TS_LAKE_SPAWN("Merman Hunter")
                TS_SPAWN2("Elvish Archer")
        }

        event: {
            name: "turn 11"
            do: ->
                TS_SPAWN1("Orcish Slayer")
                TS_LAKE_SPAWN("Naga Fighter")
                TS_SPAWN2("Troll Hero"), TS_SPAWN2("Troll Whelp")
        }

        event: {
            name: "turn 14"
            do: ->
                TS_SPAWN1("Drake Warrior"), TS_SPAWN1("Drake Glider")
                TS_SPAWN2("Fire Drake"), TS_SPAWN2("Drake Fighter")
        }

        event: {
            name: "turn 17"
            do: ->
                TS_SPAWN1("Death Knight"), TS_SPAWN1("Walking Corpse"), TS_SPAWN1("Walking Corpse"), TS_SPAWN1("Walking Corpse"), TS_SPAWN1("Vampire Bat")
                TS_SWAMP_SPAWN("Tentacle of the Deep")
                TS_SPAWN2("Lich"), TS_SPAWN2("Walking Corpse"), TS_SPAWN2("Walking Corpse"), TS_SPAWN2("Walking Corpse"), TS_SPAWN2("Vampire Bat")
        }

        event: {
            name: "turn 20"
            do: ->
                TS_SPAWN1("Drake Enforcer")
                TS_LAKE_SPAWN("Mermaid Diviner"), TS_LAKE_SPAWN("Merman Entangler")
                TS_SPAWN2("Drake Enforcer")
        }

        event: {
            name: "turn 23"
            do: ->
                TS_SPAWN1("Dark Sorcerer")
                TS_LAKE_SPAWN("Shadow"), TS_LAKE_SPAWN("Shadow"), TS_LAKE_SPAWN("Shadow")
                TS_SPAWN2("Dark Sorcerer")
        }

        event: {
            name: "turn 26"
            do: ->
                TS_SPAWN1("Goblin Rouser"), TS_SPAWN1("Goblin Spearman"), TS_SPAWN1("Goblin Spearman"), TS_SPAWN1("Goblin Spearman"), TS_SPAWN1("Goblin Spearman"), TS_SPAWN1("Goblin Spearman"), TS_SPAWN1("Goblin Spearman")
                TS_SWAMP_SPAWN("Cuttle Fish")
                TS_SPAWN2("Goblin Rouser"), TS_SPAWN2("Goblin Spearman"), TS_SPAWN2("Goblin Spearman"), TS_SPAWN2("Goblin Spearman"), TS_SPAWN2("Goblin Spearman"), TS_SPAWN2("Goblin Spearman"), TS_SPAWN2("Goblin Spearman")
        }
    }


Multiplayer{
    id: "multiplayer_6p_Team_Survival"
    name: _ "6p — Team Survival"
    map: "multiplayer/maps/6p_Team_Survival.map"
    description: _ "Scenario where the objective is to survive for as long as possible."
    experience_modifier: 70
    turns: 32
    victory_when_enemies_defeated: true
    random_start_time: "no"
    define: "6P_TEAM_SURVIVAL_LOAD"

    <if 6P_TEAM_SURVIVAL_LOAD then {
        <DEFAULT_MUSIC_PLAYLIST!
        <DEFAULT_SCHEDULE!
    }

    side: {
        user_team_name: _ "Attacker"
        side: 1
        team_name: "Attacker"
        canrecruit: true
        controller: "ai"
        gold: 1000
        income: 47
        allow_player: false
        disallow_observers: true
        ai: {
            leader_value: 7.0
            aggression: 0.99
            caution: 0.0
        }
    }

    side: {
        user_team_name: _ "Defender"
        side: 2
        team_name: "Defenders"
        canrecruit: true
        controller: "human"
        gold: 125
        income: -2
        ai: {
            villages_per_scout: 0
        }
    }

    side: {
        user_team_name: _ "Defender"
        side: 3
        team_name: "Defenders"
        canrecruit: true
        controller: "human"
        gold: 125
        income: -2
        ai: {
            villages_per_scout: 0
        }
    }

    side: {
        user_team_name: _ "Defender"
        side: 4
        team_name: "Defenders"
        canrecruit: true
        controller: "human"
        gold: 125
        income: -2
        ai: {
            villages_per_scout: 0
        }
    }

    side: {
        user_team_name: _ "Defender"
        side: 5
        team_name: "Defenders"
        canrecruit: true
        controller: "human"
        gold: 125
        income: -2
        ai: {
            villages_per_scout: 0
        }
    }

    side: {
        user_team_name: _ "Defender"
        side: 6
        team_name: "Defenders"
        canrecruit: true
        controller: "human"
        gold: 125
        income: -2
        ai: {
            villages_per_scout: 0
        }
    }

    side: {
        user_team_name: _ "Defender"
        side: 7
        team_name: "Defenders"
        canrecruit: true
        controller: "human"
        gold: 125
        income: -2
        ai: {
            villages_per_scout: 0
        }
    }

    <if 6P_TEAM_SURVIVAL_LOAD then {
        event: {
            name: "prestart"
            do: ->
                Objectives{
                    objective: {
                        description: _ "Survive all enemy attacks"
                        show_turn_counter: true
                        condition: "win"
                    }

                    objective: {
                        description: _ "Death of your team leaders"
                        condition: "lose"
                    }

                    note: {
                        description: _ "Hint: Learning the enemy spawn points and types helps a lot."
                    }
                }

                Label{
                    x: 24, y: 18
                    text: _ "Turn 2: Loyalists"
                }

                Label{
                    x: 27, y: 20
                    text: _ "Turn 5: Knalgans"
                }

                Label{
                    x: 27, y: 23
                    text: _ "Turn 8: Rebels"
                }

                Label{
                    x: 24, y: 24
                    text: _ "Turn 11: Northerners"
                }

                Label{
                    x: 21, y: 23
                    text: _ "Turn 14: Drakes"
                }

                Label{
                    x: 21, y: 20
                    text: _ "Turn 17: Undead"
                }

                Label{
                    x: 24, y: 21
                    text: _ "Tower of Doom"
                }
        }

        event: {
            name: "start"
            do: ->
                If{
                    have_unit: {
                        side: 7
                    }
                    have_unit: {
                        side: 2
                    }
                    then: ->
                        IF_ALLIED(7, 2, MODIFY_TERRAIN_MASK(7, 13, "#{TS_WALL_MASK_NORTH_WEST}", {}))
                    
                }

                If{
                    have_unit: {
                        side: 2
                    }
                    have_unit: {
                        side: 3
                    }
                    then: ->
                        IF_ALLIED(2, 3, MODIFY_TERRAIN_MASK(23, 6, "#{TS_WALL_MASK_NORTH}", {border: false}))
                    
                }

                If{
                    have_unit: {
                        side: 3
                    }
                    have_unit: {
                        side: 4
                    }
                    then: ->
                        IF_ALLIED(3, 4, MODIFY_TERRAIN_MASK(29, 13, "#{TS_WALL_MASK_NORTH_EAST}", {border: false}))
                    
                }

                If{
                    have_unit: {
                        side: 4
                    }
                    have_unit: {
                        side: 5
                    }
                    then: ->
                        IF_ALLIED(4, 5, MODIFY_TERRAIN_MASK(29, 23, "#{TS_WALL_MASK_SOUTH_EAST}", {border: false}))
                    
                }

                If{
                    have_unit: {
                        side: 5
                    }
                    have_unit: {
                        side: 6
                    }
                    then: ->
                        IF_ALLIED(5, 6, MODIFY_TERRAIN_MASK(23, 26, "#{TS_WALL_MASK_SOUTH}", {border: false}))
                    
                }

                If{
                    have_unit: {
                        side: 6
                    }
                    have_unit: {
                        side: 7
                    }
                    then: ->
                        IF_ALLIED(6, 7, MODIFY_TERRAIN_MASK(7, 23, "#{TS_WALL_MASK_SOUTH_WEST}", {border: false}))
                    
                }
        }

        <TS_SPAWNS!

        event: {
            name: "turn 25"
            do: ->
                EARTHQUAKE(MODIFY_TERRAIN_MASK(17, 15, "#{TS_CASTLE_MASK}", {border: false}))
        }

        event: {
            name: "turn 26"
            do: ->
                EARTHQUAKE({
                        <IF_ALIVE(2, MODIFY_TERRAIN_MASK(19, 16, "#{TS_OPEN_MASK_NORTH_WEST}", {border: false}))
                        <IF_ALIVE(3, MODIFY_TERRAIN_MASK(25, 17, "#{TS_OPEN_MASK_NORTH_EAST}", {border: false}))
                        <IF_ALIVE(4, MODIFY_TERRAIN_MASK(29, 20, "#{TS_OPEN_MASK_EAST}", {border: false}))
                        <IF_ALIVE(5, MODIFY_TERRAIN_MASK(25, 23, "#{TS_OPEN_MASK_SOUTH_EAST}", {border: false}))
                        <IF_ALIVE(6, MODIFY_TERRAIN_MASK(19, 23, "#{TS_OPEN_MASK_SOUTH_WEST}", {border: false}))
                        <IF_ALIVE(7, MODIFY_TERRAIN_MASK(19, 20, "#{TS_OPEN_MASK_WEST}", {border: false}))
                })
        }

        event: {
            name: "turn 32"

-- wmllint: local spellings Faery roze roze.mine.nu
            do: ->
                Message{
                    speaker: "narrator"
                    caption: _ "Faery"
                    message: _ "Congratulations for surviving the map that so many people claim is impossible!"
                    image: "portraits/elves/lady.png"
                }

                Endlevel{
                    result: "victory"
                }
        }

        event: {
            name: "defeat"
            do: ->
                Message{
                    speaker: "narrator"
                    caption: _ "Death"
-- wmllint: local spelling *Muahahaha*
                    message: _ "You have lost this game, but fear not. You can always try again. And again. And again. *Muahahaha*"
                    image: "portraits/undead/spectre.png"
                }
        }
    }
}

if 6P_TEAM_SURVIVAL_LOAD
    TS_WALL_MASK_NORTH = nil
    TS_WALL_MASK_NORTH_EAST = nil
    TS_WALL_MASK_NORTH_WEST = nil
    TS_WALL_MASK_SOUTH = nil
    TS_WALL_MASK_SOUTH_EAST = nil
    TS_WALL_MASK_SOUTH_WEST = nil
    TS_CASTLE_MASK = nil
    TS_OPEN_MASK_NORTH_WEST = nil
    TS_OPEN_MASK_NORTH_EAST = nil
    TS_OPEN_MASK_EAST = nil
    TS_OPEN_MASK_SOUTH_WEST = nil
    TS_OPEN_MASK_SOUTH_EAST = nil
    TS_OPEN_MASK_WEST = nil
    TS_SPAWN1 = nil
    TS_SPAWN2 = nil
    TS_SWAMP_SPAWN = nil
    TS_LAKE_SPAWN = nil
    TS_HOME_SPAWN = nil
    TS_SPAWNS = nil
