# This is a companion test to "sighted_on_opponents_turn".
# It checks that when a certain flag is not set,
# we do indeed fail the test.

[test]
    name = "Unit Test sighted_on_opponents_turn_fail"
    map_data = "{test/maps/sighted_events.map}"
    turns = 4
    id = sighted_on_opponents_turn_fail
    random_start_time = no

    {DAWN}

    [side]
       side=1
       controller=human
       name = "Alice"
       type = Elvish Archer
       id=alice
       fog=yes
    [/side]
    [side]
       side=2
       controller=human
       name = "Bob"
       type = Orcish Grunt
       id=bob
       fog=yes
    [/side]

    [event]
        name = prestart
        {VARIABLE sighted_should_trigger no}
    [/event]

    [event]
        name = sighted
        {ASSERT ({VARIABLE_CONDITIONAL unit.id equals bob})}
        {ASSERT ({VARIABLE_CONDITIONAL second_unit.id equals alice})}
        {RETURN ({VARIABLE_CONDITIONAL sighted_should_trigger boolean_equals yes})}
    [/event]

    #Alice moves towards Bob.
    [event]
        name = side 1 turn 1 refresh
        [do_command]
            [move]
                x=1,2,3,4,5,6,7
                y=3,3,3,3,3,3,3
            [/move]
        [/do_command]
    [/event]

    #Bob moves to be seen by alice, but doesnt see her himself.
    [event]
        name = side 2 turn 1 refresh
        #{VARIABLE sighted_should_trigger yes} <-- With this line commented the test should fail.
        [do_command]
            [move]
                x=16,15,14
                y=3,3,3
            [/move]
        [/do_command]
        [do_command]
            [move]
                x=14,15,16
                y=3,3,3
            [/move]
        [/do_command]
    [/event]

    #If we got this far without triggering sighted, we fail the test.
    [event]
        name = side 1 turn 2
        {RETURN ([false][/false])}
    [/event]

    #This makes the sides pass their turns, when the other events have taken place.
    [event]
        name = side turn
        first_time_only = no
        [end_turn]
        [/end_turn]
    [/event]
[/test]
