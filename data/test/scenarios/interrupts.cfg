
{GENERIC_UNIT_TEST check_interrupts_break (
	[event]
		name=start
		{VARIABLE x 0}
		[while]
			[true][/true]
			[do]
				[if]
					{VARIABLE_CONDITIONAL x greater_than 5}
					[then]
						[break][/break]
					[/then]
				[/if]
				{VARIABLE_OP x add 1}
			[/do]
		[/while]
		{RETURN ({VARIABLE_CONDITIONAL x equals 6})}
	[/event]
)}

{GENERIC_UNIT_TEST check_interrupts_return (
	[event]
		name=start
		{VARIABLE x 0}
		[while]
			[true][/true]
			[do]
				[if]
					{VARIABLE_CONDITIONAL x greater_than 5}
					[then]
						[return][/return]
					[/then]
				[/if]
				{VARIABLE_OP x add 1}
			[/do]
		[/while]
		{RETURN ([false][/false])}
	[/event]
	[event]
		name=start
		{RETURN ({VARIABLE_CONDITIONAL x equals 6})}
	[/event]
)}

{GENERIC_UNIT_TEST check_interrupts_continue (
	[event]
		name=start
		{VARIABLE x 0}
		[while]
			{VARIABLE_CONDITIONAL x less_than 1}
			[do]
				{VARIABLE_OP x add 1}
				[continue][/continue]
				{RETURN ([false][/false])}
			[/do]
		[/while]
		{RETURN ([true][/true])}
	[/event]
)}

{GENERIC_UNIT_TEST check_interrupts_break_global (
	[event]
		name=start
		[break][/break]
		{RETURN ([false][/false])}
	[/event]
	[event]
		name=start
		{RETURN ([true][/true])}
	[/event]
)}

{GENERIC_UNIT_TEST check_interrupts_continue_global (
	[event]
		name=start
		[lua]
			code=<<
				local H = wesnoth.require "lua/helper.lua"
				local A = H.set_wml_action_metatable{}
				local function continue()
					A.continue{}
				end
				-- Use pcall() to trap the WML error raised by continue in global scope
				local err, res = pcall(continue)
				if err then wesnoth.fire_event "success"
				else wesnoth.fire_event "fail" end
			>>
		[/lua]
	[/event]
	[event]
		name=success
		{RETURN ([true][/true])}
	[/event]
	[event]
		name=fail
		{RETURN ([false][/false])}
	[/event]
)}

{GENERIC_UNIT_TEST check_interrupts_return_nested (
	[event]
		name=start
		[command]
			[return][/return]
			{RETURN ([false][/false])}
		[/command]
		{RETURN ([false][/false])}
	[/event]
	[event]
		name=start
		{RETURN ([true][/true])}
	[/event]
)}
