# This test checks that sighted events are being triggered
# at the appropriate time. An elvish archer moves towards
# and discovers an orcish grunt.
# We pass if the elvish archer is the discoverer, and the
# variable "sighted_should_trigger" is set.
# A companion test checks that we fail if we don't set that
# flag.

[test]
    name = "Unit Test sighted_events"
    map_data = "{test/maps/sighted_events.map}"
    turns = 4
    id = sighted_events
    random_start_time = no

    {DAWN}

    [side]
       side=1
       controller=human
       name = "Alice"
       type = Elvish Archer
       id=alice
       fog=yes
    [/side]
    [side]
       side=2
       controller=human
       name = "Bob"
       type = Orcish Grunt
       id=bob
       fog=yes
    [/side]

    [event]
        name = prestart
        {VARIABLE sighted_should_trigger no}
    [/event]

    [event]
        name = sighted
        {ASSERT ({VARIABLE_CONDITIONAL unit.id equals bob})}
        {ASSERT ({VARIABLE_CONDITIONAL second_unit.id equals alice})}
        {RETURN ({VARIABLE_CONDITIONAL sighted_should_trigger boolean_equals yes})}
    [/event]

    #Alice moves towards Bob.
    [event]
        name = side 1 turn 1 refresh
        [do_command]
            [move]
                x=1,2,3,4,5,6,7
                y=3,3,3,3,3,3,3
            [/move]
        [/do_command]
    [/event]

    #Bob moves down, then up.
    [event]
        name = side 2 turn 1 refresh
        [do_command]
            [move]
                x=16,16,16
                y=3,4,5
            [/move]
        [/do_command]
        [do_command]
            [move]
                x=16,16,16
                y=5,4,3
            [/move]
        [/do_command]
    [/event]

    #Alice discovers Bob.
    [event]
        name = side 1 turn 2 refresh
        [do_command]
            [move]
                x=7,8
                y=3,3
            [/move]
        [/do_command]
        #With the next stop Bob should be visible.
        {VARIABLE sighted_should_trigger yes}
        [do_command]
            [move]
                x=8,9
                y=3,3
            [/move]
        [/do_command]
    [/event]

    #If we got this far without triggering sighted, we fail the test.
    [event]
        name = side 2 turn 2
        {RETURN ([false][/false])}
    [/event]

    #This makes the sides pass their turns, when the other events have taken place.
    [event]
        name = side turn
        first_time_only = no
        [end_turn]
        [/end_turn]
    [/event]
[/test]
