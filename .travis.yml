language: cpp

compiler:
    - gcc
    - clang

env:
    - ALTERNATE_CONFIGURATION=false
    - ALTERNATE_CONFIGURATION=true

matrix:
  exclude:
    - compiler: gcc
      env: ALTERNATE_CONFIGURATION=true

before_install:
    - export TARGETS="wesnoth wesnothd campaignd test"
    - export WML_TESTS=true
    - export CPP_TESTS=true
    - export CHECK_UTF8=true
    - export PLAY_TEST=true
    - export STRICT_COMPILATION=true
    - export EXTRA_FLAGS_RELEASE="-O0"
    - export WML_TEST_TIME=40
    - if [ "$ALTERNATE_CONFIGURATION" = true ]; then export STRICT_COMPILATION=false; fi
    - if [ "$ALTERNATE_CONFIGURATION" = true ]; then export EXTRA_FLAGS_RELEASE=""; fi
    - if [ "$ALTERNATE_CONFIGURATION" = true ]; then export WML_TEST_TIME=20; fi
    - if [ "$CXX" = "g++" ]; then export WML_TESTS=false; fi
    - if [ "$CXX" = "g++" ]; then export PLAY_TEST=false; fi
    - if [ "$CXX" = "g++" ]; then export CHECK_UTF8=false; fi
#    - if [ "$CXX" = "g++" ]; then time sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y; fi

install:
    - time sudo apt-get update -qq
    - time sudo apt-get install -qq libboost-iostreams-dev libboost-program-options-dev libboost-regex-dev libboost-system-dev libboost-test-dev libcairo2-dev libfribidi-dev libpango1.0-dev libsdl-image1.2-dev libsdl-mixer1.2-dev libsdl-net1.2-dev libsdl-ttf2.0-dev gdb
#    - if [ "$CXX" = "g++" ]; then time sudo apt-get install g++-4.8; fi
#    - if [ "$CXX" = "g++" ]; then export CXX="g++-4.8"; fi
    - if [ "$CHECK_UTF8" = true ]; then time sudo apt-get install -qq moreutils; fi

script: 
    - if [ "$CHECK_UTF8" = true ]; then time ./utils/travis/check_utf8.sh; fi
    - time ./utils/travis/utf8_bom_dog.sh
    - scons cxxtool=$CXX --debug=time build=release extra_flags_release="$EXTRA_FLAGS_RELEASE" strict=$STRICT_COMPILATION $TARGETS
    - "export DISPLAY=:99.0"
    - "sh -e /etc/init.d/xvfb start"
    - if [ "$CPP_TESTS" = true ]; then time ./utils/travis/test_executor.sh; fi
    - if [ "$WML_TESTS" = true ]; then time ./run_wml_tests -g -v -t "$WML_TEST_TIME"; fi
    - if [ "$PLAY_TEST" = true ]; then time ./utils/travis/play_test_executor.sh; fi

after_failure:
    - if [ -f "errors.log" ]; then echo -e "\n*** \n*\n* Errors reported in wml unit tests, here is errors.log...\n*\n*** \n"; cat errors.log; fi

notifications:
    email: false
    irc:
        channels:
            - "chat.freenode.net#wesnoth-dev"
        template:
            - "\x02%{repository}\x0f#\x0312%{build_number}\x0f (\x0307%{branch}\x0f - \x02%{commit}\x0f : \x0303%{author}\x0f): \x02%{message}\x0f"
            - "Build details : \x0302%{build_url}\x0f"
        on_success: change
        on_failure: always
